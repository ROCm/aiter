; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external addrspace(3) global [0 x i8], align 16

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_gemm_afp4_wfp4_kernel(ptr addrspace(1) inreg readonly captures(none) %0, ptr addrspace(1) inreg readonly captures(none) %1, ptr addrspace(1) inreg writeonly captures(none) %2, ptr addrspace(1) inreg readonly captures(none) %3, ptr addrspace(1) inreg readonly captures(none) %4, i32 inreg %5, i32 inreg %6, ptr addrspace(1) inreg readnone captures(none) %7) local_unnamed_addr #0 !dbg !4 {
  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %10 = add i32 %6, 127, !dbg !8
  %11 = sdiv i32 %10, 128, !dbg !12
  %.frozen = freeze i32 %11, !dbg !13
  %12 = sdiv i32 %9, %.frozen, !dbg !13
  %13 = mul i32 %12, %.frozen, !dbg !17
  %.decomposed = sub i32 %9, %13, !dbg !17
  %14 = shl i32 %12, 5, !dbg !18
  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !19
  %16 = and i32 %15, 63, !dbg !19
  %17 = and i32 %15, 16, !dbg !19
  %18 = and i32 %15, 32, !dbg !19
  %19 = lshr i32 %15, 4, !dbg !19
  %20 = and i32 %19, 15, !dbg !19
  %21 = or disjoint i32 %20, 16, !dbg !19
  %22 = shl i32 %15, 4, !dbg !19
  %23 = and i32 %22, 16, !dbg !19
  %24 = or disjoint i32 %14, %20, !dbg !20
  %25 = or disjoint i32 %14, %21, !dbg !20
  %26 = or disjoint i32 %14, %23, !dbg !20
  %27 = srem i32 %24, %5, !dbg !21
  %28 = srem i32 %25, %5, !dbg !21
  %29 = srem i32 %26, %5, !dbg !21
  %30 = shl nsw i32 %.decomposed, 7, !dbg !22
  %31 = shl i32 %15, 3, !dbg !23
  %32 = and i32 %22, 48, !dbg !23
  %33 = and i32 %22, 64, !dbg !23
  %34 = and i32 %22, 112, !dbg !23
  %35 = or disjoint i32 %30, %20, !dbg !24
  %36 = or disjoint i32 %30, %21, !dbg !24
  %37 = or disjoint i32 %35, 32, !dbg !24
  %38 = or disjoint i32 %35, 48, !dbg !24
  %39 = or disjoint i32 %35, 64, !dbg !24
  %40 = or disjoint i32 %35, 80, !dbg !24
  %41 = or disjoint i32 %35, 96, !dbg !24
  %42 = or disjoint i32 %35, 112, !dbg !24
  %43 = or disjoint i32 %30, %34, !dbg !24
  %44 = srem i32 %35, %6, !dbg !25
  %45 = srem i32 %36, %6, !dbg !25
  %46 = srem i32 %37, %6, !dbg !25
  %47 = srem i32 %38, %6, !dbg !25
  %48 = srem i32 %39, %6, !dbg !25
  %49 = srem i32 %40, %6, !dbg !25
  %50 = srem i32 %41, %6, !dbg !25
  %51 = srem i32 %42, %6, !dbg !25
  %52 = srem i32 %43, %6, !dbg !25
  %53 = and i32 %22, 128, !dbg !26
  %54 = and i32 %22, 240, !dbg !26
  %55 = shl i32 %27, 13, !dbg !27
  %56 = shl i32 %28, 13, !dbg !27
  %57 = shl i32 %44, 13, !dbg !28
  %58 = shl i32 %45, 13, !dbg !28
  %59 = shl i32 %46, 13, !dbg !28
  %60 = shl i32 %47, 13, !dbg !28
  %61 = shl i32 %48, 13, !dbg !28
  %62 = shl i32 %49, 13, !dbg !28
  %63 = shl i32 %50, 13, !dbg !28
  %64 = shl i32 %51, 13, !dbg !28
  %65 = or disjoint i32 %57, %54, !dbg !28
  %66 = or disjoint i32 %58, %54, !dbg !28
  %67 = or disjoint i32 %59, %54, !dbg !28
  %68 = or disjoint i32 %60, %54, !dbg !28
  %69 = or disjoint i32 %61, %54, !dbg !28
  %70 = or disjoint i32 %62, %54, !dbg !28
  %71 = or disjoint i32 %63, %54, !dbg !28
  %72 = or disjoint i32 %64, %54, !dbg !28
  %73 = shl i32 %15, 4, !dbg !29
  %74 = and i32 %73, 4064, !dbg !29
  %75 = or disjoint i32 %74, 4096, !dbg !29
  %76 = or disjoint i32 %74, 8192, !dbg !29
  %77 = or disjoint i32 %74, 12288, !dbg !29
  %78 = add i32 %29, %74, !dbg !29
  %79 = add i32 %29, %75, !dbg !29
  %80 = add i32 %29, %76, !dbg !29
  %81 = add i32 %29, %77, !dbg !29
  %82 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3, i16 24576, i32 2147483646, i32 159744), !dbg !30
  %83 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %82, i32 %78, i32 0, i32 0), !dbg !30
  %84 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %82, i32 %79, i32 0, i32 0), !dbg !30
  %85 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %82, i32 %80, i32 0, i32 0), !dbg !30
  %86 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %82, i32 %81, i32 0, i32 0), !dbg !30
  %87 = xor i32 %22, %31, !dbg !30
  %88 = and i32 %87, 16, !dbg !30
  %89 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %88, !dbg !30
  %90 = getelementptr inbounds nuw i8, ptr addrspace(3) %89, i32 %74, !dbg !30
  store <4 x i32> %83, ptr addrspace(3) %90, align 16, !dbg !30
  %91 = getelementptr inbounds nuw i8, ptr addrspace(3) %90, i32 4096, !dbg !30
  store <4 x i32> %84, ptr addrspace(3) %91, align 16, !dbg !30
  %92 = getelementptr inbounds nuw i8, ptr addrspace(3) %90, i32 8192, !dbg !30
  store <4 x i32> %85, ptr addrspace(3) %92, align 16, !dbg !30
  %93 = getelementptr inbounds nuw i8, ptr addrspace(3) %90, i32 12288, !dbg !30
  store <4 x i32> %86, ptr addrspace(3) %93, align 16, !dbg !30
  %94 = lshr i32 %15, 3, !dbg !31
  %95 = and i32 %94, 31, !dbg !31
  %96 = mul nuw nsw i32 %95, 53248, !dbg !32
  %97 = add nuw nsw i32 %96, 1703936, !dbg !32
  %98 = add nuw nsw i32 %96, 3407872, !dbg !32
  %99 = add nuw nsw i32 %96, 5111808, !dbg !32
  %100 = add nuw nsw i32 %96, 6815744, !dbg !32
  %101 = add nuw nsw i32 %96, 8519680, !dbg !32
  %102 = add nuw nsw i32 %96, 10223616, !dbg !32
  %103 = add nuw nsw i32 %96, 11927552, !dbg !32
  %104 = add nuw nsw i32 %96, 13631488, !dbg !32
  %105 = add nuw nsw i32 %96, 15335424, !dbg !32
  %106 = add nuw nsw i32 %96, 17039360, !dbg !32
  %107 = add nuw nsw i32 %96, 18743296, !dbg !32
  %108 = add nuw nsw i32 %96, 20447232, !dbg !32
  %109 = add nuw nsw i32 %96, 22151168, !dbg !32
  %110 = add nuw nsw i32 %96, 23855104, !dbg !32
  %111 = add nuw nsw i32 %96, 25559040, !dbg !32
  %112 = add i32 %52, %96, !dbg !32
  %113 = add i32 %97, %52, !dbg !32
  %114 = add i32 %98, %52, !dbg !32
  %115 = add i32 %99, %52, !dbg !32
  %116 = add i32 %100, %52, !dbg !32
  %117 = add i32 %101, %52, !dbg !32
  %118 = add i32 %102, %52, !dbg !32
  %119 = add i32 %103, %52, !dbg !32
  %120 = add i32 %104, %52, !dbg !32
  %121 = add i32 %105, %52, !dbg !32
  %122 = add i32 %106, %52, !dbg !32
  %123 = add i32 %107, %52, !dbg !32
  %124 = add i32 %108, %52, !dbg !32
  %125 = add i32 %109, %52, !dbg !32
  %126 = add i32 %110, %52, !dbg !32
  %127 = add i32 %111, %52, !dbg !32
  %128 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %4, i16 24576, i32 2147483646, i32 159744), !dbg !30
  %129 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %112, i32 0, i32 0), !dbg !30
  %130 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %113, i32 0, i32 0), !dbg !30
  %131 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %114, i32 0, i32 0), !dbg !30
  %132 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %115, i32 0, i32 0), !dbg !30
  %133 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %116, i32 0, i32 0), !dbg !30
  %134 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %117, i32 0, i32 0), !dbg !30
  %135 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %118, i32 0, i32 0), !dbg !30
  %136 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %119, i32 0, i32 0), !dbg !30
  %137 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %120, i32 0, i32 0), !dbg !30
  %138 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %121, i32 0, i32 0), !dbg !30
  %139 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %122, i32 0, i32 0), !dbg !30
  %140 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %123, i32 0, i32 0), !dbg !30
  %141 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %124, i32 0, i32 0), !dbg !30
  %142 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %125, i32 0, i32 0), !dbg !30
  %143 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %126, i32 0, i32 0), !dbg !30
  %144 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %127, i32 0, i32 0), !dbg !30
  %145 = shl i32 %15, 1, !dbg !30
  %146 = xor i32 %22, %145, !dbg !30
  %147 = and i32 %146, 112, !dbg !30
  %148 = shl nuw nsw i32 %95, 7, !dbg !30
  %149 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %147, !dbg !30
  %150 = getelementptr inbounds nuw i8, ptr addrspace(3) %149, i32 %148, !dbg !30
  store <4 x i32> %129, ptr addrspace(3) %150, align 16, !dbg !30
  %151 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 4096, !dbg !30
  store <4 x i32> %130, ptr addrspace(3) %151, align 16, !dbg !30
  %152 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 8192, !dbg !30
  store <4 x i32> %131, ptr addrspace(3) %152, align 16, !dbg !30
  %153 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 12288, !dbg !30
  store <4 x i32> %132, ptr addrspace(3) %153, align 16, !dbg !30
  %154 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 16384, !dbg !30
  store <4 x i32> %133, ptr addrspace(3) %154, align 16, !dbg !30
  %155 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 20480, !dbg !30
  store <4 x i32> %134, ptr addrspace(3) %155, align 16, !dbg !30
  %156 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 24576, !dbg !30
  store <4 x i32> %135, ptr addrspace(3) %156, align 16, !dbg !30
  %157 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 28672, !dbg !30
  store <4 x i32> %136, ptr addrspace(3) %157, align 16, !dbg !30
  %158 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 32768, !dbg !30
  store <4 x i32> %137, ptr addrspace(3) %158, align 16, !dbg !30
  %159 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 36864, !dbg !30
  store <4 x i32> %138, ptr addrspace(3) %159, align 16, !dbg !30
  %160 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 40960, !dbg !30
  store <4 x i32> %139, ptr addrspace(3) %160, align 16, !dbg !30
  %161 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 45056, !dbg !30
  store <4 x i32> %140, ptr addrspace(3) %161, align 16, !dbg !30
  %162 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 49152, !dbg !30
  store <4 x i32> %141, ptr addrspace(3) %162, align 16, !dbg !30
  %163 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 53248, !dbg !30
  store <4 x i32> %142, ptr addrspace(3) %163, align 16, !dbg !30
  %164 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 57344, !dbg !30
  store <4 x i32> %143, ptr addrspace(3) %164, align 16, !dbg !30
  %165 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 61440, !dbg !30
  store <4 x i32> %144, ptr addrspace(3) %165, align 16, !dbg !30
  %and.ra = and i32 %15, 48, !dbg !33
  %166 = xor i32 %54, %and.ra, !dbg !33
  %and.ra20 = and i32 %15, 192, !dbg !33
  %167 = xor i32 %166, %and.ra20, !dbg !33
  %168 = shl nuw nsw i32 %20, 8, !dbg !33
  %169 = or disjoint i32 %168, 4096, !dbg !33
  %170 = or disjoint i32 %54, %168, !dbg !33
  %171 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %170, !dbg !33
  %172 = or disjoint i32 %54, %169, !dbg !33
  %173 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %172, !dbg !33
  %174 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %0, i16 24576, i32 2147483646, i32 159744), !dbg !33
  %gepdiff = sub nsw i32 %167, %54, !dbg !33
  %.lhs.trunc = trunc nsw i32 %gepdiff to i16, !dbg !33
  %175 = ashr exact i16 %.lhs.trunc, 4, !dbg !33
  %.sext = sext i16 %175 to i32, !dbg !33
  %176 = add nsw i32 %16, %.sext, !dbg !33
  %177 = shl nsw i32 %.sext, 4, !dbg !33
  %178 = add nsw i32 %177, %54, !dbg !27
  %179 = add i32 %178, %55, !dbg !33
  %180 = tail call i64 @llvm.amdgcn.ballot.i64(i1 true), !dbg !33
  %181 = zext nneg i32 %176 to i64, !dbg !33
  %182 = lshr i64 %180, %181, !dbg !33
  %183 = trunc i64 %182 to i1, !dbg !33
  %184 = select i1 %183, i32 %179, i32 -2147483648, !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %174, ptr addrspace(3) %171, i32 16, i32 %184, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %185 = add i32 %178, %56, !dbg !33
  %186 = select i1 %183, i32 %185, i32 -2147483648, !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %174, ptr addrspace(3) nonnull %173, i32 16, i32 %186, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %187 = or disjoint i32 %168, 8192, !dbg !37
  %188 = or disjoint i32 %168, 12288, !dbg !37
  %189 = or disjoint i32 %168, 16384, !dbg !37
  %190 = or disjoint i32 %168, 20480, !dbg !37
  %191 = or disjoint i32 %168, 24576, !dbg !37
  %192 = or disjoint i32 %168, 28672, !dbg !37
  %193 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %170, !dbg !37
  %194 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %172, !dbg !37
  %195 = or disjoint i32 %54, %187, !dbg !37
  %196 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %195, !dbg !37
  %197 = or disjoint i32 %54, %188, !dbg !37
  %198 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %197, !dbg !37
  %199 = or disjoint i32 %54, %189, !dbg !37
  %200 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %199, !dbg !37
  %201 = or disjoint i32 %54, %190, !dbg !37
  %202 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %201, !dbg !37
  %203 = or disjoint i32 %54, %191, !dbg !37
  %204 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %203, !dbg !37
  %205 = or disjoint i32 %54, %192, !dbg !37
  %206 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %205, !dbg !37
  %207 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %1, i16 24576, i32 2147483646, i32 159744), !dbg !37
  %208 = add i32 %65, %177, !dbg !37
  %209 = select i1 %183, i32 %208, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %207, ptr addrspace(3) %193, i32 16, i32 %209, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %210 = add i32 %66, %177, !dbg !37
  %211 = select i1 %183, i32 %210, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %207, ptr addrspace(3) nonnull %194, i32 16, i32 %211, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %212 = add i32 %67, %177, !dbg !37
  %213 = select i1 %183, i32 %212, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %207, ptr addrspace(3) nonnull %196, i32 16, i32 %213, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %214 = add i32 %68, %177, !dbg !37
  %215 = select i1 %183, i32 %214, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %207, ptr addrspace(3) nonnull %198, i32 16, i32 %215, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %216 = add i32 %69, %177, !dbg !37
  %217 = select i1 %183, i32 %216, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %207, ptr addrspace(3) nonnull %200, i32 16, i32 %217, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %218 = add i32 %70, %177, !dbg !37
  %219 = select i1 %183, i32 %218, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %207, ptr addrspace(3) nonnull %202, i32 16, i32 %219, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %220 = add i32 %71, %177, !dbg !37
  %221 = select i1 %183, i32 %220, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %207, ptr addrspace(3) nonnull %204, i32 16, i32 %221, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %222 = add i32 %72, %177, !dbg !37
  %223 = select i1 %183, i32 %222, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %207, ptr addrspace(3) nonnull %206, i32 16, i32 %223, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %224 = and i32 %15, 15
  %225 = icmp eq i32 %17, 0
  %226 = select i1 %225, i32 0, i32 48
  %227 = icmp eq i32 %18, 0
  %228 = shl nuw nsw i32 %18, 1
  %invariant.op = or disjoint i32 %228, %224, !dbg !30
  %invariant.op29 = or disjoint i32 %invariant.op, %226, !dbg !30
  %229 = or disjoint i32 %224, 16
  %230 = xor i32 %226, %229
  %invariant.op31 = or disjoint i32 %228, %230, !dbg !30
  %231 = lshr i32 %15, 2
  %232 = and i32 %231, 48
  %233 = or disjoint i32 %232, %224
  %234 = select i1 %225, i32 0, i32 144
  %235 = select i1 %227, i32 0, i32 288
  %236 = or disjoint i32 %235, %234
  %237 = xor i32 %236, %233
  %238 = or disjoint i32 %233, 64
  %239 = xor i32 %236, %238
  %240 = or disjoint i32 %239, 1024
  %241 = shl nuw nsw i32 %224, 8
  %242 = or disjoint i32 %32, 64
  %243 = xor i32 %242, %33
  %244 = or disjoint i32 %243, %53
  %245 = xor i32 %244, %and.ra
  %246 = or disjoint i32 %34, 128
  %247 = or disjoint i32 %53, %and.ra
  %248 = xor i32 %247, %246
  %249 = or disjoint i32 %32, 192
  %250 = or disjoint i32 %33, %and.ra
  %251 = or disjoint i32 %250, %53
  %252 = xor i32 %251, %249
  %253 = shl i32 %15, 8
  %254 = and i32 %253, 3840
  %255 = or disjoint i32 %254, 4096
  %256 = shl nuw nsw i32 %233, 8
  %257 = or disjoint i32 %256, 16384
  br label %258, !dbg !30

258:                                              ; preds = %8, %258
  %259 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), %8 ], [ %416, %258 ]
  %260 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), %8 ], [ %391, %258 ]
  %261 = phi i32 [ 0, %8 ], [ %285, %258 ]
  %262 = phi ptr addrspace(1) [ %1, %8 ], [ %282, %258 ]
  %263 = phi ptr addrspace(1) [ %0, %8 ], [ %281, %258 ]
  %264 = phi float [ 0.000000e+00, %8 ], [ %527, %258 ]
  %265 = phi float [ 0.000000e+00, %8 ], [ %528, %258 ]
  %266 = phi float [ 0.000000e+00, %8 ], [ %529, %258 ]
  %267 = phi float [ 0.000000e+00, %8 ], [ %530, %258 ]
  %268 = phi float [ 0.000000e+00, %8 ], [ %539, %258 ]
  %269 = phi float [ 0.000000e+00, %8 ], [ %540, %258 ]
  %270 = phi float [ 0.000000e+00, %8 ], [ %541, %258 ]
  %271 = phi float [ 0.000000e+00, %8 ], [ %542, %258 ]
  %272 = phi float [ 0.000000e+00, %8 ], [ %551, %258 ]
  %273 = phi float [ 0.000000e+00, %8 ], [ %552, %258 ]
  %274 = phi float [ 0.000000e+00, %8 ], [ %553, %258 ]
  %275 = phi float [ 0.000000e+00, %8 ], [ %554, %258 ]
  %276 = phi float [ 0.000000e+00, %8 ], [ %563, %258 ]
  %277 = phi float [ 0.000000e+00, %8 ], [ %564, %258 ]
  %278 = phi float [ 0.000000e+00, %8 ], [ %565, %258 ]
  %279 = phi float [ 0.000000e+00, %8 ], [ %566, %258 ]
  %280 = phi i32 [ 0, %8 ], [ %567, %258 ]
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49168), !dbg !33
  fence syncscope("workgroup") release, !dbg !33
  tail call void @llvm.amdgcn.s.barrier(), !dbg !33
  fence syncscope("workgroup") acquire, !dbg !33
  %281 = getelementptr i8, ptr addrspace(1) %263, i64 256, !dbg !38
  %282 = getelementptr i8, ptr addrspace(1) %262, i64 256, !dbg !39
  %283 = add i32 %261, 1, !dbg !30
  %284 = icmp slt i32 %283, 2, !dbg !30
  %285 = select i1 %284, i32 %283, i32 0, !dbg !30
  %286 = and i32 %280, 1, !dbg !30
  %287 = shl nuw nsw i32 %286, 9, !dbg !30
  %288 = and i32 %280, 2, !dbg !30
  %289 = shl nuw nsw i32 %288, 9, !dbg !30
  %.reass30 = or disjoint i32 %287, %invariant.op29
  %290 = or disjoint i32 %.reass30, %289, !dbg !30
  %291 = and i32 %280, 4, !dbg !30
  %292 = shl nuw nsw i32 %291, 9, !dbg !30
  %293 = or disjoint i32 %290, %292, !dbg !30
  %294 = and i32 %280, 8, !dbg !30
  %295 = shl nuw nsw i32 %294, 9, !dbg !30
  %296 = icmp samesign ult i32 %280, 16, !dbg !30
  %297 = select i1 %296, i32 0, i32 8192, !dbg !30
  %298 = or disjoint i32 %297, %295, !dbg !30
  %299 = xor i32 %298, %293, !dbg !30
  %300 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %299, !dbg !30
  %301 = load i8, ptr addrspace(3) %300, align 1, !dbg !30
  %302 = or disjoint i32 %290, 128, !dbg !30
  %303 = or disjoint i32 %298, %292, !dbg !30
  %304 = xor i32 %303, %302, !dbg !30
  %305 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %304, !dbg !30
  %306 = load i8, ptr addrspace(3) %305, align 1, !dbg !30
  %307 = or disjoint i32 %290, 256, !dbg !30
  %308 = xor i32 %303, %307, !dbg !30
  %309 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %308, !dbg !30
  %310 = load i8, ptr addrspace(3) %309, align 1, !dbg !30
  %311 = or disjoint i32 %290, 384, !dbg !30
  %312 = xor i32 %303, %311, !dbg !30
  %313 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %312, !dbg !30
  %314 = load i8, ptr addrspace(3) %313, align 1, !dbg !30
  %.reass = or disjoint i32 %287, %invariant.op31
  %315 = or disjoint i32 %289, %.reass, !dbg !30
  %316 = xor i32 %303, %315, !dbg !30
  %317 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %316, !dbg !30
  %318 = load i8, ptr addrspace(3) %317, align 1, !dbg !30
  %319 = or disjoint i32 %.reass, 128, !dbg !30
  %320 = xor i32 %298, %319, !dbg !30
  %321 = xor i32 %320, %289, !dbg !30
  %322 = xor i32 %321, %292, !dbg !30
  %323 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %322, !dbg !30
  %324 = load i8, ptr addrspace(3) %323, align 1, !dbg !30
  %325 = or disjoint i32 %.reass, 256, !dbg !30
  %326 = xor i32 %298, %325, !dbg !30
  %327 = xor i32 %326, %289, !dbg !30
  %328 = xor i32 %327, %292, !dbg !30
  %329 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %328, !dbg !30
  %330 = load i8, ptr addrspace(3) %329, align 1, !dbg !30
  %331 = or disjoint i32 %.reass, 384, !dbg !30
  %332 = xor i32 %298, %331, !dbg !30
  %333 = xor i32 %332, %289, !dbg !30
  %334 = xor i32 %333, %292, !dbg !30
  %335 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %334, !dbg !30
  %336 = load i8, ptr addrspace(3) %335, align 1, !dbg !30
  %337 = shl nuw nsw i32 %286, 11, !dbg !30
  %338 = or disjoint i32 %337, %237, !dbg !30
  %339 = shl nuw nsw i32 %288, 11, !dbg !30
  %340 = or disjoint i32 %338, %339, !dbg !30
  %341 = shl nuw nsw i32 %291, 11, !dbg !30
  %342 = shl nuw nsw i32 %294, 11, !dbg !30
  %343 = select i1 %296, i32 0, i32 32768, !dbg !30
  %344 = or disjoint i32 %341, %340, !dbg !30
  %345 = or i32 %344, %342, !dbg !30
  %346 = or i32 %345, %343, !dbg !30
  %347 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %346, !dbg !30
  %348 = load i8, ptr addrspace(3) %347, align 1, !dbg !30
  %349 = or disjoint i32 %338, 576, !dbg !30
  %350 = or disjoint i32 %341, %349, !dbg !30
  %351 = or i32 %350, %342, !dbg !30
  %352 = or i32 %351, %339, !dbg !30
  %353 = or i32 %352, %343, !dbg !30
  %354 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %353, !dbg !30
  %355 = load i8, ptr addrspace(3) %354, align 1, !dbg !30
  %356 = or disjoint i32 %338, 1024, !dbg !30
  %357 = or disjoint i32 %341, %356, !dbg !30
  %358 = or i32 %357, %342, !dbg !30
  %359 = or i32 %358, %339, !dbg !30
  %360 = or i32 %359, %343, !dbg !30
  %361 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %360, !dbg !30
  %362 = load i8, ptr addrspace(3) %361, align 1, !dbg !30
  %363 = or disjoint i32 %338, 1600, !dbg !30
  %364 = or disjoint i32 %341, %363, !dbg !30
  %365 = or i32 %364, %342, !dbg !30
  %366 = or i32 %365, %339, !dbg !30
  %367 = or i32 %366, %343, !dbg !30
  %368 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %367, !dbg !30
  %369 = load i8, ptr addrspace(3) %368, align 1, !dbg !30
  %370 = or disjoint i32 %337, %239, !dbg !30
  %371 = or disjoint i32 %341, %370, !dbg !30
  %372 = or i32 %371, %342, !dbg !30
  %373 = or i32 %372, %339, !dbg !30
  %374 = or i32 %373, %343, !dbg !30
  %375 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %374, !dbg !30
  %376 = load i8, ptr addrspace(3) %375, align 1, !dbg !30
  %377 = xor i32 %374, 576, !dbg !30
  %378 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %377, !dbg !30
  %379 = load i8, ptr addrspace(3) %378, align 1, !dbg !30
  %380 = or disjoint i32 %341, %240, !dbg !30
  %381 = or i32 %380, %342, !dbg !30
  %382 = xor i32 %381, %337, !dbg !30
  %383 = xor i32 %382, %339, !dbg !30
  %384 = xor i32 %383, %343, !dbg !30
  %385 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %384, !dbg !30
  %386 = load i8, ptr addrspace(3) %385, align 1, !dbg !30
  %387 = xor i32 %374, 1600, !dbg !30
  %388 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %387, !dbg !30
  %389 = load i8, ptr addrspace(3) %388, align 1, !dbg !30
  %390 = shl i32 %285, 13, !dbg !33
  %391 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %390, !dbg !33
  %392 = getelementptr inbounds nuw i8, ptr addrspace(3) %391, i32 %170, !dbg !33
  %393 = getelementptr inbounds nuw i8, ptr addrspace(3) %391, i32 %172, !dbg !33
  %394 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %281, i16 24576, i32 2147483646, i32 159744), !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %394, ptr addrspace(3) %392, i32 16, i32 %179, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %394, ptr addrspace(3) nonnull %393, i32 16, i32 %185, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %395 = getelementptr inbounds nuw i8, ptr addrspace(3) %260, i32 %166, !dbg !33
  %396 = getelementptr inbounds nuw i8, ptr addrspace(3) %395, i32 %241, !dbg !33
  %397 = load <4 x i32>, ptr addrspace(3) %396, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %398 = getelementptr inbounds nuw i8, ptr addrspace(3) %260, i32 %245, !dbg !33
  %399 = getelementptr inbounds nuw i8, ptr addrspace(3) %398, i32 %241, !dbg !33
  %400 = load <4 x i32>, ptr addrspace(3) %399, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %401 = getelementptr inbounds nuw i8, ptr addrspace(3) %260, i32 %248, !dbg !33
  %402 = getelementptr inbounds nuw i8, ptr addrspace(3) %401, i32 %241, !dbg !33
  %403 = load <4 x i32>, ptr addrspace(3) %402, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %404 = getelementptr inbounds nuw i8, ptr addrspace(3) %260, i32 %252, !dbg !33
  %405 = getelementptr inbounds nuw i8, ptr addrspace(3) %404, i32 %241, !dbg !33
  %406 = load <4 x i32>, ptr addrspace(3) %405, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %407 = getelementptr inbounds nuw i8, ptr addrspace(3) %395, i32 %255, !dbg !33
  %408 = load <4 x i32>, ptr addrspace(3) %407, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %409 = getelementptr inbounds nuw i8, ptr addrspace(3) %398, i32 %255, !dbg !33
  %410 = load <4 x i32>, ptr addrspace(3) %409, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %411 = getelementptr inbounds nuw i8, ptr addrspace(3) %401, i32 %255, !dbg !33
  %412 = load <4 x i32>, ptr addrspace(3) %411, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %413 = getelementptr inbounds nuw i8, ptr addrspace(3) %404, i32 %255, !dbg !33
  %414 = load <4 x i32>, ptr addrspace(3) %413, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %415 = shl i32 %285, 15, !dbg !37
  %416 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %415, !dbg !37
  %417 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %167, !dbg !37
  %418 = getelementptr inbounds nuw i8, ptr addrspace(3) %417, i32 %168, !dbg !37
  %419 = getelementptr inbounds nuw i8, ptr addrspace(3) %417, i32 %169, !dbg !37
  %420 = getelementptr inbounds nuw i8, ptr addrspace(3) %417, i32 %187, !dbg !37
  %421 = getelementptr inbounds nuw i8, ptr addrspace(3) %417, i32 %188, !dbg !37
  %422 = getelementptr inbounds nuw i8, ptr addrspace(3) %417, i32 %189, !dbg !37
  %423 = getelementptr inbounds nuw i8, ptr addrspace(3) %417, i32 %190, !dbg !37
  %424 = getelementptr inbounds nuw i8, ptr addrspace(3) %417, i32 %191, !dbg !37
  %425 = getelementptr inbounds nuw i8, ptr addrspace(3) %417, i32 %192, !dbg !37
  %426 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %170, !dbg !37
  %427 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %172, !dbg !37
  %428 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %195, !dbg !37
  %429 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %197, !dbg !37
  %430 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %199, !dbg !37
  %431 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %201, !dbg !37
  %432 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %203, !dbg !37
  %433 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %205, !dbg !37
  %434 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %282, i16 24576, i32 2147483646, i32 159744), !dbg !37
  %435 = ptrtoint ptr addrspace(3) %426 to i32, !dbg !37
  %436 = ptrtoint ptr addrspace(3) %418 to i32, !dbg !37
  %437 = sub i32 %436, %435, !dbg !37
  %438 = sdiv i32 %437, 16, !dbg !37
  %439 = shl nsw i32 %438, 4, !dbg !37
  %440 = add i32 %439, %65, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %434, ptr addrspace(3) %426, i32 16, i32 %440, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %441 = ptrtoint ptr addrspace(3) %427 to i32, !dbg !37
  %442 = ptrtoint ptr addrspace(3) %419 to i32, !dbg !37
  %443 = sub i32 %442, %441, !dbg !37
  %444 = sdiv i32 %443, 16, !dbg !37
  %445 = shl nsw i32 %444, 4, !dbg !37
  %446 = add i32 %445, %66, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %434, ptr addrspace(3) nonnull %427, i32 16, i32 %446, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %447 = ptrtoint ptr addrspace(3) %428 to i32, !dbg !37
  %448 = ptrtoint ptr addrspace(3) %420 to i32, !dbg !37
  %449 = sub i32 %448, %447, !dbg !37
  %450 = sdiv i32 %449, 16, !dbg !37
  %451 = shl nsw i32 %450, 4, !dbg !37
  %452 = add i32 %451, %67, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %434, ptr addrspace(3) nonnull %428, i32 16, i32 %452, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %453 = ptrtoint ptr addrspace(3) %429 to i32, !dbg !37
  %454 = ptrtoint ptr addrspace(3) %421 to i32, !dbg !37
  %455 = sub i32 %454, %453, !dbg !37
  %456 = sdiv i32 %455, 16, !dbg !37
  %457 = shl nsw i32 %456, 4, !dbg !37
  %458 = add i32 %457, %68, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %434, ptr addrspace(3) nonnull %429, i32 16, i32 %458, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %459 = ptrtoint ptr addrspace(3) %430 to i32, !dbg !37
  %460 = ptrtoint ptr addrspace(3) %422 to i32, !dbg !37
  %461 = sub i32 %460, %459, !dbg !37
  %462 = sdiv i32 %461, 16, !dbg !37
  %463 = shl nsw i32 %462, 4, !dbg !37
  %464 = add i32 %463, %69, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %434, ptr addrspace(3) nonnull %430, i32 16, i32 %464, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %465 = ptrtoint ptr addrspace(3) %431 to i32, !dbg !37
  %466 = ptrtoint ptr addrspace(3) %423 to i32, !dbg !37
  %467 = sub i32 %466, %465, !dbg !37
  %468 = sdiv i32 %467, 16, !dbg !37
  %469 = shl nsw i32 %468, 4, !dbg !37
  %470 = add i32 %469, %70, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %434, ptr addrspace(3) nonnull %431, i32 16, i32 %470, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %471 = ptrtoint ptr addrspace(3) %432 to i32, !dbg !37
  %472 = ptrtoint ptr addrspace(3) %424 to i32, !dbg !37
  %473 = sub i32 %472, %471, !dbg !37
  %474 = sdiv i32 %473, 16, !dbg !37
  %475 = shl nsw i32 %474, 4, !dbg !37
  %476 = add i32 %475, %71, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %434, ptr addrspace(3) nonnull %432, i32 16, i32 %476, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %477 = ptrtoint ptr addrspace(3) %433 to i32, !dbg !37
  %478 = ptrtoint ptr addrspace(3) %425 to i32, !dbg !37
  %479 = sub i32 %478, %477, !dbg !37
  %480 = sdiv i32 %479, 16, !dbg !37
  %481 = shl nsw i32 %480, 4, !dbg !37
  %482 = add i32 %481, %72, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %434, ptr addrspace(3) nonnull %433, i32 16, i32 %482, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %483 = getelementptr inbounds nuw i8, ptr addrspace(3) %259, i32 %166, !dbg !37
  %484 = getelementptr inbounds nuw i8, ptr addrspace(3) %483, i32 %256, !dbg !37
  %485 = load <4 x i32>, ptr addrspace(3) %484, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %486 = getelementptr inbounds nuw i8, ptr addrspace(3) %259, i32 %245, !dbg !37
  %487 = getelementptr inbounds nuw i8, ptr addrspace(3) %486, i32 %256, !dbg !37
  %488 = load <4 x i32>, ptr addrspace(3) %487, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %489 = getelementptr inbounds nuw i8, ptr addrspace(3) %259, i32 %248, !dbg !37
  %490 = getelementptr inbounds nuw i8, ptr addrspace(3) %489, i32 %256, !dbg !37
  %491 = load <4 x i32>, ptr addrspace(3) %490, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %492 = getelementptr inbounds nuw i8, ptr addrspace(3) %259, i32 %252, !dbg !37
  %493 = getelementptr inbounds nuw i8, ptr addrspace(3) %492, i32 %256, !dbg !37
  %494 = load <4 x i32>, ptr addrspace(3) %493, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %495 = getelementptr inbounds nuw i8, ptr addrspace(3) %483, i32 %257, !dbg !37
  %496 = load <4 x i32>, ptr addrspace(3) %495, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %497 = getelementptr inbounds nuw i8, ptr addrspace(3) %486, i32 %257, !dbg !37
  %498 = load <4 x i32>, ptr addrspace(3) %497, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %499 = getelementptr inbounds nuw i8, ptr addrspace(3) %489, i32 %257, !dbg !37
  %500 = load <4 x i32>, ptr addrspace(3) %499, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %501 = getelementptr inbounds nuw i8, ptr addrspace(3) %492, i32 %257, !dbg !37
  %502 = load <4 x i32>, ptr addrspace(3) %501, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %503 = zext i8 %301 to i32, !dbg !42
  %504 = zext i8 %306 to i32, !dbg !42
  %505 = zext i8 %310 to i32, !dbg !42
  %506 = zext i8 %314 to i32, !dbg !42
  %507 = zext i8 %318 to i32, !dbg !42
  %508 = zext i8 %324 to i32, !dbg !42
  %509 = zext i8 %330 to i32, !dbg !42
  %510 = zext i8 %336 to i32, !dbg !42
  %511 = zext i8 %348 to i32, !dbg !42
  %512 = zext i8 %355 to i32, !dbg !42
  %513 = zext i8 %362 to i32, !dbg !42
  %514 = zext i8 %369 to i32, !dbg !42
  %515 = zext i8 %376 to i32, !dbg !42
  %516 = zext i8 %379 to i32, !dbg !42
  %517 = zext i8 %386 to i32, !dbg !42
  %518 = zext i8 %389 to i32, !dbg !42
  %519 = insertelement <4 x float> poison, float %264, i64 0, !dbg !42
  %520 = insertelement <4 x float> %519, float %265, i64 1, !dbg !42
  %521 = insertelement <4 x float> %520, float %266, i64 2, !dbg !42
  %522 = insertelement <4 x float> %521, float %267, i64 3, !dbg !42
  %523 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %485, <4 x i32> %397, <4 x float> %522, i32 4, i32 4, i32 0, i32 %511, i32 0, i32 %503), !dbg !42
  %524 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %488, <4 x i32> %400, <4 x float> %523, i32 4, i32 4, i32 0, i32 %512, i32 0, i32 %504), !dbg !42
  %525 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %491, <4 x i32> %403, <4 x float> %524, i32 4, i32 4, i32 0, i32 %513, i32 0, i32 %505), !dbg !42
  %526 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %494, <4 x i32> %406, <4 x float> %525, i32 4, i32 4, i32 0, i32 %514, i32 0, i32 %506), !dbg !42
  %527 = extractelement <4 x float> %526, i64 0, !dbg !42
  %528 = extractelement <4 x float> %526, i64 1, !dbg !42
  %529 = extractelement <4 x float> %526, i64 2, !dbg !42
  %530 = extractelement <4 x float> %526, i64 3, !dbg !42
  %531 = insertelement <4 x float> poison, float %268, i64 0, !dbg !42
  %532 = insertelement <4 x float> %531, float %269, i64 1, !dbg !42
  %533 = insertelement <4 x float> %532, float %270, i64 2, !dbg !42
  %534 = insertelement <4 x float> %533, float %271, i64 3, !dbg !42
  %535 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %496, <4 x i32> %397, <4 x float> %534, i32 4, i32 4, i32 0, i32 %515, i32 0, i32 %503), !dbg !42
  %536 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %498, <4 x i32> %400, <4 x float> %535, i32 4, i32 4, i32 0, i32 %516, i32 0, i32 %504), !dbg !42
  %537 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %500, <4 x i32> %403, <4 x float> %536, i32 4, i32 4, i32 0, i32 %517, i32 0, i32 %505), !dbg !42
  %538 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %502, <4 x i32> %406, <4 x float> %537, i32 4, i32 4, i32 0, i32 %518, i32 0, i32 %506), !dbg !42
  %539 = extractelement <4 x float> %538, i64 0, !dbg !42
  %540 = extractelement <4 x float> %538, i64 1, !dbg !42
  %541 = extractelement <4 x float> %538, i64 2, !dbg !42
  %542 = extractelement <4 x float> %538, i64 3, !dbg !42
  %543 = insertelement <4 x float> poison, float %272, i64 0, !dbg !42
  %544 = insertelement <4 x float> %543, float %273, i64 1, !dbg !42
  %545 = insertelement <4 x float> %544, float %274, i64 2, !dbg !42
  %546 = insertelement <4 x float> %545, float %275, i64 3, !dbg !42
  %547 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %485, <4 x i32> %408, <4 x float> %546, i32 4, i32 4, i32 0, i32 %511, i32 0, i32 %507), !dbg !42
  %548 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %488, <4 x i32> %410, <4 x float> %547, i32 4, i32 4, i32 0, i32 %512, i32 0, i32 %508), !dbg !42
  %549 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %491, <4 x i32> %412, <4 x float> %548, i32 4, i32 4, i32 0, i32 %513, i32 0, i32 %509), !dbg !42
  %550 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %494, <4 x i32> %414, <4 x float> %549, i32 4, i32 4, i32 0, i32 %514, i32 0, i32 %510), !dbg !42
  %551 = extractelement <4 x float> %550, i64 0, !dbg !42
  %552 = extractelement <4 x float> %550, i64 1, !dbg !42
  %553 = extractelement <4 x float> %550, i64 2, !dbg !42
  %554 = extractelement <4 x float> %550, i64 3, !dbg !42
  %555 = insertelement <4 x float> poison, float %276, i64 0, !dbg !42
  %556 = insertelement <4 x float> %555, float %277, i64 1, !dbg !42
  %557 = insertelement <4 x float> %556, float %278, i64 2, !dbg !42
  %558 = insertelement <4 x float> %557, float %279, i64 3, !dbg !42
  %559 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %496, <4 x i32> %408, <4 x float> %558, i32 4, i32 4, i32 0, i32 %515, i32 0, i32 %507), !dbg !42
  %560 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %498, <4 x i32> %410, <4 x float> %559, i32 4, i32 4, i32 0, i32 %516, i32 0, i32 %508), !dbg !42
  %561 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %500, <4 x i32> %412, <4 x float> %560, i32 4, i32 4, i32 0, i32 %517, i32 0, i32 %509), !dbg !42
  %562 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %502, <4 x i32> %414, <4 x float> %561, i32 4, i32 4, i32 0, i32 %518, i32 0, i32 %510), !dbg !42
  %563 = extractelement <4 x float> %562, i64 0, !dbg !42
  %564 = extractelement <4 x float> %562, i64 1, !dbg !42
  %565 = extractelement <4 x float> %562, i64 2, !dbg !42
  %566 = extractelement <4 x float> %562, i64 3, !dbg !42
  %567 = add nuw nsw i32 %280, 1, !dbg !30
  %exitcond.not = icmp eq i32 %567, 31, !dbg !30
  br i1 %exitcond.not, label %568, label %258, !dbg !30

568:                                              ; preds = %258
  %569 = and i32 %31, 120, !dbg !23
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49168), !dbg !33
  fence syncscope("workgroup") release, !dbg !33
  tail call void @llvm.amdgcn.s.barrier(), !dbg !33
  fence syncscope("workgroup") acquire, !dbg !33
  %570 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 146944), i32 %224, !dbg !30
  %571 = getelementptr inbounds nuw i8, ptr addrspace(3) %570, i32 %226, !dbg !30
  %572 = getelementptr inbounds nuw i8, ptr addrspace(3) %571, i32 %228, !dbg !30
  %573 = load i8, ptr addrspace(3) %572, align 1, !dbg !30
  %574 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 128, !dbg !30
  %575 = load i8, ptr addrspace(3) %574, align 1, !dbg !30
  %576 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 256, !dbg !30
  %577 = load i8, ptr addrspace(3) %576, align 1, !dbg !30
  %578 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 384, !dbg !30
  %579 = load i8, ptr addrspace(3) %578, align 1, !dbg !30
  %580 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 146944), i32 %230, !dbg !30
  %581 = getelementptr inbounds nuw i8, ptr addrspace(3) %580, i32 %228, !dbg !30
  %582 = load i8, ptr addrspace(3) %581, align 1, !dbg !30
  %583 = getelementptr inbounds nuw i8, ptr addrspace(3) %581, i32 128, !dbg !30
  %584 = load i8, ptr addrspace(3) %583, align 1, !dbg !30
  %585 = getelementptr inbounds nuw i8, ptr addrspace(3) %581, i32 256, !dbg !30
  %586 = load i8, ptr addrspace(3) %585, align 1, !dbg !30
  %587 = getelementptr inbounds nuw i8, ptr addrspace(3) %581, i32 384, !dbg !30
  %588 = load i8, ptr addrspace(3) %587, align 1, !dbg !30
  %589 = lshr i32 %15, 2, !dbg !30
  %590 = and i32 %589, 16, !dbg !30
  %591 = or disjoint i32 %590, %224, !dbg !30
  %592 = lshr i32 %15, 2, !dbg !30
  %593 = and i32 %592, 32, !dbg !30
  %594 = or disjoint i32 %591, %593, !dbg !30
  %595 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 63488), i32 %237, !dbg !30
  %596 = load i8, ptr addrspace(3) %595, align 1, !dbg !30
  %597 = getelementptr inbounds nuw i8, ptr addrspace(3) %595, i32 576, !dbg !30
  %598 = load i8, ptr addrspace(3) %597, align 1, !dbg !30
  %599 = getelementptr inbounds nuw i8, ptr addrspace(3) %595, i32 1024, !dbg !30
  %600 = load i8, ptr addrspace(3) %599, align 1, !dbg !30
  %601 = getelementptr inbounds nuw i8, ptr addrspace(3) %595, i32 1600, !dbg !30
  %602 = load i8, ptr addrspace(3) %601, align 1, !dbg !30
  %603 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 63488), i32 %239, !dbg !30
  %604 = load i8, ptr addrspace(3) %603, align 1, !dbg !30
  %605 = xor i32 %239, 64064, !dbg !30
  %606 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %605, !dbg !30
  %607 = load i8, ptr addrspace(3) %606, align 1, !dbg !30
  %608 = getelementptr inbounds nuw i8, ptr addrspace(3) %603, i32 1024, !dbg !30
  %609 = load i8, ptr addrspace(3) %608, align 1, !dbg !30
  %610 = xor i32 %239, 65088, !dbg !30
  %611 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %610, !dbg !30
  %612 = load i8, ptr addrspace(3) %611, align 1, !dbg !30
  %613 = getelementptr inbounds nuw i8, ptr addrspace(3) %391, i32 %166, !dbg !33
  %614 = getelementptr inbounds nuw i8, ptr addrspace(3) %613, i32 %241, !dbg !33
  %615 = load <4 x i32>, ptr addrspace(3) %614, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %616 = getelementptr inbounds nuw i8, ptr addrspace(3) %391, i32 %245, !dbg !33
  %617 = getelementptr inbounds nuw i8, ptr addrspace(3) %616, i32 %241, !dbg !33
  %618 = load <4 x i32>, ptr addrspace(3) %617, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %619 = getelementptr inbounds nuw i8, ptr addrspace(3) %391, i32 %248, !dbg !33
  %620 = getelementptr inbounds nuw i8, ptr addrspace(3) %619, i32 %241, !dbg !33
  %621 = load <4 x i32>, ptr addrspace(3) %620, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %622 = getelementptr inbounds nuw i8, ptr addrspace(3) %391, i32 %252, !dbg !33
  %623 = getelementptr inbounds nuw i8, ptr addrspace(3) %622, i32 %241, !dbg !33
  %624 = load <4 x i32>, ptr addrspace(3) %623, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %625 = getelementptr inbounds nuw i8, ptr addrspace(3) %613, i32 %255, !dbg !33
  %626 = load <4 x i32>, ptr addrspace(3) %625, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %627 = getelementptr inbounds nuw i8, ptr addrspace(3) %616, i32 %255, !dbg !33
  %628 = load <4 x i32>, ptr addrspace(3) %627, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %629 = getelementptr inbounds nuw i8, ptr addrspace(3) %619, i32 %255, !dbg !33
  %630 = load <4 x i32>, ptr addrspace(3) %629, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %631 = getelementptr inbounds nuw i8, ptr addrspace(3) %622, i32 %255, !dbg !33
  %632 = load <4 x i32>, ptr addrspace(3) %631, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %633 = shl nuw nsw i32 %594, 8, !dbg !37
  %634 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %166, !dbg !37
  %635 = getelementptr inbounds nuw i8, ptr addrspace(3) %634, i32 %633, !dbg !37
  %636 = load <4 x i32>, ptr addrspace(3) %635, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %637 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %245, !dbg !37
  %638 = getelementptr inbounds nuw i8, ptr addrspace(3) %637, i32 %633, !dbg !37
  %639 = load <4 x i32>, ptr addrspace(3) %638, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %640 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %248, !dbg !37
  %641 = getelementptr inbounds nuw i8, ptr addrspace(3) %640, i32 %633, !dbg !37
  %642 = load <4 x i32>, ptr addrspace(3) %641, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %643 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 %252, !dbg !37
  %644 = getelementptr inbounds nuw i8, ptr addrspace(3) %643, i32 %633, !dbg !37
  %645 = load <4 x i32>, ptr addrspace(3) %644, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %646 = or disjoint i32 %633, 16384, !dbg !37
  %647 = getelementptr inbounds nuw i8, ptr addrspace(3) %634, i32 %646, !dbg !37
  %648 = load <4 x i32>, ptr addrspace(3) %647, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %649 = getelementptr inbounds nuw i8, ptr addrspace(3) %637, i32 %646, !dbg !37
  %650 = load <4 x i32>, ptr addrspace(3) %649, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %651 = getelementptr inbounds nuw i8, ptr addrspace(3) %640, i32 %646, !dbg !37
  %652 = load <4 x i32>, ptr addrspace(3) %651, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %653 = getelementptr inbounds nuw i8, ptr addrspace(3) %643, i32 %646, !dbg !37
  %654 = load <4 x i32>, ptr addrspace(3) %653, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %655 = zext i8 %573 to i32, !dbg !42
  %656 = zext i8 %575 to i32, !dbg !42
  %657 = zext i8 %577 to i32, !dbg !42
  %658 = zext i8 %579 to i32, !dbg !42
  %659 = zext i8 %582 to i32, !dbg !42
  %660 = zext i8 %584 to i32, !dbg !42
  %661 = zext i8 %586 to i32, !dbg !42
  %662 = zext i8 %588 to i32, !dbg !42
  %663 = zext i8 %596 to i32, !dbg !42
  %664 = zext i8 %598 to i32, !dbg !42
  %665 = zext i8 %600 to i32, !dbg !42
  %666 = zext i8 %602 to i32, !dbg !42
  %667 = zext i8 %604 to i32, !dbg !42
  %668 = zext i8 %607 to i32, !dbg !42
  %669 = zext i8 %609 to i32, !dbg !42
  %670 = zext i8 %612 to i32, !dbg !42
  %671 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %636, <4 x i32> %615, <4 x float> %526, i32 4, i32 4, i32 0, i32 %663, i32 0, i32 %655), !dbg !42
  %672 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %639, <4 x i32> %618, <4 x float> %671, i32 4, i32 4, i32 0, i32 %664, i32 0, i32 %656), !dbg !42
  %673 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %642, <4 x i32> %621, <4 x float> %672, i32 4, i32 4, i32 0, i32 %665, i32 0, i32 %657), !dbg !42
  %674 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %645, <4 x i32> %624, <4 x float> %673, i32 4, i32 4, i32 0, i32 %666, i32 0, i32 %658), !dbg !42
  %675 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %648, <4 x i32> %615, <4 x float> %538, i32 4, i32 4, i32 0, i32 %667, i32 0, i32 %655), !dbg !42
  %676 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %650, <4 x i32> %618, <4 x float> %675, i32 4, i32 4, i32 0, i32 %668, i32 0, i32 %656), !dbg !42
  %677 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %652, <4 x i32> %621, <4 x float> %676, i32 4, i32 4, i32 0, i32 %669, i32 0, i32 %657), !dbg !42
  %678 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %654, <4 x i32> %624, <4 x float> %677, i32 4, i32 4, i32 0, i32 %670, i32 0, i32 %658), !dbg !42
  %679 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %636, <4 x i32> %626, <4 x float> %550, i32 4, i32 4, i32 0, i32 %663, i32 0, i32 %659), !dbg !42
  %680 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %639, <4 x i32> %628, <4 x float> %679, i32 4, i32 4, i32 0, i32 %664, i32 0, i32 %660), !dbg !42
  %681 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %642, <4 x i32> %630, <4 x float> %680, i32 4, i32 4, i32 0, i32 %665, i32 0, i32 %661), !dbg !42
  %682 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %645, <4 x i32> %632, <4 x float> %681, i32 4, i32 4, i32 0, i32 %666, i32 0, i32 %662), !dbg !42
  %683 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %648, <4 x i32> %626, <4 x float> %562, i32 4, i32 4, i32 0, i32 %667, i32 0, i32 %659), !dbg !42
  %684 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %650, <4 x i32> %628, <4 x float> %683, i32 4, i32 4, i32 0, i32 %668, i32 0, i32 %660), !dbg !42
  %685 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %652, <4 x i32> %630, <4 x float> %684, i32 4, i32 4, i32 0, i32 %669, i32 0, i32 %661), !dbg !42
  %686 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %654, <4 x i32> %632, <4 x float> %685, i32 4, i32 4, i32 0, i32 %670, i32 0, i32 %662), !dbg !42
  %687 = zext nneg i32 %20 to i64, !dbg !43
  %688 = zext nneg i32 %21 to i64, !dbg !43
  %689 = sext i32 %14 to i64, !dbg !44
  %690 = or disjoint i64 %689, %687, !dbg !44
  %691 = or disjoint i64 %689, %688, !dbg !44
  %692 = zext nneg i32 %569 to i64, !dbg !45
  %693 = sext i32 %30 to i64, !dbg !46
  %694 = or disjoint i64 %693, %692, !dbg !46
  %695 = mul nuw nsw i32 %20, 53248, !dbg !47
  %696 = mul nuw nsw i32 %21, 53248, !dbg !47
  %.idx = mul nsw i64 %689, 106496, !dbg !47
  %697 = getelementptr i8, ptr addrspace(1) %2, i64 %.idx, !dbg !47
  %698 = getelementptr bfloat, ptr addrspace(1) %697, i64 %693, !dbg !48
  %699 = or disjoint i32 %695, %569, !dbg !48
  %700 = or disjoint i32 %696, %569, !dbg !48
  %701 = sext i32 %5 to i64, !dbg !49
  %702 = icmp slt i64 %690, %701, !dbg !49
  %703 = icmp slt i64 %691, %701, !dbg !49
  %704 = sext i32 %6 to i64, !dbg !50
  %705 = icmp slt i64 %694, %704, !dbg !50
  %706 = and i1 %702, %705, !dbg !51
  %707 = and i1 %703, %705, !dbg !51
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %708 = shl i32 %15, 7, !dbg !52
  %709 = and i32 %708, 1920, !dbg !52
  %710 = and i32 %231, 12, !dbg !52
  %711 = and i32 %31, 2040, !dbg !52
  %712 = lshr exact i32 %709, 3, !dbg !52
  %713 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %712, !dbg !52
  %714 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %713, i32 %710, !dbg !52
  %715 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %714, i32 %709, !dbg !52
  %716 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %715, i32 %590, !dbg !52
  %717 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %716, i32 %593, !dbg !52
  %718 = fptrunc <4 x float> %674 to <4 x bfloat>, !dbg !52
  store <4 x bfloat> %718, ptr addrspace(3) %717, align 8, !dbg !52
  %719 = getelementptr inbounds nuw i8, ptr addrspace(3) %717, i32 128, !dbg !52
  %720 = fptrunc <4 x float> %678 to <4 x bfloat>, !dbg !52
  store <4 x bfloat> %720, ptr addrspace(3) %719, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %721 = lshr i32 %31, 4, !dbg !52
  %722 = and i32 %721, 120, !dbg !52
  %723 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %722, !dbg !52
  %724 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %723, i32 %711, !dbg !52
  %725 = load <4 x i32>, ptr addrspace(3) %724, align 16, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %726 = fptrunc <4 x float> %682 to <4 x bfloat>, !dbg !52
  store <4 x bfloat> %726, ptr addrspace(3) %717, align 8, !dbg !52
  %727 = fptrunc <4 x float> %686 to <4 x bfloat>, !dbg !52
  store <4 x bfloat> %727, ptr addrspace(3) %719, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %728 = load <4 x i32>, ptr addrspace(3) %724, align 16, !dbg !52
  %729 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %698, i16 24576, i32 2147483646, i32 159744), !dbg !52
  %730 = shl nuw nsw i32 %699, 1, !dbg !52
  %731 = select i1 %706, i32 %730, i32 -2147483648, !dbg !52
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %725, ptr addrspace(8) %729, i32 %731, i32 0, i32 0), !dbg !52
  %732 = shl nuw nsw i32 %700, 1, !dbg !52
  %733 = select i1 %707, i32 %732, i32 -2147483648, !dbg !52
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %728, ptr addrspace(8) %729, i32 %733, i32 0, i32 0), !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) readnone, i16, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) readonly captures(none), i32, i32, i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i64 @llvm.amdgcn.ballot.i64(i1) #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) readonly captures(none), ptr addrspace(3) writeonly captures(none), i32 immarg, i32, i32, i32 immarg, i32 immarg) #4

; Function Attrs: mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.waitcnt(i32 immarg) #5

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #6

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32>, <4 x i32>, <4 x float>, i32 immarg, i32 immarg, i32 immarg, i32, i32 immarg, i32) #7

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32>, ptr addrspace(8) writeonly captures(none), i32, i32, i32 immarg) #8

attributes #0 = { nofree norecurse nounwind "amdgpu-agpr-alloc"="0" "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-flat-scratch-init" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn }
attributes #6 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #7 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #8 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "gemm_afp4wfp4.py", directory: "/app/aiter/aiter/ops/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"amdhsa_code_object_version", i32 500}
!4 = distinct !DISubprogram(name: "_gemm_afp4_wfp4_kernel", linkageName: "_gemm_afp4_wfp4_kernel", scope: !1, file: !1, line: 14, type: !5, scopeLine: 14, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 61, column: 24, scope: !4)
!8 = !DILocation(line: 40, column: 22, scope: !9, inlinedAt: !11)
!9 = distinct !DILexicalBlockFile(scope: !4, file: !10, discriminator: 0)
!10 = !DIFile(filename: "standard.py", directory: "/app/OAI-triton/python/triton/language")
!11 = !DILocation(line: 63, column: 27, scope: !4)
!12 = !DILocation(line: 40, column: 28, scope: !9, inlinedAt: !11)
!13 = !DILocation(line: 32, column: 23, scope: !14, inlinedAt: !16)
!14 = distinct !DILexicalBlockFile(scope: !4, file: !15, discriminator: 0)
!15 = !DIFile(filename: "pid_preprocessing.py", directory: "/app/aiter/aiter/ops/triton/utils")
!16 = !DILocation(line: 67, column: 44, scope: !4)
!17 = !DILocation(line: 33, column: 22, scope: !14, inlinedAt: !16)
!18 = !DILocation(line: 77, column: 23, scope: !4)
!19 = !DILocation(line: 77, column: 51, scope: !4)
!20 = !DILocation(line: 77, column: 38, scope: !4)
!21 = !DILocation(line: 77, column: 68, scope: !4)
!22 = !DILocation(line: 78, column: 23, scope: !4)
!23 = !DILocation(line: 78, column: 51, scope: !4)
!24 = !DILocation(line: 78, column: 38, scope: !4)
!25 = !DILocation(line: 78, column: 68, scope: !4)
!26 = !DILocation(line: 79, column: 60, scope: !4)
!27 = !DILocation(line: 79, column: 22, scope: !4)
!28 = !DILocation(line: 80, column: 22, scope: !4)
!29 = !DILocation(line: 83, column: 66, scope: !4)
!30 = !DILocation(line: 89, column: 22, scope: !4)
!31 = !DILocation(line: 83, column: 74, scope: !4)
!32 = !DILocation(line: 85, column: 66, scope: !4)
!33 = !DILocation(line: 97, column: 24, scope: !4)
!34 = !{!35}
!35 = !{!"amdgpu.AsyncCopies", !36, !"Scope containing all AsyncCopyGlobalToLocal and BufferLoadToLocal ops"}
!36 = !{!"amdgpu.AsyncOps", !"Domain to hold alias scopes to specify aliasing information between AsyncCopyGlobalToLocal, BufferLoadToLocal and LocalLoad ops"}
!37 = !DILocation(line: 98, column: 24, scope: !4)
!38 = !DILocation(line: 106, column: 18, scope: !4)
!39 = !DILocation(line: 107, column: 18, scope: !4)
!40 = !{!41}
!41 = !{!"amdgpu.LocalLoads", !36, !"Scope containing all LocalLoad ops"}
!42 = !DILocation(line: 103, column: 71, scope: !4)
!43 = !DILocation(line: 114, column: 67, scope: !4)
!44 = !DILocation(line: 114, column: 37, scope: !4)
!45 = !DILocation(line: 115, column: 67, scope: !4)
!46 = !DILocation(line: 115, column: 37, scope: !4)
!47 = !DILocation(line: 116, column: 21, scope: !4)
!48 = !DILocation(line: 116, column: 52, scope: !4)
!49 = !DILocation(line: 117, column: 33, scope: !4)
!50 = !DILocation(line: 117, column: 58, scope: !4)
!51 = !DILocation(line: 117, column: 39, scope: !4)
!52 = !DILocation(line: 118, column: 21, scope: !4)
!53 = !DILocation(line: 118, column: 4, scope: !4)
