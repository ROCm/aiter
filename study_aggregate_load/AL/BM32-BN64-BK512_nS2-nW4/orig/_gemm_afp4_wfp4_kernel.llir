; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external addrspace(3) global [0 x i8], align 16

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_gemm_afp4_wfp4_kernel(ptr addrspace(1) inreg readonly captures(none) %0, ptr addrspace(1) inreg readonly captures(none) %1, ptr addrspace(1) inreg writeonly captures(none) %2, ptr addrspace(1) inreg readonly captures(none) %3, ptr addrspace(1) inreg readonly captures(none) %4, i32 inreg %5, i32 inreg %6, ptr addrspace(1) inreg readnone captures(none) %7) local_unnamed_addr #0 !dbg !4 {
  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %10 = add i32 %6, 63, !dbg !8
  %11 = sdiv i32 %10, 64, !dbg !12
  %.frozen = freeze i32 %11, !dbg !13
  %12 = sdiv i32 %9, %.frozen, !dbg !13
  %13 = mul i32 %12, %.frozen, !dbg !17
  %.decomposed = sub i32 %9, %13, !dbg !17
  %14 = shl i32 %12, 5, !dbg !18
  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !19
  %16 = and i32 %15, 63, !dbg !19
  %17 = and i32 %15, 16, !dbg !19
  %18 = and i32 %15, 32, !dbg !19
  %19 = lshr i32 %15, 4, !dbg !19
  %20 = and i32 %19, 15, !dbg !19
  %21 = or disjoint i32 %20, 16, !dbg !19
  %22 = shl i32 %15, 4, !dbg !19
  %23 = and i32 %22, 16, !dbg !19
  %24 = or disjoint i32 %14, %20, !dbg !20
  %25 = or disjoint i32 %14, %21, !dbg !20
  %26 = or disjoint i32 %14, %23, !dbg !20
  %27 = srem i32 %24, %5, !dbg !21
  %28 = srem i32 %25, %5, !dbg !21
  %29 = srem i32 %26, %5, !dbg !21
  %30 = shl nsw i32 %.decomposed, 6, !dbg !22
  %31 = shl i32 %15, 3, !dbg !23
  %32 = and i32 %22, 48, !dbg !23
  %33 = or disjoint i32 %30, %20, !dbg !24
  %34 = or disjoint i32 %30, %21, !dbg !24
  %35 = or disjoint i32 %33, 32, !dbg !24
  %36 = or disjoint i32 %33, 48, !dbg !24
  %37 = or disjoint i32 %30, %32, !dbg !24
  %38 = srem i32 %33, %6, !dbg !25
  %39 = srem i32 %34, %6, !dbg !25
  %40 = srem i32 %35, %6, !dbg !25
  %41 = srem i32 %36, %6, !dbg !25
  %42 = srem i32 %37, %6, !dbg !25
  %43 = and i32 %22, 64, !dbg !26
  %44 = and i32 %22, 112, !dbg !26
  %45 = and i32 %22, 128, !dbg !26
  %46 = and i32 %22, 240, !dbg !26
  %47 = shl i32 %27, 13, !dbg !27
  %48 = shl i32 %28, 13, !dbg !27
  %49 = or disjoint i32 %47, %46, !dbg !27
  %50 = or disjoint i32 %48, %46, !dbg !27
  %51 = shl i32 %38, 13, !dbg !28
  %52 = shl i32 %39, 13, !dbg !28
  %53 = shl i32 %40, 13, !dbg !28
  %54 = shl i32 %41, 13, !dbg !28
  %55 = or disjoint i32 %51, %46, !dbg !28
  %56 = or disjoint i32 %52, %46, !dbg !28
  %57 = or disjoint i32 %53, %46, !dbg !28
  %58 = or disjoint i32 %54, %46, !dbg !28
  %59 = shl i32 %15, 4, !dbg !29
  %60 = and i32 %59, 4064, !dbg !29
  %61 = or disjoint i32 %60, 4096, !dbg !29
  %62 = or disjoint i32 %60, 8192, !dbg !29
  %63 = or disjoint i32 %60, 12288, !dbg !29
  %64 = add i32 %29, %60, !dbg !29
  %65 = add i32 %29, %61, !dbg !29
  %66 = add i32 %29, %62, !dbg !29
  %67 = add i32 %29, %63, !dbg !29
  %68 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3, i16 0, i32 2147483646, i32 159744), !dbg !30
  %69 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %68, i32 %64, i32 0, i32 0), !dbg !30
  %70 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %68, i32 %65, i32 0, i32 0), !dbg !30
  %71 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %68, i32 %66, i32 0, i32 0), !dbg !30
  %72 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %68, i32 %67, i32 0, i32 0), !dbg !30
  %73 = xor i32 %22, %31, !dbg !30
  %74 = and i32 %73, 16, !dbg !30
  %75 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %74, !dbg !30
  %76 = getelementptr inbounds nuw i8, ptr addrspace(3) %75, i32 %60, !dbg !30
  store <4 x i32> %69, ptr addrspace(3) %76, align 16, !dbg !30
  %77 = getelementptr inbounds nuw i8, ptr addrspace(3) %76, i32 4096, !dbg !30
  store <4 x i32> %70, ptr addrspace(3) %77, align 16, !dbg !30
  %78 = getelementptr inbounds nuw i8, ptr addrspace(3) %76, i32 8192, !dbg !30
  store <4 x i32> %71, ptr addrspace(3) %78, align 16, !dbg !30
  %79 = getelementptr inbounds nuw i8, ptr addrspace(3) %76, i32 12288, !dbg !30
  store <4 x i32> %72, ptr addrspace(3) %79, align 16, !dbg !30
  %.lobit618 = lshr i32 %15, 2, !dbg !31
  %80 = and i32 %.lobit618, 3, !dbg !31
  %81 = lshr exact i32 %17, 2, !dbg !31
  %82 = lshr exact i32 %18, 2, !dbg !31
  %83 = or disjoint i32 %81, %80, !dbg !31
  %84 = or disjoint i32 %83, %82, !dbg !31
  %85 = lshr i32 %15, 2, !dbg !31
  %86 = and i32 %85, 16, !dbg !31
  %87 = or disjoint i32 %84, %86, !dbg !31
  %88 = lshr i32 %15, 2, !dbg !31
  %89 = and i32 %88, 32, !dbg !31
  %90 = or disjoint i32 %87, %89, !dbg !31
  %91 = xor i32 %90, 64, !dbg !31
  %92 = xor i32 %90, 128, !dbg !31
  %93 = xor i32 %90, 192, !dbg !31
  %94 = xor i32 %90, 256, !dbg !31
  %95 = xor i32 %90, 320, !dbg !31
  %96 = xor i32 %90, 384, !dbg !31
  %97 = xor i32 %90, 448, !dbg !31
  %98 = mul nuw nsw i32 %90, 53248, !dbg !32
  %99 = mul nuw nsw i32 %91, 53248, !dbg !32
  %100 = mul nuw nsw i32 %92, 53248, !dbg !32
  %101 = mul nuw nsw i32 %93, 53248, !dbg !32
  %102 = mul nuw nsw i32 %94, 53248, !dbg !32
  %103 = mul nuw nsw i32 %95, 53248, !dbg !32
  %104 = mul nuw nsw i32 %96, 53248, !dbg !32
  %105 = mul nuw nsw i32 %97, 53248, !dbg !32
  %106 = add i32 %42, %98, !dbg !32
  %107 = add i32 %42, %99, !dbg !32
  %108 = add i32 %42, %100, !dbg !32
  %109 = add i32 %42, %101, !dbg !32
  %110 = add i32 %42, %102, !dbg !32
  %111 = add i32 %42, %103, !dbg !32
  %112 = add i32 %42, %104, !dbg !32
  %113 = add i32 %42, %105, !dbg !32
  %114 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %4, i16 0, i32 2147483646, i32 159744), !dbg !30
  %115 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %114, i32 %106, i32 0, i32 0), !dbg !30
  %116 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %114, i32 %107, i32 0, i32 0), !dbg !30
  %117 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %114, i32 %108, i32 0, i32 0), !dbg !30
  %118 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %114, i32 %109, i32 0, i32 0), !dbg !30
  %119 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %114, i32 %110, i32 0, i32 0), !dbg !30
  %120 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %114, i32 %111, i32 0, i32 0), !dbg !30
  %121 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %114, i32 %112, i32 0, i32 0), !dbg !30
  %122 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %114, i32 %113, i32 0, i32 0), !dbg !30
  %123 = shl i32 %15, 2, !dbg !30
  %124 = xor i32 %123, %22, !dbg !30
  %125 = and i32 %124, 48, !dbg !30
  %126 = shl nuw nsw i32 %90, 6, !dbg !30
  %127 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %125, !dbg !30
  %128 = getelementptr inbounds nuw i8, ptr addrspace(3) %127, i32 %126, !dbg !30
  store <4 x i32> %115, ptr addrspace(3) %128, align 16, !dbg !30
  %129 = or disjoint i32 %87, 64, !dbg !30
  %130 = xor i32 %129, %89, !dbg !30
  %131 = shl nuw nsw i32 %130, 6, !dbg !30
  %132 = getelementptr inbounds nuw i8, ptr addrspace(3) %127, i32 %131, !dbg !30
  store <4 x i32> %116, ptr addrspace(3) %132, align 16, !dbg !30
  %133 = or disjoint i32 %87, 128, !dbg !30
  %134 = xor i32 %133, %89, !dbg !30
  %135 = shl nuw nsw i32 %134, 6, !dbg !30
  %136 = getelementptr inbounds nuw i8, ptr addrspace(3) %127, i32 %135, !dbg !30
  store <4 x i32> %117, ptr addrspace(3) %136, align 16, !dbg !30
  %137 = or disjoint i32 %87, 192, !dbg !30
  %138 = xor i32 %137, %89, !dbg !30
  %139 = shl nuw nsw i32 %138, 6, !dbg !30
  %140 = getelementptr inbounds nuw i8, ptr addrspace(3) %127, i32 %139, !dbg !30
  store <4 x i32> %118, ptr addrspace(3) %140, align 16, !dbg !30
  %141 = or disjoint i32 %87, 256, !dbg !30
  %142 = xor i32 %141, %89, !dbg !30
  %143 = shl nuw nsw i32 %142, 6, !dbg !30
  %144 = getelementptr inbounds nuw i8, ptr addrspace(3) %127, i32 %143, !dbg !30
  store <4 x i32> %119, ptr addrspace(3) %144, align 16, !dbg !30
  %145 = or disjoint i32 %87, 320, !dbg !30
  %146 = xor i32 %145, %89, !dbg !30
  %147 = shl nuw nsw i32 %146, 6, !dbg !30
  %148 = getelementptr inbounds nuw i8, ptr addrspace(3) %127, i32 %147, !dbg !30
  store <4 x i32> %120, ptr addrspace(3) %148, align 16, !dbg !30
  %149 = or disjoint i32 %87, 384, !dbg !30
  %150 = xor i32 %149, %89, !dbg !30
  %151 = shl nuw nsw i32 %150, 6, !dbg !30
  %152 = getelementptr inbounds nuw i8, ptr addrspace(3) %127, i32 %151, !dbg !30
  store <4 x i32> %121, ptr addrspace(3) %152, align 16, !dbg !30
  %153 = or disjoint i32 %87, 448, !dbg !30
  %154 = xor i32 %153, %89, !dbg !30
  %155 = shl nuw nsw i32 %154, 6, !dbg !30
  %156 = getelementptr inbounds nuw i8, ptr addrspace(3) %127, i32 %155, !dbg !30
  store <4 x i32> %122, ptr addrspace(3) %156, align 16, !dbg !30
  %and.ra = and i32 %15, 48, !dbg !33
  %157 = xor i32 %46, %and.ra, !dbg !33
  %and.ra19 = and i32 %15, 192, !dbg !33
  %158 = xor i32 %157, %and.ra19, !dbg !33
  %159 = shl nuw nsw i32 %20, 8, !dbg !33
  %160 = or disjoint i32 %159, 4096, !dbg !33
  %161 = or disjoint i32 %46, %159, !dbg !33
  %162 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %161, !dbg !33
  %163 = or disjoint i32 %46, %160, !dbg !33
  %164 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %163, !dbg !33
  %165 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %0, i16 0, i32 2147483646, i32 159744), !dbg !33
  %gepdiff = sub nsw i32 %158, %46, !dbg !33
  %.lhs.trunc = trunc nsw i32 %gepdiff to i16, !dbg !33
  %166 = ashr exact i16 %.lhs.trunc, 4, !dbg !33
  %.sext = sext i16 %166 to i32, !dbg !33
  %167 = add nsw i32 %16, %.sext, !dbg !33
  %168 = shl nsw i32 %167, 2, !dbg !33
  %169 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %168, i32 %49), !dbg !33
  %170 = tail call i64 @llvm.amdgcn.ballot.i64(i1 true), !dbg !33
  %171 = zext nneg i32 %167 to i64, !dbg !33
  %172 = lshr i64 %170, %171, !dbg !33
  %173 = trunc i64 %172 to i1, !dbg !33
  %174 = select i1 %173, i32 %169, i32 -2147483648, !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %165, ptr addrspace(3) %162, i32 16, i32 %174, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %175 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %168, i32 %50), !dbg !33
  %176 = select i1 %173, i32 %175, i32 -2147483648, !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %165, ptr addrspace(3) nonnull %164, i32 16, i32 %176, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %177 = or disjoint i32 %159, 8192, !dbg !37
  %178 = or disjoint i32 %159, 12288, !dbg !37
  %179 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %161, !dbg !37
  %180 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %163, !dbg !37
  %181 = or disjoint i32 %46, %177, !dbg !37
  %182 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %181, !dbg !37
  %183 = or disjoint i32 %46, %178, !dbg !37
  %184 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %183, !dbg !37
  %185 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %1, i16 0, i32 2147483646, i32 159744), !dbg !37
  %186 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %168, i32 %55), !dbg !37
  %187 = select i1 %173, i32 %186, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %185, ptr addrspace(3) %179, i32 16, i32 %187, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %188 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %168, i32 %56), !dbg !37
  %189 = select i1 %173, i32 %188, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %185, ptr addrspace(3) nonnull %180, i32 16, i32 %189, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %190 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %168, i32 %57), !dbg !37
  %191 = select i1 %173, i32 %190, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %185, ptr addrspace(3) nonnull %182, i32 16, i32 %191, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %192 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %168, i32 %58), !dbg !37
  %193 = select i1 %173, i32 %192, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %185, ptr addrspace(3) nonnull %184, i32 16, i32 %193, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %194 = and i32 %15, 15
  %195 = icmp eq i32 %17, 0
  %196 = select i1 %195, i32 0, i32 48
  %197 = icmp eq i32 %18, 0
  %198 = shl nuw nsw i32 %18, 1
  %invariant.op = or disjoint i32 %198, %194, !dbg !30
  %invariant.op29 = or disjoint i32 %invariant.op, %196, !dbg !30
  %199 = or disjoint i32 %194, 16
  %200 = xor i32 %196, %199
  %invariant.op31 = or disjoint i32 %198, %200, !dbg !30
  %201 = or disjoint i32 %89, %86
  %202 = or disjoint i32 %201, %194
  %203 = and i32 %.lobit618, 48
  %204 = or disjoint i32 %203, %194
  %205 = select i1 %195, i32 0, i32 80
  %206 = select i1 %197, i32 0, i32 160
  %207 = or disjoint i32 %205, %206
  %208 = xor i32 %207, %204
  %209 = shl nuw nsw i32 %194, 8
  %210 = or disjoint i32 %32, 64
  %211 = xor i32 %210, %43
  %212 = or disjoint i32 %211, %45
  %213 = xor i32 %212, %and.ra
  %214 = or disjoint i32 %44, 128
  %215 = or disjoint i32 %45, %and.ra
  %216 = xor i32 %215, %214
  %217 = or disjoint i32 %32, 192
  %218 = or disjoint i32 %43, %and.ra
  %219 = or disjoint i32 %218, %45
  %220 = xor i32 %219, %217
  %221 = shl i32 %15, 8
  %222 = and i32 %221, 3840
  %223 = or disjoint i32 %222, 4096
  %224 = shl nuw nsw i32 %202, 8
  br label %225, !dbg !30

225:                                              ; preds = %8, %225
  %226 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), %8 ], [ %352, %225 ]
  %227 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), %8 ], [ %325, %225 ]
  %228 = phi i32 [ 0, %8 ], [ %244, %225 ]
  %229 = phi ptr addrspace(1) [ %1, %8 ], [ %241, %225 ]
  %230 = phi ptr addrspace(1) [ %0, %8 ], [ %240, %225 ]
  %231 = phi float [ 0.000000e+00, %8 ], [ %423, %225 ]
  %232 = phi float [ 0.000000e+00, %8 ], [ %424, %225 ]
  %233 = phi float [ 0.000000e+00, %8 ], [ %425, %225 ]
  %234 = phi float [ 0.000000e+00, %8 ], [ %426, %225 ]
  %235 = phi float [ 0.000000e+00, %8 ], [ %435, %225 ]
  %236 = phi float [ 0.000000e+00, %8 ], [ %436, %225 ]
  %237 = phi float [ 0.000000e+00, %8 ], [ %437, %225 ]
  %238 = phi float [ 0.000000e+00, %8 ], [ %438, %225 ]
  %239 = phi i32 [ 0, %8 ], [ %439, %225 ]
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49168), !dbg !33
  fence syncscope("workgroup") release, !dbg !33
  tail call void @llvm.amdgcn.s.barrier(), !dbg !33
  fence syncscope("workgroup") acquire, !dbg !33
  %240 = getelementptr i8, ptr addrspace(1) %230, i64 256, !dbg !38
  %241 = getelementptr i8, ptr addrspace(1) %229, i64 256, !dbg !39
  %242 = add i32 %228, 1, !dbg !30
  %243 = icmp slt i32 %242, 2, !dbg !30
  %244 = select i1 %243, i32 %242, i32 0, !dbg !30
  %245 = shl nuw nsw i32 %239, 9, !dbg !30
  %246 = and i32 %245, 512, !dbg !30
  %247 = and i32 %245, 1024, !dbg !30
  %.reass30 = or disjoint i32 %246, %invariant.op29
  %248 = or disjoint i32 %.reass30, %247, !dbg !30
  %249 = and i32 %245, 2048, !dbg !30
  %250 = or disjoint i32 %248, %249, !dbg !30
  %251 = and i32 %245, 4096, !dbg !30
  %252 = icmp samesign ult i32 %239, 16, !dbg !30
  %253 = select i1 %252, i32 0, i32 8192, !dbg !30
  %254 = or disjoint i32 %253, %251, !dbg !30
  %255 = xor i32 %254, %250, !dbg !30
  %256 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %255, !dbg !30
  %257 = load i8, ptr addrspace(3) %256, align 1, !dbg !30
  %258 = or disjoint i32 %248, 128, !dbg !30
  %259 = shl i32 %239, 9, !dbg !30
  %260 = and i32 %259, 6144, !dbg !30
  %261 = or disjoint i32 %260, %253, !dbg !30
  %262 = xor i32 %261, %258, !dbg !30
  %263 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %262, !dbg !30
  %264 = load i8, ptr addrspace(3) %263, align 1, !dbg !30
  %265 = or disjoint i32 %248, 256, !dbg !30
  %266 = xor i32 %261, %265, !dbg !30
  %267 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %266, !dbg !30
  %268 = load i8, ptr addrspace(3) %267, align 1, !dbg !30
  %269 = or disjoint i32 %248, 384, !dbg !30
  %270 = xor i32 %261, %269, !dbg !30
  %271 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %270, !dbg !30
  %272 = load i8, ptr addrspace(3) %271, align 1, !dbg !30
  %.reass = or disjoint i32 %246, %invariant.op31
  %273 = or disjoint i32 %247, %.reass, !dbg !30
  %and.ra23 = and i32 %245, 6144, !dbg !30
  %274 = or disjoint i32 %253, %and.ra23, !dbg !30
  %275 = xor i32 %274, %273, !dbg !30
  %276 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %275, !dbg !30
  %277 = load i8, ptr addrspace(3) %276, align 1, !dbg !30
  %278 = or disjoint i32 %.reass, 128, !dbg !30
  %279 = xor i32 %260, %278, !dbg !30
  %280 = xor i32 %279, %247, !dbg !30
  %281 = xor i32 %280, %253, !dbg !30
  %282 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %281, !dbg !30
  %283 = load i8, ptr addrspace(3) %282, align 1, !dbg !30
  %284 = or disjoint i32 %.reass, 256, !dbg !30
  %285 = xor i32 %260, %284, !dbg !30
  %286 = xor i32 %285, %247, !dbg !30
  %287 = xor i32 %286, %253, !dbg !30
  %288 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %287, !dbg !30
  %289 = load i8, ptr addrspace(3) %288, align 1, !dbg !30
  %290 = or disjoint i32 %.reass, 384, !dbg !30
  %291 = xor i32 %260, %290, !dbg !30
  %292 = xor i32 %291, %247, !dbg !30
  %293 = xor i32 %292, %253, !dbg !30
  %294 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %293, !dbg !30
  %295 = load i8, ptr addrspace(3) %294, align 1, !dbg !30
  %296 = shl nuw nsw i32 %239, 10, !dbg !30
  %297 = and i32 %296, 3072, !dbg !30
  %298 = and i32 %296, 12288, !dbg !30
  %299 = select i1 %252, i32 0, i32 16384, !dbg !30
  %300 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %298, !dbg !30
  %301 = getelementptr i8, ptr addrspace(3) %300, i32 %297, !dbg !30
  %302 = getelementptr i8, ptr addrspace(3) %301, i32 %208, !dbg !30
  %303 = getelementptr i8, ptr addrspace(3) %302, i32 %299, !dbg !30
  %304 = load i8, ptr addrspace(3) %303, align 1, !dbg !30
  %305 = shl i32 %239, 10, !dbg !30
  %306 = and i32 %305, 4096, !dbg !30
  %307 = or disjoint i32 %306, %208, !dbg !30
  %308 = or disjoint i32 %307, %297, !dbg !30
  %309 = or disjoint i32 %308, 256, !dbg !30
  %310 = shl i32 %239, 10, !dbg !30
  %311 = and i32 %310, 8192, !dbg !30
  %312 = or disjoint i32 %299, %311, !dbg !30
  %313 = xor i32 %312, %309, !dbg !30
  %314 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %313, !dbg !30
  %315 = load i8, ptr addrspace(3) %314, align 1, !dbg !30
  %316 = or disjoint i32 %308, 512, !dbg !30
  %317 = xor i32 %312, %316, !dbg !30
  %318 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %317, !dbg !30
  %319 = load i8, ptr addrspace(3) %318, align 1, !dbg !30
  %320 = or disjoint i32 %308, 768, !dbg !30
  %321 = xor i32 %312, %320, !dbg !30
  %322 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %321, !dbg !30
  %323 = load i8, ptr addrspace(3) %322, align 1, !dbg !30
  %324 = shl i32 %244, 13, !dbg !33
  %325 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %324, !dbg !33
  %326 = getelementptr inbounds nuw i8, ptr addrspace(3) %325, i32 %161, !dbg !33
  %327 = getelementptr inbounds nuw i8, ptr addrspace(3) %325, i32 %163, !dbg !33
  %328 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %240, i16 0, i32 2147483646, i32 159744), !dbg !33
  %329 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %168, i32 %49), !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %328, ptr addrspace(3) %326, i32 16, i32 %329, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %330 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %168, i32 %50), !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %328, ptr addrspace(3) nonnull %327, i32 16, i32 %330, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %331 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 %157, !dbg !33
  %332 = getelementptr inbounds nuw i8, ptr addrspace(3) %331, i32 %209, !dbg !33
  %333 = load <4 x i32>, ptr addrspace(3) %332, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %334 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 %213, !dbg !33
  %335 = getelementptr inbounds nuw i8, ptr addrspace(3) %334, i32 %209, !dbg !33
  %336 = load <4 x i32>, ptr addrspace(3) %335, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %337 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 %216, !dbg !33
  %338 = getelementptr inbounds nuw i8, ptr addrspace(3) %337, i32 %209, !dbg !33
  %339 = load <4 x i32>, ptr addrspace(3) %338, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %340 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 %220, !dbg !33
  %341 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %209, !dbg !33
  %342 = load <4 x i32>, ptr addrspace(3) %341, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %343 = getelementptr inbounds nuw i8, ptr addrspace(3) %331, i32 %223, !dbg !33
  %344 = load <4 x i32>, ptr addrspace(3) %343, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %345 = getelementptr inbounds nuw i8, ptr addrspace(3) %334, i32 %223, !dbg !33
  %346 = load <4 x i32>, ptr addrspace(3) %345, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %347 = getelementptr inbounds nuw i8, ptr addrspace(3) %337, i32 %223, !dbg !33
  %348 = load <4 x i32>, ptr addrspace(3) %347, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %349 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %223, !dbg !33
  %350 = load <4 x i32>, ptr addrspace(3) %349, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %351 = shl i32 %244, 14, !dbg !37
  %352 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %351, !dbg !37
  %353 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %158, !dbg !37
  %354 = getelementptr inbounds nuw i8, ptr addrspace(3) %353, i32 %159, !dbg !37
  %355 = getelementptr inbounds nuw i8, ptr addrspace(3) %353, i32 %160, !dbg !37
  %356 = getelementptr inbounds nuw i8, ptr addrspace(3) %353, i32 %177, !dbg !37
  %357 = getelementptr inbounds nuw i8, ptr addrspace(3) %353, i32 %178, !dbg !37
  %358 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %161, !dbg !37
  %359 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %163, !dbg !37
  %360 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %181, !dbg !37
  %361 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %183, !dbg !37
  %362 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %241, i16 0, i32 2147483646, i32 159744), !dbg !37
  %363 = ptrtoint ptr addrspace(3) %358 to i32, !dbg !37
  %364 = ptrtoint ptr addrspace(3) %354 to i32, !dbg !37
  %365 = sub i32 %364, %363, !dbg !37
  %366 = sdiv i32 %365, 16, !dbg !37
  %367 = add nsw i32 %366, %16, !dbg !37
  %368 = shl nsw i32 %367, 2, !dbg !37
  %369 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %368, i32 %55), !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %362, ptr addrspace(3) %358, i32 16, i32 %369, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %370 = ptrtoint ptr addrspace(3) %359 to i32, !dbg !37
  %371 = ptrtoint ptr addrspace(3) %355 to i32, !dbg !37
  %372 = sub i32 %371, %370, !dbg !37
  %373 = sdiv i32 %372, 16, !dbg !37
  %374 = add nsw i32 %373, %16, !dbg !37
  %375 = shl nsw i32 %374, 2, !dbg !37
  %376 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %375, i32 %56), !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %362, ptr addrspace(3) nonnull %359, i32 16, i32 %376, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %377 = ptrtoint ptr addrspace(3) %360 to i32, !dbg !37
  %378 = ptrtoint ptr addrspace(3) %356 to i32, !dbg !37
  %379 = sub i32 %378, %377, !dbg !37
  %380 = sdiv i32 %379, 16, !dbg !37
  %381 = add nsw i32 %380, %16, !dbg !37
  %382 = shl nsw i32 %381, 2, !dbg !37
  %383 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %382, i32 %57), !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %362, ptr addrspace(3) nonnull %360, i32 16, i32 %383, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %384 = ptrtoint ptr addrspace(3) %361 to i32, !dbg !37
  %385 = ptrtoint ptr addrspace(3) %357 to i32, !dbg !37
  %386 = sub i32 %385, %384, !dbg !37
  %387 = sdiv i32 %386, 16, !dbg !37
  %388 = add nsw i32 %387, %16, !dbg !37
  %389 = shl nsw i32 %388, 2, !dbg !37
  %390 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %389, i32 %58), !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %362, ptr addrspace(3) nonnull %361, i32 16, i32 %390, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %391 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %157, !dbg !37
  %392 = getelementptr inbounds nuw i8, ptr addrspace(3) %391, i32 %224, !dbg !37
  %393 = load <4 x i32>, ptr addrspace(3) %392, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %394 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %213, !dbg !37
  %395 = getelementptr inbounds nuw i8, ptr addrspace(3) %394, i32 %224, !dbg !37
  %396 = load <4 x i32>, ptr addrspace(3) %395, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %397 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %216, !dbg !37
  %398 = getelementptr inbounds nuw i8, ptr addrspace(3) %397, i32 %224, !dbg !37
  %399 = load <4 x i32>, ptr addrspace(3) %398, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %400 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %220, !dbg !37
  %401 = getelementptr inbounds nuw i8, ptr addrspace(3) %400, i32 %224, !dbg !37
  %402 = load <4 x i32>, ptr addrspace(3) %401, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %403 = zext i8 %257 to i32, !dbg !42
  %404 = zext i8 %264 to i32, !dbg !42
  %405 = zext i8 %268 to i32, !dbg !42
  %406 = zext i8 %272 to i32, !dbg !42
  %407 = zext i8 %277 to i32, !dbg !42
  %408 = zext i8 %283 to i32, !dbg !42
  %409 = zext i8 %289 to i32, !dbg !42
  %410 = zext i8 %295 to i32, !dbg !42
  %411 = zext i8 %304 to i32, !dbg !42
  %412 = zext i8 %315 to i32, !dbg !42
  %413 = zext i8 %319 to i32, !dbg !42
  %414 = zext i8 %323 to i32, !dbg !42
  %415 = insertelement <4 x float> poison, float %231, i64 0, !dbg !42
  %416 = insertelement <4 x float> %415, float %232, i64 1, !dbg !42
  %417 = insertelement <4 x float> %416, float %233, i64 2, !dbg !42
  %418 = insertelement <4 x float> %417, float %234, i64 3, !dbg !42
  %419 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %393, <4 x i32> %333, <4 x float> %418, i32 4, i32 4, i32 0, i32 %411, i32 0, i32 %403), !dbg !42
  %420 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %396, <4 x i32> %336, <4 x float> %419, i32 4, i32 4, i32 0, i32 %412, i32 0, i32 %404), !dbg !42
  %421 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %399, <4 x i32> %339, <4 x float> %420, i32 4, i32 4, i32 0, i32 %413, i32 0, i32 %405), !dbg !42
  %422 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %402, <4 x i32> %342, <4 x float> %421, i32 4, i32 4, i32 0, i32 %414, i32 0, i32 %406), !dbg !42
  %423 = extractelement <4 x float> %422, i64 0, !dbg !42
  %424 = extractelement <4 x float> %422, i64 1, !dbg !42
  %425 = extractelement <4 x float> %422, i64 2, !dbg !42
  %426 = extractelement <4 x float> %422, i64 3, !dbg !42
  %427 = insertelement <4 x float> poison, float %235, i64 0, !dbg !42
  %428 = insertelement <4 x float> %427, float %236, i64 1, !dbg !42
  %429 = insertelement <4 x float> %428, float %237, i64 2, !dbg !42
  %430 = insertelement <4 x float> %429, float %238, i64 3, !dbg !42
  %431 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %393, <4 x i32> %344, <4 x float> %430, i32 4, i32 4, i32 0, i32 %411, i32 0, i32 %407), !dbg !42
  %432 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %396, <4 x i32> %346, <4 x float> %431, i32 4, i32 4, i32 0, i32 %412, i32 0, i32 %408), !dbg !42
  %433 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %399, <4 x i32> %348, <4 x float> %432, i32 4, i32 4, i32 0, i32 %413, i32 0, i32 %409), !dbg !42
  %434 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %402, <4 x i32> %350, <4 x float> %433, i32 4, i32 4, i32 0, i32 %414, i32 0, i32 %410), !dbg !42
  %435 = extractelement <4 x float> %434, i64 0, !dbg !42
  %436 = extractelement <4 x float> %434, i64 1, !dbg !42
  %437 = extractelement <4 x float> %434, i64 2, !dbg !42
  %438 = extractelement <4 x float> %434, i64 3, !dbg !42
  %439 = add nuw nsw i32 %239, 1, !dbg !30
  %exitcond.not = icmp eq i32 %439, 31, !dbg !30
  br i1 %exitcond.not, label %440, label %225, !dbg !30

440:                                              ; preds = %225
  %441 = and i32 %31, 56, !dbg !23
  %442 = lshr i32 %15, 3, !dbg !19
  %443 = and i32 %442, 31, !dbg !19
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49168), !dbg !33
  fence syncscope("workgroup") release, !dbg !33
  tail call void @llvm.amdgcn.s.barrier(), !dbg !33
  fence syncscope("workgroup") acquire, !dbg !33
  %444 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81408), i32 %194, !dbg !30
  %445 = getelementptr inbounds nuw i8, ptr addrspace(3) %444, i32 %196, !dbg !30
  %446 = getelementptr inbounds nuw i8, ptr addrspace(3) %445, i32 %198, !dbg !30
  %447 = load i8, ptr addrspace(3) %446, align 1, !dbg !30
  %448 = getelementptr inbounds nuw i8, ptr addrspace(3) %446, i32 128, !dbg !30
  %449 = load i8, ptr addrspace(3) %448, align 1, !dbg !30
  %450 = getelementptr inbounds nuw i8, ptr addrspace(3) %446, i32 256, !dbg !30
  %451 = load i8, ptr addrspace(3) %450, align 1, !dbg !30
  %452 = getelementptr inbounds nuw i8, ptr addrspace(3) %446, i32 384, !dbg !30
  %453 = load i8, ptr addrspace(3) %452, align 1, !dbg !30
  %454 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81408), i32 %200, !dbg !30
  %455 = getelementptr inbounds nuw i8, ptr addrspace(3) %454, i32 %198, !dbg !30
  %456 = load i8, ptr addrspace(3) %455, align 1, !dbg !30
  %457 = getelementptr inbounds nuw i8, ptr addrspace(3) %455, i32 128, !dbg !30
  %458 = load i8, ptr addrspace(3) %457, align 1, !dbg !30
  %459 = getelementptr inbounds nuw i8, ptr addrspace(3) %455, i32 256, !dbg !30
  %460 = load i8, ptr addrspace(3) %459, align 1, !dbg !30
  %461 = getelementptr inbounds nuw i8, ptr addrspace(3) %455, i32 384, !dbg !30
  %462 = load i8, ptr addrspace(3) %461, align 1, !dbg !30
  %463 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 31744), i32 %208, !dbg !30
  %464 = load i8, ptr addrspace(3) %463, align 1, !dbg !30
  %465 = getelementptr inbounds nuw i8, ptr addrspace(3) %463, i32 256, !dbg !30
  %466 = load i8, ptr addrspace(3) %465, align 1, !dbg !30
  %467 = getelementptr inbounds nuw i8, ptr addrspace(3) %463, i32 512, !dbg !30
  %468 = load i8, ptr addrspace(3) %467, align 1, !dbg !30
  %469 = getelementptr inbounds nuw i8, ptr addrspace(3) %463, i32 768, !dbg !30
  %470 = load i8, ptr addrspace(3) %469, align 1, !dbg !30
  %471 = getelementptr inbounds nuw i8, ptr addrspace(3) %325, i32 %157, !dbg !33
  %472 = getelementptr inbounds nuw i8, ptr addrspace(3) %471, i32 %209, !dbg !33
  %473 = load <4 x i32>, ptr addrspace(3) %472, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %474 = getelementptr inbounds nuw i8, ptr addrspace(3) %325, i32 %213, !dbg !33
  %475 = getelementptr inbounds nuw i8, ptr addrspace(3) %474, i32 %209, !dbg !33
  %476 = load <4 x i32>, ptr addrspace(3) %475, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %477 = getelementptr inbounds nuw i8, ptr addrspace(3) %325, i32 %216, !dbg !33
  %478 = getelementptr inbounds nuw i8, ptr addrspace(3) %477, i32 %209, !dbg !33
  %479 = load <4 x i32>, ptr addrspace(3) %478, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %480 = getelementptr inbounds nuw i8, ptr addrspace(3) %325, i32 %220, !dbg !33
  %481 = getelementptr inbounds nuw i8, ptr addrspace(3) %480, i32 %209, !dbg !33
  %482 = load <4 x i32>, ptr addrspace(3) %481, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %483 = getelementptr inbounds nuw i8, ptr addrspace(3) %471, i32 %223, !dbg !33
  %484 = load <4 x i32>, ptr addrspace(3) %483, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %485 = getelementptr inbounds nuw i8, ptr addrspace(3) %474, i32 %223, !dbg !33
  %486 = load <4 x i32>, ptr addrspace(3) %485, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %487 = getelementptr inbounds nuw i8, ptr addrspace(3) %477, i32 %223, !dbg !33
  %488 = load <4 x i32>, ptr addrspace(3) %487, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %489 = getelementptr inbounds nuw i8, ptr addrspace(3) %480, i32 %223, !dbg !33
  %490 = load <4 x i32>, ptr addrspace(3) %489, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %491 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %157, !dbg !37
  %492 = getelementptr inbounds nuw i8, ptr addrspace(3) %491, i32 %224, !dbg !37
  %493 = load <4 x i32>, ptr addrspace(3) %492, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %494 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %213, !dbg !37
  %495 = getelementptr inbounds nuw i8, ptr addrspace(3) %494, i32 %224, !dbg !37
  %496 = load <4 x i32>, ptr addrspace(3) %495, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %497 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %216, !dbg !37
  %498 = getelementptr inbounds nuw i8, ptr addrspace(3) %497, i32 %224, !dbg !37
  %499 = load <4 x i32>, ptr addrspace(3) %498, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %500 = getelementptr inbounds nuw i8, ptr addrspace(3) %352, i32 %220, !dbg !37
  %501 = getelementptr inbounds nuw i8, ptr addrspace(3) %500, i32 %224, !dbg !37
  %502 = load <4 x i32>, ptr addrspace(3) %501, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %503 = zext i8 %447 to i32, !dbg !42
  %504 = zext i8 %449 to i32, !dbg !42
  %505 = zext i8 %451 to i32, !dbg !42
  %506 = zext i8 %453 to i32, !dbg !42
  %507 = zext i8 %456 to i32, !dbg !42
  %508 = zext i8 %458 to i32, !dbg !42
  %509 = zext i8 %460 to i32, !dbg !42
  %510 = zext i8 %462 to i32, !dbg !42
  %511 = zext i8 %464 to i32, !dbg !42
  %512 = zext i8 %466 to i32, !dbg !42
  %513 = zext i8 %468 to i32, !dbg !42
  %514 = zext i8 %470 to i32, !dbg !42
  %515 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %493, <4 x i32> %473, <4 x float> %422, i32 4, i32 4, i32 0, i32 %511, i32 0, i32 %503), !dbg !42
  %516 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %496, <4 x i32> %476, <4 x float> %515, i32 4, i32 4, i32 0, i32 %512, i32 0, i32 %504), !dbg !42
  %517 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %499, <4 x i32> %479, <4 x float> %516, i32 4, i32 4, i32 0, i32 %513, i32 0, i32 %505), !dbg !42
  %518 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %502, <4 x i32> %482, <4 x float> %517, i32 4, i32 4, i32 0, i32 %514, i32 0, i32 %506), !dbg !42
  %519 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %493, <4 x i32> %484, <4 x float> %434, i32 4, i32 4, i32 0, i32 %511, i32 0, i32 %507), !dbg !42
  %520 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %496, <4 x i32> %486, <4 x float> %519, i32 4, i32 4, i32 0, i32 %512, i32 0, i32 %508), !dbg !42
  %521 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %499, <4 x i32> %488, <4 x float> %520, i32 4, i32 4, i32 0, i32 %513, i32 0, i32 %509), !dbg !42
  %522 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %502, <4 x i32> %490, <4 x float> %521, i32 4, i32 4, i32 0, i32 %514, i32 0, i32 %510), !dbg !42
  %523 = zext nneg i32 %443 to i64, !dbg !43
  %524 = sext i32 %14 to i64, !dbg !44
  %525 = or disjoint i64 %524, %523, !dbg !44
  %526 = zext nneg i32 %441 to i64, !dbg !45
  %527 = sext i32 %30 to i64, !dbg !46
  %528 = or disjoint i64 %527, %526, !dbg !46
  %529 = mul nuw nsw i32 %443, 53248, !dbg !47
  %.idx = mul nsw i64 %524, 106496, !dbg !47
  %530 = getelementptr i8, ptr addrspace(1) %2, i64 %.idx, !dbg !47
  %531 = getelementptr bfloat, ptr addrspace(1) %530, i64 %527, !dbg !48
  %532 = or disjoint i32 %529, %441, !dbg !48
  %533 = sext i32 %5 to i64, !dbg !49
  %534 = icmp slt i64 %525, %533, !dbg !49
  %535 = sext i32 %6 to i64, !dbg !50
  %536 = icmp slt i64 %528, %535, !dbg !50
  %537 = and i1 %534, %536, !dbg !51
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %538 = shl i32 %15, 6, !dbg !52
  %539 = and i32 %538, 960, !dbg !52
  %540 = or disjoint i32 %539, %81, !dbg !52
  %541 = or disjoint i32 %540, %82, !dbg !52
  %542 = or disjoint i32 %541, %86, !dbg !52
  %543 = or disjoint i32 %542, %89, !dbg !52
  %544 = and i32 %31, 2040, !dbg !52
  %545 = lshr exact i32 %539, 2, !dbg !52
  %546 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %545, !dbg !52
  %547 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %546, i32 %543, !dbg !52
  %548 = fptrunc <4 x float> %518 to <4 x bfloat>, !dbg !52
  store <4 x bfloat> %548, ptr addrspace(3) %547, align 8, !dbg !52
  %549 = xor i32 %543, 1024, !dbg !52
  %550 = lshr i32 %549, 3, !dbg !52
  %551 = and i32 %550, 536870904, !dbg !52
  %552 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %551, !dbg !52
  %553 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %552, i32 %549, !dbg !52
  %554 = fptrunc <4 x float> %522 to <4 x bfloat>, !dbg !52
  store <4 x bfloat> %554, ptr addrspace(3) %553, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %555 = and i32 %15, 248, !dbg !52
  %556 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %555, !dbg !52
  %557 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %556, i32 %544, !dbg !52
  %558 = load <4 x i32>, ptr addrspace(3) %557, align 16, !dbg !52
  %559 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %531, i16 0, i32 2147483646, i32 159744), !dbg !52
  %560 = shl nuw nsw i32 %532, 1, !dbg !52
  %561 = select i1 %537, i32 %560, i32 -2147483648, !dbg !52
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %558, ptr addrspace(8) %559, i32 %561, i32 0, i32 0), !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) readnone, i16, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) readonly captures(none), i32, i32, i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.ds.bpermute(i32, i32) #3

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i64 @llvm.amdgcn.ballot.i64(i1) #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) readonly captures(none), ptr addrspace(3) writeonly captures(none), i32 immarg, i32, i32, i32 immarg, i32 immarg) #4

; Function Attrs: mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.waitcnt(i32 immarg) #5

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #6

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32>, <4 x i32>, <4 x float>, i32 immarg, i32 immarg, i32 immarg, i32, i32 immarg, i32) #7

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32>, ptr addrspace(8) writeonly captures(none), i32, i32, i32 immarg) #8

attributes #0 = { nofree norecurse nounwind "amdgpu-agpr-alloc"="0" "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-flat-scratch-init" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn }
attributes #6 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #7 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #8 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "gemm_afp4wfp4.py", directory: "/app/aiter/aiter/ops/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"amdhsa_code_object_version", i32 500}
!4 = distinct !DISubprogram(name: "_gemm_afp4_wfp4_kernel", linkageName: "_gemm_afp4_wfp4_kernel", scope: !1, file: !1, line: 14, type: !5, scopeLine: 14, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 61, column: 24, scope: !4)
!8 = !DILocation(line: 40, column: 22, scope: !9, inlinedAt: !11)
!9 = distinct !DILexicalBlockFile(scope: !4, file: !10, discriminator: 0)
!10 = !DIFile(filename: "standard.py", directory: "/app/OAI-triton/python/triton/language")
!11 = !DILocation(line: 63, column: 27, scope: !4)
!12 = !DILocation(line: 40, column: 28, scope: !9, inlinedAt: !11)
!13 = !DILocation(line: 32, column: 23, scope: !14, inlinedAt: !16)
!14 = distinct !DILexicalBlockFile(scope: !4, file: !15, discriminator: 0)
!15 = !DIFile(filename: "pid_preprocessing.py", directory: "/app/aiter/aiter/ops/triton/utils")
!16 = !DILocation(line: 67, column: 44, scope: !4)
!17 = !DILocation(line: 33, column: 22, scope: !14, inlinedAt: !16)
!18 = !DILocation(line: 77, column: 23, scope: !4)
!19 = !DILocation(line: 77, column: 51, scope: !4)
!20 = !DILocation(line: 77, column: 38, scope: !4)
!21 = !DILocation(line: 77, column: 68, scope: !4)
!22 = !DILocation(line: 78, column: 23, scope: !4)
!23 = !DILocation(line: 78, column: 51, scope: !4)
!24 = !DILocation(line: 78, column: 38, scope: !4)
!25 = !DILocation(line: 78, column: 68, scope: !4)
!26 = !DILocation(line: 79, column: 60, scope: !4)
!27 = !DILocation(line: 79, column: 22, scope: !4)
!28 = !DILocation(line: 80, column: 22, scope: !4)
!29 = !DILocation(line: 83, column: 66, scope: !4)
!30 = !DILocation(line: 89, column: 22, scope: !4)
!31 = !DILocation(line: 83, column: 74, scope: !4)
!32 = !DILocation(line: 85, column: 66, scope: !4)
!33 = !DILocation(line: 97, column: 24, scope: !4)
!34 = !{!35}
!35 = !{!"amdgpu.AsyncCopies", !36, !"Scope containing all AsyncCopyGlobalToLocal and BufferLoadToLocal ops"}
!36 = !{!"amdgpu.AsyncOps", !"Domain to hold alias scopes to specify aliasing information between AsyncCopyGlobalToLocal, BufferLoadToLocal and LocalLoad ops"}
!37 = !DILocation(line: 98, column: 24, scope: !4)
!38 = !DILocation(line: 106, column: 18, scope: !4)
!39 = !DILocation(line: 107, column: 18, scope: !4)
!40 = !{!41}
!41 = !{!"amdgpu.LocalLoads", !36, !"Scope containing all LocalLoad ops"}
!42 = !DILocation(line: 103, column: 71, scope: !4)
!43 = !DILocation(line: 114, column: 67, scope: !4)
!44 = !DILocation(line: 114, column: 37, scope: !4)
!45 = !DILocation(line: 115, column: 67, scope: !4)
!46 = !DILocation(line: 115, column: 37, scope: !4)
!47 = !DILocation(line: 116, column: 21, scope: !4)
!48 = !DILocation(line: 116, column: 52, scope: !4)
!49 = !DILocation(line: 117, column: 33, scope: !4)
!50 = !DILocation(line: 117, column: 58, scope: !4)
!51 = !DILocation(line: 117, column: 39, scope: !4)
!52 = !DILocation(line: 118, column: 21, scope: !4)
!53 = !DILocation(line: 118, column: 4, scope: !4)
