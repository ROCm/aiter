; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external addrspace(3) global [0 x i8], align 16

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_gemm_afp4_wfp4_kernel(ptr addrspace(1) inreg readonly captures(none) %0, ptr addrspace(1) inreg readonly captures(none) %1, ptr addrspace(1) inreg writeonly captures(none) %2, ptr addrspace(1) inreg readonly captures(none) %3, ptr addrspace(1) inreg readonly captures(none) %4, i32 inreg %5, i32 inreg %6, ptr addrspace(1) inreg readnone captures(none) %7) local_unnamed_addr #0 !dbg !4 {
  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %10 = add i32 %6, 63, !dbg !8
  %11 = sdiv i32 %10, 64, !dbg !12
  %.frozen = freeze i32 %11, !dbg !13
  %12 = sdiv i32 %9, %.frozen, !dbg !13
  %13 = mul i32 %12, %.frozen, !dbg !17
  %.decomposed = sub i32 %9, %13, !dbg !17
  %14 = shl i32 %12, 5, !dbg !18
  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !19
  %16 = and i32 %15, 63, !dbg !19
  %17 = and i32 %15, 16, !dbg !19
  %18 = and i32 %15, 32, !dbg !19
  %19 = lshr i32 %15, 4, !dbg !19
  %20 = and i32 %19, 15, !dbg !19
  %21 = or disjoint i32 %20, 16, !dbg !19
  %22 = shl i32 %15, 4, !dbg !19
  %23 = and i32 %22, 16, !dbg !19
  %24 = or disjoint i32 %14, %20, !dbg !20
  %25 = or disjoint i32 %14, %21, !dbg !20
  %26 = or disjoint i32 %14, %23, !dbg !20
  %27 = srem i32 %24, %5, !dbg !21
  %28 = srem i32 %25, %5, !dbg !21
  %29 = srem i32 %26, %5, !dbg !21
  %30 = shl nsw i32 %.decomposed, 6, !dbg !22
  %31 = shl i32 %15, 3, !dbg !23
  %32 = and i32 %22, 48, !dbg !23
  %33 = or disjoint i32 %30, %20, !dbg !24
  %34 = or disjoint i32 %30, %21, !dbg !24
  %35 = or disjoint i32 %33, 32, !dbg !24
  %36 = or disjoint i32 %33, 48, !dbg !24
  %37 = or disjoint i32 %30, %32, !dbg !24
  %38 = srem i32 %33, %6, !dbg !25
  %39 = srem i32 %34, %6, !dbg !25
  %40 = srem i32 %35, %6, !dbg !25
  %41 = srem i32 %36, %6, !dbg !25
  %42 = srem i32 %37, %6, !dbg !25
  %43 = and i32 %22, 64, !dbg !26
  %44 = and i32 %22, 112, !dbg !26
  %45 = and i32 %22, 128, !dbg !26
  %46 = and i32 %22, 240, !dbg !26
  %47 = shl i32 %27, 13, !dbg !27
  %48 = shl i32 %28, 13, !dbg !27
  %49 = shl i32 %38, 13, !dbg !28
  %50 = shl i32 %39, 13, !dbg !28
  %51 = shl i32 %40, 13, !dbg !28
  %52 = shl i32 %41, 13, !dbg !28
  %53 = or disjoint i32 %49, %46, !dbg !28
  %54 = or disjoint i32 %50, %46, !dbg !28
  %55 = or disjoint i32 %51, %46, !dbg !28
  %56 = or disjoint i32 %52, %46, !dbg !28
  %57 = shl i32 %15, 4, !dbg !29
  %58 = and i32 %57, 4064, !dbg !29
  %59 = or disjoint i32 %58, 4096, !dbg !29
  %60 = or disjoint i32 %58, 8192, !dbg !29
  %61 = or disjoint i32 %58, 12288, !dbg !29
  %62 = add i32 %29, %58, !dbg !29
  %63 = add i32 %29, %59, !dbg !29
  %64 = add i32 %29, %60, !dbg !29
  %65 = add i32 %29, %61, !dbg !29
  %66 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3, i16 0, i32 2147483646, i32 159744), !dbg !30
  %67 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %66, i32 %62, i32 0, i32 0), !dbg !30
  %68 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %66, i32 %63, i32 0, i32 0), !dbg !30
  %69 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %66, i32 %64, i32 0, i32 0), !dbg !30
  %70 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %66, i32 %65, i32 0, i32 0), !dbg !30
  %71 = xor i32 %22, %31, !dbg !30
  %72 = and i32 %71, 16, !dbg !30
  %73 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %72, !dbg !30
  %74 = getelementptr inbounds nuw i8, ptr addrspace(3) %73, i32 %58, !dbg !30
  store <4 x i32> %67, ptr addrspace(3) %74, align 16, !dbg !30
  %75 = getelementptr inbounds nuw i8, ptr addrspace(3) %74, i32 4096, !dbg !30
  store <4 x i32> %68, ptr addrspace(3) %75, align 16, !dbg !30
  %76 = getelementptr inbounds nuw i8, ptr addrspace(3) %74, i32 8192, !dbg !30
  store <4 x i32> %69, ptr addrspace(3) %76, align 16, !dbg !30
  %77 = getelementptr inbounds nuw i8, ptr addrspace(3) %74, i32 12288, !dbg !30
  store <4 x i32> %70, ptr addrspace(3) %77, align 16, !dbg !30
  %.lobit624 = lshr i32 %15, 2, !dbg !31
  %78 = and i32 %.lobit624, 3, !dbg !31
  %79 = lshr exact i32 %17, 2, !dbg !31
  %80 = lshr exact i32 %18, 2, !dbg !31
  %81 = or disjoint i32 %79, %78, !dbg !31
  %82 = or disjoint i32 %81, %80, !dbg !31
  %83 = lshr i32 %15, 2, !dbg !31
  %84 = and i32 %83, 16, !dbg !31
  %85 = or disjoint i32 %82, %84, !dbg !31
  %86 = lshr i32 %15, 2, !dbg !31
  %87 = and i32 %86, 32, !dbg !31
  %88 = or disjoint i32 %85, %87, !dbg !31
  %89 = xor i32 %88, 64, !dbg !31
  %90 = xor i32 %88, 128, !dbg !31
  %91 = xor i32 %88, 192, !dbg !31
  %92 = xor i32 %88, 256, !dbg !31
  %93 = xor i32 %88, 320, !dbg !31
  %94 = xor i32 %88, 384, !dbg !31
  %95 = xor i32 %88, 448, !dbg !31
  %96 = mul nuw nsw i32 %88, 53248, !dbg !32
  %97 = mul nuw nsw i32 %89, 53248, !dbg !32
  %98 = mul nuw nsw i32 %90, 53248, !dbg !32
  %99 = mul nuw nsw i32 %91, 53248, !dbg !32
  %100 = mul nuw nsw i32 %92, 53248, !dbg !32
  %101 = mul nuw nsw i32 %93, 53248, !dbg !32
  %102 = mul nuw nsw i32 %94, 53248, !dbg !32
  %103 = mul nuw nsw i32 %95, 53248, !dbg !32
  %104 = add i32 %42, %96, !dbg !32
  %105 = add i32 %42, %97, !dbg !32
  %106 = add i32 %42, %98, !dbg !32
  %107 = add i32 %42, %99, !dbg !32
  %108 = add i32 %42, %100, !dbg !32
  %109 = add i32 %42, %101, !dbg !32
  %110 = add i32 %42, %102, !dbg !32
  %111 = add i32 %42, %103, !dbg !32
  %112 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %4, i16 0, i32 2147483646, i32 159744), !dbg !30
  %113 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %112, i32 %104, i32 0, i32 0), !dbg !30
  %114 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %112, i32 %105, i32 0, i32 0), !dbg !30
  %115 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %112, i32 %106, i32 0, i32 0), !dbg !30
  %116 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %112, i32 %107, i32 0, i32 0), !dbg !30
  %117 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %112, i32 %108, i32 0, i32 0), !dbg !30
  %118 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %112, i32 %109, i32 0, i32 0), !dbg !30
  %119 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %112, i32 %110, i32 0, i32 0), !dbg !30
  %120 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %112, i32 %111, i32 0, i32 0), !dbg !30
  %121 = shl i32 %15, 2, !dbg !30
  %122 = xor i32 %121, %22, !dbg !30
  %123 = and i32 %122, 48, !dbg !30
  %124 = shl nuw nsw i32 %88, 6, !dbg !30
  %125 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %123, !dbg !30
  %126 = getelementptr inbounds nuw i8, ptr addrspace(3) %125, i32 %124, !dbg !30
  store <4 x i32> %113, ptr addrspace(3) %126, align 16, !dbg !30
  %127 = or disjoint i32 %85, 64, !dbg !30
  %128 = xor i32 %127, %87, !dbg !30
  %129 = shl nuw nsw i32 %128, 6, !dbg !30
  %130 = getelementptr inbounds nuw i8, ptr addrspace(3) %125, i32 %129, !dbg !30
  store <4 x i32> %114, ptr addrspace(3) %130, align 16, !dbg !30
  %131 = or disjoint i32 %85, 128, !dbg !30
  %132 = xor i32 %131, %87, !dbg !30
  %133 = shl nuw nsw i32 %132, 6, !dbg !30
  %134 = getelementptr inbounds nuw i8, ptr addrspace(3) %125, i32 %133, !dbg !30
  store <4 x i32> %115, ptr addrspace(3) %134, align 16, !dbg !30
  %135 = or disjoint i32 %85, 192, !dbg !30
  %136 = xor i32 %135, %87, !dbg !30
  %137 = shl nuw nsw i32 %136, 6, !dbg !30
  %138 = getelementptr inbounds nuw i8, ptr addrspace(3) %125, i32 %137, !dbg !30
  store <4 x i32> %116, ptr addrspace(3) %138, align 16, !dbg !30
  %139 = or disjoint i32 %85, 256, !dbg !30
  %140 = xor i32 %139, %87, !dbg !30
  %141 = shl nuw nsw i32 %140, 6, !dbg !30
  %142 = getelementptr inbounds nuw i8, ptr addrspace(3) %125, i32 %141, !dbg !30
  store <4 x i32> %117, ptr addrspace(3) %142, align 16, !dbg !30
  %143 = or disjoint i32 %85, 320, !dbg !30
  %144 = xor i32 %143, %87, !dbg !30
  %145 = shl nuw nsw i32 %144, 6, !dbg !30
  %146 = getelementptr inbounds nuw i8, ptr addrspace(3) %125, i32 %145, !dbg !30
  store <4 x i32> %118, ptr addrspace(3) %146, align 16, !dbg !30
  %147 = or disjoint i32 %85, 384, !dbg !30
  %148 = xor i32 %147, %87, !dbg !30
  %149 = shl nuw nsw i32 %148, 6, !dbg !30
  %150 = getelementptr inbounds nuw i8, ptr addrspace(3) %125, i32 %149, !dbg !30
  store <4 x i32> %119, ptr addrspace(3) %150, align 16, !dbg !30
  %151 = or disjoint i32 %85, 448, !dbg !30
  %152 = xor i32 %151, %87, !dbg !30
  %153 = shl nuw nsw i32 %152, 6, !dbg !30
  %154 = getelementptr inbounds nuw i8, ptr addrspace(3) %125, i32 %153, !dbg !30
  store <4 x i32> %120, ptr addrspace(3) %154, align 16, !dbg !30
  %and.ra = and i32 %15, 48, !dbg !33
  %155 = xor i32 %46, %and.ra, !dbg !33
  %and.ra25 = and i32 %15, 192, !dbg !33
  %156 = xor i32 %155, %and.ra25, !dbg !33
  %157 = shl nuw nsw i32 %20, 8, !dbg !33
  %158 = or disjoint i32 %157, 4096, !dbg !33
  %159 = or disjoint i32 %46, %157, !dbg !33
  %160 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %159, !dbg !33
  %161 = or disjoint i32 %46, %158, !dbg !33
  %162 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %161, !dbg !33
  %163 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %0, i16 0, i32 2147483646, i32 159744), !dbg !33
  %gepdiff = sub nsw i32 %156, %46, !dbg !33
  %.lhs.trunc = trunc nsw i32 %gepdiff to i16, !dbg !33
  %164 = ashr exact i16 %.lhs.trunc, 4, !dbg !33
  %.sext = sext i16 %164 to i32, !dbg !33
  %165 = add nsw i32 %16, %.sext, !dbg !33
  %166 = shl nsw i32 %.sext, 4, !dbg !33
  %167 = add nsw i32 %166, %46, !dbg !27
  %168 = add i32 %167, %47, !dbg !33
  %169 = tail call i64 @llvm.amdgcn.ballot.i64(i1 true), !dbg !33
  %170 = zext nneg i32 %165 to i64, !dbg !33
  %171 = lshr i64 %169, %170, !dbg !33
  %172 = trunc i64 %171 to i1, !dbg !33
  %173 = select i1 %172, i32 %168, i32 -2147483648, !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %163, ptr addrspace(3) %160, i32 16, i32 %173, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %174 = add i32 %167, %48, !dbg !33
  %175 = select i1 %172, i32 %174, i32 -2147483648, !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %163, ptr addrspace(3) nonnull %162, i32 16, i32 %175, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %176 = or disjoint i32 %157, 8192, !dbg !37
  %177 = or disjoint i32 %157, 12288, !dbg !37
  %178 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %159, !dbg !37
  %179 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %161, !dbg !37
  %180 = or disjoint i32 %46, %176, !dbg !37
  %181 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %180, !dbg !37
  %182 = or disjoint i32 %46, %177, !dbg !37
  %183 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %182, !dbg !37
  %184 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %1, i16 0, i32 2147483646, i32 159744), !dbg !37
  %185 = add i32 %53, %166, !dbg !37
  %186 = select i1 %172, i32 %185, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %184, ptr addrspace(3) %178, i32 16, i32 %186, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %187 = add i32 %54, %166, !dbg !37
  %188 = select i1 %172, i32 %187, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %184, ptr addrspace(3) nonnull %179, i32 16, i32 %188, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %189 = add i32 %55, %166, !dbg !37
  %190 = select i1 %172, i32 %189, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %184, ptr addrspace(3) nonnull %181, i32 16, i32 %190, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %191 = add i32 %56, %166, !dbg !37
  %192 = select i1 %172, i32 %191, i32 -2147483648, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %184, ptr addrspace(3) nonnull %183, i32 16, i32 %192, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %193 = getelementptr i8, ptr addrspace(1) %0, i64 256, !dbg !38
  %194 = getelementptr i8, ptr addrspace(1) %1, i64 256, !dbg !39
  %195 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 90112), i32 %159, !dbg !33
  %196 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 90112), i32 %161, !dbg !33
  %197 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %193, i16 0, i32 2147483646, i32 159744), !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %197, ptr addrspace(3) %195, i32 16, i32 %173, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %197, ptr addrspace(3) nonnull %196, i32 16, i32 %175, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %198 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %159, !dbg !37
  %199 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %161, !dbg !37
  %200 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %180, !dbg !37
  %201 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %182, !dbg !37
  %202 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %194, i16 0, i32 2147483646, i32 159744), !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %202, ptr addrspace(3) %198, i32 16, i32 %186, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %202, ptr addrspace(3) nonnull %199, i32 16, i32 %188, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %202, ptr addrspace(3) nonnull %200, i32 16, i32 %190, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %202, ptr addrspace(3) nonnull %201, i32 16, i32 %192, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %203 = and i32 %15, 15
  %204 = icmp eq i32 %17, 0
  %205 = select i1 %204, i32 0, i32 48
  %206 = icmp eq i32 %18, 0
  %207 = shl nuw nsw i32 %18, 1
  %invariant.op = or disjoint i32 %207, %203, !dbg !30
  %invariant.op37 = or disjoint i32 %invariant.op, %205, !dbg !30
  %208 = or disjoint i32 %203, 16
  %209 = xor i32 %205, %208
  %invariant.op39 = or disjoint i32 %207, %209, !dbg !30
  %210 = or disjoint i32 %87, %84
  %211 = or disjoint i32 %210, %203
  %212 = and i32 %.lobit624, 48
  %213 = or disjoint i32 %212, %203
  %214 = select i1 %204, i32 0, i32 80
  %215 = select i1 %206, i32 0, i32 160
  %216 = or disjoint i32 %214, %215
  %217 = xor i32 %216, %213
  %218 = shl nuw nsw i32 %203, 8
  %219 = or disjoint i32 %32, 64
  %220 = xor i32 %219, %43
  %221 = or disjoint i32 %220, %45
  %222 = xor i32 %221, %and.ra
  %223 = or disjoint i32 %44, 128
  %224 = or disjoint i32 %45, %and.ra
  %225 = xor i32 %224, %223
  %226 = or disjoint i32 %32, 192
  %227 = or disjoint i32 %43, %and.ra
  %228 = or disjoint i32 %227, %45
  %229 = xor i32 %228, %226
  %230 = shl i32 %15, 8
  %231 = and i32 %230, 3840
  %232 = or disjoint i32 %231, 4096
  %233 = shl nuw nsw i32 %211, 8
  br label %234, !dbg !30

234:                                              ; preds = %8, %234
  %235 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), %8 ], [ %361, %234 ]
  %236 = phi ptr addrspace(3) [ @global_smem, %8 ], [ %235, %234 ]
  %237 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 90112), %8 ], [ %336, %234 ]
  %238 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), %8 ], [ %237, %234 ]
  %239 = phi i32 [ 1, %8 ], [ %255, %234 ]
  %240 = phi ptr addrspace(1) [ %194, %8 ], [ %252, %234 ]
  %241 = phi ptr addrspace(1) [ %193, %8 ], [ %251, %234 ]
  %242 = phi float [ 0.000000e+00, %8 ], [ %428, %234 ]
  %243 = phi float [ 0.000000e+00, %8 ], [ %429, %234 ]
  %244 = phi float [ 0.000000e+00, %8 ], [ %430, %234 ]
  %245 = phi float [ 0.000000e+00, %8 ], [ %431, %234 ]
  %246 = phi float [ 0.000000e+00, %8 ], [ %440, %234 ]
  %247 = phi float [ 0.000000e+00, %8 ], [ %441, %234 ]
  %248 = phi float [ 0.000000e+00, %8 ], [ %442, %234 ]
  %249 = phi float [ 0.000000e+00, %8 ], [ %443, %234 ]
  %250 = phi i32 [ 0, %8 ], [ %444, %234 ]
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49162), !dbg !33
  fence syncscope("workgroup") release, !dbg !33
  tail call void @llvm.amdgcn.s.barrier(), !dbg !33
  fence syncscope("workgroup") acquire, !dbg !33
  %251 = getelementptr i8, ptr addrspace(1) %241, i64 256, !dbg !38
  %252 = getelementptr i8, ptr addrspace(1) %240, i64 256, !dbg !39
  %253 = add i32 %239, 1, !dbg !30
  %254 = icmp slt i32 %253, 3, !dbg !30
  %255 = select i1 %254, i32 %253, i32 0, !dbg !30
  %256 = shl nuw nsw i32 %250, 9, !dbg !30
  %257 = and i32 %256, 512, !dbg !30
  %258 = and i32 %256, 1024, !dbg !30
  %.reass38 = or disjoint i32 %257, %invariant.op37
  %259 = or disjoint i32 %.reass38, %258, !dbg !30
  %260 = and i32 %256, 2048, !dbg !30
  %261 = or disjoint i32 %259, %260, !dbg !30
  %262 = and i32 %256, 4096, !dbg !30
  %263 = icmp samesign ult i32 %250, 16, !dbg !30
  %264 = select i1 %263, i32 0, i32 8192, !dbg !30
  %265 = or disjoint i32 %264, %262, !dbg !30
  %266 = xor i32 %265, %261, !dbg !30
  %267 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %266, !dbg !30
  %268 = load i8, ptr addrspace(3) %267, align 1, !dbg !30
  %269 = or disjoint i32 %259, 128, !dbg !30
  %270 = shl i32 %250, 9, !dbg !30
  %271 = and i32 %270, 6144, !dbg !30
  %272 = or disjoint i32 %271, %264, !dbg !30
  %273 = xor i32 %272, %269, !dbg !30
  %274 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %273, !dbg !30
  %275 = load i8, ptr addrspace(3) %274, align 1, !dbg !30
  %276 = or disjoint i32 %259, 256, !dbg !30
  %277 = xor i32 %272, %276, !dbg !30
  %278 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %277, !dbg !30
  %279 = load i8, ptr addrspace(3) %278, align 1, !dbg !30
  %280 = or disjoint i32 %259, 384, !dbg !30
  %281 = xor i32 %272, %280, !dbg !30
  %282 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %281, !dbg !30
  %283 = load i8, ptr addrspace(3) %282, align 1, !dbg !30
  %.reass = or disjoint i32 %257, %invariant.op39
  %284 = or disjoint i32 %258, %.reass, !dbg !30
  %and.ra29 = and i32 %256, 6144, !dbg !30
  %285 = or disjoint i32 %264, %and.ra29, !dbg !30
  %286 = xor i32 %285, %284, !dbg !30
  %287 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %286, !dbg !30
  %288 = load i8, ptr addrspace(3) %287, align 1, !dbg !30
  %289 = or disjoint i32 %.reass, 128, !dbg !30
  %290 = xor i32 %271, %289, !dbg !30
  %291 = xor i32 %290, %258, !dbg !30
  %292 = xor i32 %291, %264, !dbg !30
  %293 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %292, !dbg !30
  %294 = load i8, ptr addrspace(3) %293, align 1, !dbg !30
  %295 = or disjoint i32 %.reass, 256, !dbg !30
  %296 = xor i32 %271, %295, !dbg !30
  %297 = xor i32 %296, %258, !dbg !30
  %298 = xor i32 %297, %264, !dbg !30
  %299 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %298, !dbg !30
  %300 = load i8, ptr addrspace(3) %299, align 1, !dbg !30
  %301 = or disjoint i32 %.reass, 384, !dbg !30
  %302 = xor i32 %271, %301, !dbg !30
  %303 = xor i32 %302, %258, !dbg !30
  %304 = xor i32 %303, %264, !dbg !30
  %305 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %304, !dbg !30
  %306 = load i8, ptr addrspace(3) %305, align 1, !dbg !30
  %307 = shl nuw nsw i32 %250, 10, !dbg !30
  %308 = and i32 %307, 3072, !dbg !30
  %309 = and i32 %307, 12288, !dbg !30
  %310 = select i1 %263, i32 0, i32 16384, !dbg !30
  %311 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %309, !dbg !30
  %312 = getelementptr i8, ptr addrspace(3) %311, i32 %308, !dbg !30
  %313 = getelementptr i8, ptr addrspace(3) %312, i32 %217, !dbg !30
  %314 = getelementptr i8, ptr addrspace(3) %313, i32 %310, !dbg !30
  %315 = load i8, ptr addrspace(3) %314, align 1, !dbg !30
  %316 = shl i32 %250, 10, !dbg !30
  %317 = and i32 %316, 4096, !dbg !30
  %318 = or disjoint i32 %317, %217, !dbg !30
  %319 = or disjoint i32 %318, %308, !dbg !30
  %320 = or disjoint i32 %319, 256, !dbg !30
  %321 = shl i32 %250, 10, !dbg !30
  %322 = and i32 %321, 8192, !dbg !30
  %323 = or disjoint i32 %310, %322, !dbg !30
  %324 = xor i32 %323, %320, !dbg !30
  %325 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %324, !dbg !30
  %326 = load i8, ptr addrspace(3) %325, align 1, !dbg !30
  %327 = or disjoint i32 %319, 512, !dbg !30
  %328 = xor i32 %323, %327, !dbg !30
  %329 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %328, !dbg !30
  %330 = load i8, ptr addrspace(3) %329, align 1, !dbg !30
  %331 = or disjoint i32 %319, 768, !dbg !30
  %332 = xor i32 %323, %331, !dbg !30
  %333 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %332, !dbg !30
  %334 = load i8, ptr addrspace(3) %333, align 1, !dbg !30
  %335 = shl i32 %255, 13, !dbg !33
  %336 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %335, !dbg !33
  %337 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %159, !dbg !33
  %338 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %161, !dbg !33
  %339 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %251, i16 0, i32 2147483646, i32 159744), !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %339, ptr addrspace(3) %337, i32 16, i32 %168, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %339, ptr addrspace(3) nonnull %338, i32 16, i32 %174, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %340 = getelementptr inbounds nuw i8, ptr addrspace(3) %238, i32 %155, !dbg !33
  %341 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %218, !dbg !33
  %342 = load <4 x i32>, ptr addrspace(3) %341, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %343 = getelementptr inbounds nuw i8, ptr addrspace(3) %238, i32 %222, !dbg !33
  %344 = getelementptr inbounds nuw i8, ptr addrspace(3) %343, i32 %218, !dbg !33
  %345 = load <4 x i32>, ptr addrspace(3) %344, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %346 = getelementptr inbounds nuw i8, ptr addrspace(3) %238, i32 %225, !dbg !33
  %347 = getelementptr inbounds nuw i8, ptr addrspace(3) %346, i32 %218, !dbg !33
  %348 = load <4 x i32>, ptr addrspace(3) %347, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %349 = getelementptr inbounds nuw i8, ptr addrspace(3) %238, i32 %229, !dbg !33
  %350 = getelementptr inbounds nuw i8, ptr addrspace(3) %349, i32 %218, !dbg !33
  %351 = load <4 x i32>, ptr addrspace(3) %350, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %352 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %232, !dbg !33
  %353 = load <4 x i32>, ptr addrspace(3) %352, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %354 = getelementptr inbounds nuw i8, ptr addrspace(3) %343, i32 %232, !dbg !33
  %355 = load <4 x i32>, ptr addrspace(3) %354, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %356 = getelementptr inbounds nuw i8, ptr addrspace(3) %346, i32 %232, !dbg !33
  %357 = load <4 x i32>, ptr addrspace(3) %356, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %358 = getelementptr inbounds nuw i8, ptr addrspace(3) %349, i32 %232, !dbg !33
  %359 = load <4 x i32>, ptr addrspace(3) %358, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %360 = shl i32 %255, 14, !dbg !37
  %361 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %360, !dbg !37
  %362 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %156, !dbg !37
  %363 = getelementptr inbounds nuw i8, ptr addrspace(3) %362, i32 %157, !dbg !37
  %364 = getelementptr inbounds nuw i8, ptr addrspace(3) %362, i32 %158, !dbg !37
  %365 = getelementptr inbounds nuw i8, ptr addrspace(3) %362, i32 %176, !dbg !37
  %366 = getelementptr inbounds nuw i8, ptr addrspace(3) %362, i32 %177, !dbg !37
  %367 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %159, !dbg !37
  %368 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %161, !dbg !37
  %369 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %180, !dbg !37
  %370 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %182, !dbg !37
  %371 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %252, i16 0, i32 2147483646, i32 159744), !dbg !37
  %372 = ptrtoint ptr addrspace(3) %367 to i32, !dbg !37
  %373 = ptrtoint ptr addrspace(3) %363 to i32, !dbg !37
  %374 = sub i32 %373, %372, !dbg !37
  %375 = sdiv i32 %374, 16, !dbg !37
  %376 = shl nsw i32 %375, 4, !dbg !37
  %377 = add i32 %376, %53, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %371, ptr addrspace(3) %367, i32 16, i32 %377, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %378 = ptrtoint ptr addrspace(3) %368 to i32, !dbg !37
  %379 = ptrtoint ptr addrspace(3) %364 to i32, !dbg !37
  %380 = sub i32 %379, %378, !dbg !37
  %381 = sdiv i32 %380, 16, !dbg !37
  %382 = shl nsw i32 %381, 4, !dbg !37
  %383 = add i32 %382, %54, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %371, ptr addrspace(3) nonnull %368, i32 16, i32 %383, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %384 = ptrtoint ptr addrspace(3) %369 to i32, !dbg !37
  %385 = ptrtoint ptr addrspace(3) %365 to i32, !dbg !37
  %386 = sub i32 %385, %384, !dbg !37
  %387 = sdiv i32 %386, 16, !dbg !37
  %388 = shl nsw i32 %387, 4, !dbg !37
  %389 = add i32 %388, %55, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %371, ptr addrspace(3) nonnull %369, i32 16, i32 %389, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %390 = ptrtoint ptr addrspace(3) %370 to i32, !dbg !37
  %391 = ptrtoint ptr addrspace(3) %366 to i32, !dbg !37
  %392 = sub i32 %391, %390, !dbg !37
  %393 = sdiv i32 %392, 16, !dbg !37
  %394 = shl nsw i32 %393, 4, !dbg !37
  %395 = add i32 %394, %56, !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %371, ptr addrspace(3) nonnull %370, i32 16, i32 %395, i32 0, i32 0, i32 3), !dbg !37, !alias.scope !34
  %396 = getelementptr inbounds nuw i8, ptr addrspace(3) %236, i32 %155, !dbg !37
  %397 = getelementptr inbounds nuw i8, ptr addrspace(3) %396, i32 %233, !dbg !37
  %398 = load <4 x i32>, ptr addrspace(3) %397, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %399 = getelementptr inbounds nuw i8, ptr addrspace(3) %236, i32 %222, !dbg !37
  %400 = getelementptr inbounds nuw i8, ptr addrspace(3) %399, i32 %233, !dbg !37
  %401 = load <4 x i32>, ptr addrspace(3) %400, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %402 = getelementptr inbounds nuw i8, ptr addrspace(3) %236, i32 %225, !dbg !37
  %403 = getelementptr inbounds nuw i8, ptr addrspace(3) %402, i32 %233, !dbg !37
  %404 = load <4 x i32>, ptr addrspace(3) %403, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %405 = getelementptr inbounds nuw i8, ptr addrspace(3) %236, i32 %229, !dbg !37
  %406 = getelementptr inbounds nuw i8, ptr addrspace(3) %405, i32 %233, !dbg !37
  %407 = load <4 x i32>, ptr addrspace(3) %406, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %408 = zext i8 %268 to i32, !dbg !42
  %409 = zext i8 %275 to i32, !dbg !42
  %410 = zext i8 %279 to i32, !dbg !42
  %411 = zext i8 %283 to i32, !dbg !42
  %412 = zext i8 %288 to i32, !dbg !42
  %413 = zext i8 %294 to i32, !dbg !42
  %414 = zext i8 %300 to i32, !dbg !42
  %415 = zext i8 %306 to i32, !dbg !42
  %416 = zext i8 %315 to i32, !dbg !42
  %417 = zext i8 %326 to i32, !dbg !42
  %418 = zext i8 %330 to i32, !dbg !42
  %419 = zext i8 %334 to i32, !dbg !42
  %420 = insertelement <4 x float> poison, float %242, i64 0, !dbg !42
  %421 = insertelement <4 x float> %420, float %243, i64 1, !dbg !42
  %422 = insertelement <4 x float> %421, float %244, i64 2, !dbg !42
  %423 = insertelement <4 x float> %422, float %245, i64 3, !dbg !42
  %424 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %398, <4 x i32> %342, <4 x float> %423, i32 4, i32 4, i32 0, i32 %416, i32 0, i32 %408), !dbg !42
  %425 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %401, <4 x i32> %345, <4 x float> %424, i32 4, i32 4, i32 0, i32 %417, i32 0, i32 %409), !dbg !42
  %426 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %404, <4 x i32> %348, <4 x float> %425, i32 4, i32 4, i32 0, i32 %418, i32 0, i32 %410), !dbg !42
  %427 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %407, <4 x i32> %351, <4 x float> %426, i32 4, i32 4, i32 0, i32 %419, i32 0, i32 %411), !dbg !42
  %428 = extractelement <4 x float> %427, i64 0, !dbg !42
  %429 = extractelement <4 x float> %427, i64 1, !dbg !42
  %430 = extractelement <4 x float> %427, i64 2, !dbg !42
  %431 = extractelement <4 x float> %427, i64 3, !dbg !42
  %432 = insertelement <4 x float> poison, float %246, i64 0, !dbg !42
  %433 = insertelement <4 x float> %432, float %247, i64 1, !dbg !42
  %434 = insertelement <4 x float> %433, float %248, i64 2, !dbg !42
  %435 = insertelement <4 x float> %434, float %249, i64 3, !dbg !42
  %436 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %398, <4 x i32> %353, <4 x float> %435, i32 4, i32 4, i32 0, i32 %416, i32 0, i32 %412), !dbg !42
  %437 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %401, <4 x i32> %355, <4 x float> %436, i32 4, i32 4, i32 0, i32 %417, i32 0, i32 %413), !dbg !42
  %438 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %404, <4 x i32> %357, <4 x float> %437, i32 4, i32 4, i32 0, i32 %418, i32 0, i32 %414), !dbg !42
  %439 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %407, <4 x i32> %359, <4 x float> %438, i32 4, i32 4, i32 0, i32 %419, i32 0, i32 %415), !dbg !42
  %440 = extractelement <4 x float> %439, i64 0, !dbg !42
  %441 = extractelement <4 x float> %439, i64 1, !dbg !42
  %442 = extractelement <4 x float> %439, i64 2, !dbg !42
  %443 = extractelement <4 x float> %439, i64 3, !dbg !42
  %444 = add nuw nsw i32 %250, 1, !dbg !30
  %exitcond.not = icmp eq i32 %444, 30, !dbg !30
  br i1 %exitcond.not, label %445, label %234, !dbg !30

445:                                              ; preds = %234
  %446 = and i32 %31, 56, !dbg !23
  %447 = lshr i32 %15, 3, !dbg !19
  %448 = and i32 %447, 31, !dbg !19
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49168), !dbg !33
  fence syncscope("workgroup") release, !dbg !33
  tail call void @llvm.amdgcn.s.barrier(), !dbg !33
  fence syncscope("workgroup") acquire, !dbg !33
  %449 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 121856), i32 %203, !dbg !30
  %450 = getelementptr inbounds nuw i8, ptr addrspace(3) %449, i32 %205, !dbg !30
  %451 = getelementptr inbounds nuw i8, ptr addrspace(3) %450, i32 %207, !dbg !30
  %452 = load i8, ptr addrspace(3) %451, align 1, !dbg !30
  %453 = getelementptr inbounds nuw i8, ptr addrspace(3) %451, i32 128, !dbg !30
  %454 = load i8, ptr addrspace(3) %453, align 1, !dbg !30
  %455 = getelementptr inbounds nuw i8, ptr addrspace(3) %451, i32 256, !dbg !30
  %456 = load i8, ptr addrspace(3) %455, align 1, !dbg !30
  %457 = getelementptr inbounds nuw i8, ptr addrspace(3) %451, i32 384, !dbg !30
  %458 = load i8, ptr addrspace(3) %457, align 1, !dbg !30
  %459 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 121856), i32 %209, !dbg !30
  %460 = getelementptr inbounds nuw i8, ptr addrspace(3) %459, i32 %207, !dbg !30
  %461 = load i8, ptr addrspace(3) %460, align 1, !dbg !30
  %462 = getelementptr inbounds nuw i8, ptr addrspace(3) %460, i32 128, !dbg !30
  %463 = load i8, ptr addrspace(3) %462, align 1, !dbg !30
  %464 = getelementptr inbounds nuw i8, ptr addrspace(3) %460, i32 256, !dbg !30
  %465 = load i8, ptr addrspace(3) %464, align 1, !dbg !30
  %466 = getelementptr inbounds nuw i8, ptr addrspace(3) %460, i32 384, !dbg !30
  %467 = load i8, ptr addrspace(3) %466, align 1, !dbg !30
  %468 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 79872), i32 %217, !dbg !30
  %469 = load i8, ptr addrspace(3) %468, align 1, !dbg !30
  %470 = getelementptr inbounds nuw i8, ptr addrspace(3) %468, i32 256, !dbg !30
  %471 = load i8, ptr addrspace(3) %470, align 1, !dbg !30
  %472 = getelementptr inbounds nuw i8, ptr addrspace(3) %468, i32 512, !dbg !30
  %473 = load i8, ptr addrspace(3) %472, align 1, !dbg !30
  %474 = getelementptr inbounds nuw i8, ptr addrspace(3) %468, i32 768, !dbg !30
  %475 = load i8, ptr addrspace(3) %474, align 1, !dbg !30
  %476 = or disjoint i32 %155, %218, !dbg !33
  %477 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 %476, !dbg !33
  %478 = load <4 x i32>, ptr addrspace(3) %477, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %479 = or disjoint i32 %222, %218, !dbg !33
  %480 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 %479, !dbg !33
  %481 = load <4 x i32>, ptr addrspace(3) %480, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %482 = or disjoint i32 %225, %218, !dbg !33
  %483 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 %482, !dbg !33
  %484 = load <4 x i32>, ptr addrspace(3) %483, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %485 = or disjoint i32 %229, %218, !dbg !33
  %486 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 %485, !dbg !33
  %487 = load <4 x i32>, ptr addrspace(3) %486, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %488 = or disjoint i32 %155, %232, !dbg !33
  %489 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 %488, !dbg !33
  %490 = load <4 x i32>, ptr addrspace(3) %489, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %491 = or disjoint i32 %222, %232, !dbg !33
  %492 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 %491, !dbg !33
  %493 = load <4 x i32>, ptr addrspace(3) %492, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %494 = or disjoint i32 %225, %232, !dbg !33
  %495 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 %494, !dbg !33
  %496 = load <4 x i32>, ptr addrspace(3) %495, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %497 = or disjoint i32 %229, %232, !dbg !33
  %498 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 %497, !dbg !33
  %499 = load <4 x i32>, ptr addrspace(3) %498, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %500 = or disjoint i32 %155, %233, !dbg !37
  %501 = getelementptr inbounds nuw i8, ptr addrspace(3) %235, i32 %500, !dbg !37
  %502 = load <4 x i32>, ptr addrspace(3) %501, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %503 = or disjoint i32 %222, %233, !dbg !37
  %504 = getelementptr inbounds nuw i8, ptr addrspace(3) %235, i32 %503, !dbg !37
  %505 = load <4 x i32>, ptr addrspace(3) %504, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %506 = or disjoint i32 %225, %233, !dbg !37
  %507 = getelementptr inbounds nuw i8, ptr addrspace(3) %235, i32 %506, !dbg !37
  %508 = load <4 x i32>, ptr addrspace(3) %507, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %509 = or disjoint i32 %229, %233, !dbg !37
  %510 = getelementptr inbounds nuw i8, ptr addrspace(3) %235, i32 %509, !dbg !37
  %511 = load <4 x i32>, ptr addrspace(3) %510, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %512 = zext i8 %452 to i32, !dbg !42
  %513 = zext i8 %454 to i32, !dbg !42
  %514 = zext i8 %456 to i32, !dbg !42
  %515 = zext i8 %458 to i32, !dbg !42
  %516 = zext i8 %461 to i32, !dbg !42
  %517 = zext i8 %463 to i32, !dbg !42
  %518 = zext i8 %465 to i32, !dbg !42
  %519 = zext i8 %467 to i32, !dbg !42
  %520 = zext i8 %469 to i32, !dbg !42
  %521 = zext i8 %471 to i32, !dbg !42
  %522 = zext i8 %473 to i32, !dbg !42
  %523 = zext i8 %475 to i32, !dbg !42
  %524 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %502, <4 x i32> %478, <4 x float> %427, i32 4, i32 4, i32 0, i32 %520, i32 0, i32 %512), !dbg !42
  %525 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %505, <4 x i32> %481, <4 x float> %524, i32 4, i32 4, i32 0, i32 %521, i32 0, i32 %513), !dbg !42
  %526 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %508, <4 x i32> %484, <4 x float> %525, i32 4, i32 4, i32 0, i32 %522, i32 0, i32 %514), !dbg !42
  %527 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %511, <4 x i32> %487, <4 x float> %526, i32 4, i32 4, i32 0, i32 %523, i32 0, i32 %515), !dbg !42
  %528 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %502, <4 x i32> %490, <4 x float> %439, i32 4, i32 4, i32 0, i32 %520, i32 0, i32 %516), !dbg !42
  %529 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %505, <4 x i32> %493, <4 x float> %528, i32 4, i32 4, i32 0, i32 %521, i32 0, i32 %517), !dbg !42
  %530 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %508, <4 x i32> %496, <4 x float> %529, i32 4, i32 4, i32 0, i32 %522, i32 0, i32 %518), !dbg !42
  %531 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %511, <4 x i32> %499, <4 x float> %530, i32 4, i32 4, i32 0, i32 %523, i32 0, i32 %519), !dbg !42
  %532 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 122368), i32 %203, !dbg !30
  %533 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %205, !dbg !30
  %534 = getelementptr inbounds nuw i8, ptr addrspace(3) %533, i32 %207, !dbg !30
  %535 = load i8, ptr addrspace(3) %534, align 1, !dbg !30
  %536 = getelementptr inbounds nuw i8, ptr addrspace(3) %534, i32 128, !dbg !30
  %537 = load i8, ptr addrspace(3) %536, align 1, !dbg !30
  %538 = getelementptr inbounds nuw i8, ptr addrspace(3) %534, i32 256, !dbg !30
  %539 = load i8, ptr addrspace(3) %538, align 1, !dbg !30
  %540 = getelementptr inbounds nuw i8, ptr addrspace(3) %534, i32 384, !dbg !30
  %541 = load i8, ptr addrspace(3) %540, align 1, !dbg !30
  %542 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 122368), i32 %209, !dbg !30
  %543 = getelementptr inbounds nuw i8, ptr addrspace(3) %542, i32 %207, !dbg !30
  %544 = load i8, ptr addrspace(3) %543, align 1, !dbg !30
  %545 = getelementptr inbounds nuw i8, ptr addrspace(3) %543, i32 128, !dbg !30
  %546 = load i8, ptr addrspace(3) %545, align 1, !dbg !30
  %547 = getelementptr inbounds nuw i8, ptr addrspace(3) %543, i32 256, !dbg !30
  %548 = load i8, ptr addrspace(3) %547, align 1, !dbg !30
  %549 = getelementptr inbounds nuw i8, ptr addrspace(3) %543, i32 384, !dbg !30
  %550 = load i8, ptr addrspace(3) %549, align 1, !dbg !30
  %551 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 80896), i32 %217, !dbg !30
  %552 = load i8, ptr addrspace(3) %551, align 1, !dbg !30
  %553 = getelementptr inbounds nuw i8, ptr addrspace(3) %551, i32 256, !dbg !30
  %554 = load i8, ptr addrspace(3) %553, align 1, !dbg !30
  %555 = getelementptr inbounds nuw i8, ptr addrspace(3) %551, i32 512, !dbg !30
  %556 = load i8, ptr addrspace(3) %555, align 1, !dbg !30
  %557 = getelementptr inbounds nuw i8, ptr addrspace(3) %551, i32 768, !dbg !30
  %558 = load i8, ptr addrspace(3) %557, align 1, !dbg !30
  %559 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %476, !dbg !33
  %560 = load <4 x i32>, ptr addrspace(3) %559, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %561 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %479, !dbg !33
  %562 = load <4 x i32>, ptr addrspace(3) %561, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %563 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %482, !dbg !33
  %564 = load <4 x i32>, ptr addrspace(3) %563, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %565 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %485, !dbg !33
  %566 = load <4 x i32>, ptr addrspace(3) %565, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %567 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %488, !dbg !33
  %568 = load <4 x i32>, ptr addrspace(3) %567, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %569 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %491, !dbg !33
  %570 = load <4 x i32>, ptr addrspace(3) %569, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %571 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %494, !dbg !33
  %572 = load <4 x i32>, ptr addrspace(3) %571, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %573 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %497, !dbg !33
  %574 = load <4 x i32>, ptr addrspace(3) %573, align 16, !dbg !33, !alias.scope !40, !noalias !34
  %575 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %500, !dbg !37
  %576 = load <4 x i32>, ptr addrspace(3) %575, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %577 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %503, !dbg !37
  %578 = load <4 x i32>, ptr addrspace(3) %577, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %579 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %506, !dbg !37
  %580 = load <4 x i32>, ptr addrspace(3) %579, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %581 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 %509, !dbg !37
  %582 = load <4 x i32>, ptr addrspace(3) %581, align 16, !dbg !37, !alias.scope !40, !noalias !34
  %583 = zext i8 %535 to i32, !dbg !42
  %584 = zext i8 %537 to i32, !dbg !42
  %585 = zext i8 %539 to i32, !dbg !42
  %586 = zext i8 %541 to i32, !dbg !42
  %587 = zext i8 %544 to i32, !dbg !42
  %588 = zext i8 %546 to i32, !dbg !42
  %589 = zext i8 %548 to i32, !dbg !42
  %590 = zext i8 %550 to i32, !dbg !42
  %591 = zext i8 %552 to i32, !dbg !42
  %592 = zext i8 %554 to i32, !dbg !42
  %593 = zext i8 %556 to i32, !dbg !42
  %594 = zext i8 %558 to i32, !dbg !42
  %595 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %576, <4 x i32> %560, <4 x float> %527, i32 4, i32 4, i32 0, i32 %591, i32 0, i32 %583), !dbg !42
  %596 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %578, <4 x i32> %562, <4 x float> %595, i32 4, i32 4, i32 0, i32 %592, i32 0, i32 %584), !dbg !42
  %597 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %580, <4 x i32> %564, <4 x float> %596, i32 4, i32 4, i32 0, i32 %593, i32 0, i32 %585), !dbg !42
  %598 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %582, <4 x i32> %566, <4 x float> %597, i32 4, i32 4, i32 0, i32 %594, i32 0, i32 %586), !dbg !42
  %599 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %576, <4 x i32> %568, <4 x float> %531, i32 4, i32 4, i32 0, i32 %591, i32 0, i32 %587), !dbg !42
  %600 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %578, <4 x i32> %570, <4 x float> %599, i32 4, i32 4, i32 0, i32 %592, i32 0, i32 %588), !dbg !42
  %601 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %580, <4 x i32> %572, <4 x float> %600, i32 4, i32 4, i32 0, i32 %593, i32 0, i32 %589), !dbg !42
  %602 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %582, <4 x i32> %574, <4 x float> %601, i32 4, i32 4, i32 0, i32 %594, i32 0, i32 %590), !dbg !42
  %603 = zext nneg i32 %448 to i64, !dbg !43
  %604 = sext i32 %14 to i64, !dbg !44
  %605 = or disjoint i64 %604, %603, !dbg !44
  %606 = zext nneg i32 %446 to i64, !dbg !45
  %607 = sext i32 %30 to i64, !dbg !46
  %608 = or disjoint i64 %607, %606, !dbg !46
  %609 = mul nuw nsw i32 %448, 53248, !dbg !47
  %.idx = mul nsw i64 %604, 106496, !dbg !47
  %610 = getelementptr i8, ptr addrspace(1) %2, i64 %.idx, !dbg !47
  %611 = getelementptr bfloat, ptr addrspace(1) %610, i64 %607, !dbg !48
  %612 = or disjoint i32 %609, %446, !dbg !48
  %613 = sext i32 %5 to i64, !dbg !49
  %614 = icmp slt i64 %605, %613, !dbg !49
  %615 = sext i32 %6 to i64, !dbg !50
  %616 = icmp slt i64 %608, %615, !dbg !50
  %617 = and i1 %614, %616, !dbg !51
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %618 = shl i32 %15, 6, !dbg !52
  %619 = and i32 %618, 960, !dbg !52
  %620 = or disjoint i32 %619, %79, !dbg !52
  %621 = or disjoint i32 %620, %80, !dbg !52
  %622 = or disjoint i32 %621, %84, !dbg !52
  %623 = or disjoint i32 %622, %87, !dbg !52
  %624 = and i32 %31, 2040, !dbg !52
  %625 = lshr exact i32 %619, 2, !dbg !52
  %626 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %625, !dbg !52
  %627 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %626, i32 %623, !dbg !52
  %628 = fptrunc <4 x float> %598 to <4 x bfloat>, !dbg !52
  store <4 x bfloat> %628, ptr addrspace(3) %627, align 8, !dbg !52
  %629 = xor i32 %623, 1024, !dbg !52
  %630 = lshr i32 %629, 3, !dbg !52
  %631 = and i32 %630, 536870904, !dbg !52
  %632 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %631, !dbg !52
  %633 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %632, i32 %629, !dbg !52
  %634 = fptrunc <4 x float> %602 to <4 x bfloat>, !dbg !52
  store <4 x bfloat> %634, ptr addrspace(3) %633, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %635 = and i32 %15, 248, !dbg !52
  %636 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %635, !dbg !52
  %637 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %636, i32 %624, !dbg !52
  %638 = load <4 x i32>, ptr addrspace(3) %637, align 16, !dbg !52
  %639 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %611, i16 0, i32 2147483646, i32 159744), !dbg !52
  %640 = shl nuw nsw i32 %612, 1, !dbg !52
  %641 = select i1 %617, i32 %640, i32 -2147483648, !dbg !52
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %638, ptr addrspace(8) %639, i32 %641, i32 0, i32 0), !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) readnone, i16, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) readonly captures(none), i32, i32, i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i64 @llvm.amdgcn.ballot.i64(i1) #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) readonly captures(none), ptr addrspace(3) writeonly captures(none), i32 immarg, i32, i32, i32 immarg, i32 immarg) #4

; Function Attrs: mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.waitcnt(i32 immarg) #5

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #6

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32>, <4 x i32>, <4 x float>, i32 immarg, i32 immarg, i32 immarg, i32, i32 immarg, i32) #7

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32>, ptr addrspace(8) writeonly captures(none), i32, i32, i32 immarg) #8

attributes #0 = { nofree norecurse nounwind "amdgpu-agpr-alloc"="0" "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-flat-scratch-init" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn }
attributes #6 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #7 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #8 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "gemm_afp4wfp4.py", directory: "/app/aiter/aiter/ops/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"amdhsa_code_object_version", i32 500}
!4 = distinct !DISubprogram(name: "_gemm_afp4_wfp4_kernel", linkageName: "_gemm_afp4_wfp4_kernel", scope: !1, file: !1, line: 14, type: !5, scopeLine: 14, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 61, column: 24, scope: !4)
!8 = !DILocation(line: 40, column: 22, scope: !9, inlinedAt: !11)
!9 = distinct !DILexicalBlockFile(scope: !4, file: !10, discriminator: 0)
!10 = !DIFile(filename: "standard.py", directory: "/app/OAI-triton/python/triton/language")
!11 = !DILocation(line: 63, column: 27, scope: !4)
!12 = !DILocation(line: 40, column: 28, scope: !9, inlinedAt: !11)
!13 = !DILocation(line: 32, column: 23, scope: !14, inlinedAt: !16)
!14 = distinct !DILexicalBlockFile(scope: !4, file: !15, discriminator: 0)
!15 = !DIFile(filename: "pid_preprocessing.py", directory: "/app/aiter/aiter/ops/triton/utils")
!16 = !DILocation(line: 67, column: 44, scope: !4)
!17 = !DILocation(line: 33, column: 22, scope: !14, inlinedAt: !16)
!18 = !DILocation(line: 77, column: 23, scope: !4)
!19 = !DILocation(line: 77, column: 51, scope: !4)
!20 = !DILocation(line: 77, column: 38, scope: !4)
!21 = !DILocation(line: 77, column: 68, scope: !4)
!22 = !DILocation(line: 78, column: 23, scope: !4)
!23 = !DILocation(line: 78, column: 51, scope: !4)
!24 = !DILocation(line: 78, column: 38, scope: !4)
!25 = !DILocation(line: 78, column: 68, scope: !4)
!26 = !DILocation(line: 79, column: 60, scope: !4)
!27 = !DILocation(line: 79, column: 22, scope: !4)
!28 = !DILocation(line: 80, column: 22, scope: !4)
!29 = !DILocation(line: 83, column: 66, scope: !4)
!30 = !DILocation(line: 89, column: 22, scope: !4)
!31 = !DILocation(line: 83, column: 74, scope: !4)
!32 = !DILocation(line: 85, column: 66, scope: !4)
!33 = !DILocation(line: 97, column: 24, scope: !4)
!34 = !{!35}
!35 = !{!"amdgpu.AsyncCopies", !36, !"Scope containing all AsyncCopyGlobalToLocal and BufferLoadToLocal ops"}
!36 = !{!"amdgpu.AsyncOps", !"Domain to hold alias scopes to specify aliasing information between AsyncCopyGlobalToLocal, BufferLoadToLocal and LocalLoad ops"}
!37 = !DILocation(line: 98, column: 24, scope: !4)
!38 = !DILocation(line: 106, column: 18, scope: !4)
!39 = !DILocation(line: 107, column: 18, scope: !4)
!40 = !{!41}
!41 = !{!"amdgpu.LocalLoads", !36, !"Scope containing all LocalLoad ops"}
!42 = !DILocation(line: 103, column: 71, scope: !4)
!43 = !DILocation(line: 114, column: 67, scope: !4)
!44 = !DILocation(line: 114, column: 37, scope: !4)
!45 = !DILocation(line: 115, column: 67, scope: !4)
!46 = !DILocation(line: 115, column: 37, scope: !4)
!47 = !DILocation(line: 116, column: 21, scope: !4)
!48 = !DILocation(line: 116, column: 52, scope: !4)
!49 = !DILocation(line: 117, column: 33, scope: !4)
!50 = !DILocation(line: 117, column: 58, scope: !4)
!51 = !DILocation(line: 117, column: 39, scope: !4)
!52 = !DILocation(line: 118, column: 21, scope: !4)
!53 = !DILocation(line: 118, column: 4, scope: !4)
