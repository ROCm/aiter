#include "sampling.cuh"


#define FUNCTION_DEFINE                                      \
    void {{func_name}}(void* probs_ptr,                      \
                      void* renormed_probs_ptr,              \
                      void* top_k_arr_ptr,                   \
                      int batch_size,                        \
                      int top_k_val,                         \
                      void* stream)

extern "C" {
FUNCTION_DEFINE;
}
                        
FUNCTION_DEFINE
{
    constexpr uint32_t vec_size = std::gcd(16 / sizeof(float), {{d}});
 
    const uint32_t smem_size = sizeof(aiter::sampling::RenormTempStorage<aiter::sampling::BLOCK_THREADS, aiter::sampling::REDUCE_ALGO>);
    dim3 nblks(batch_size);
    dim3 nthrs(aiter::sampling::BLOCK_THREADS);
    auto kernel = aiter::sampling::TopKRenormProbKernel<aiter::sampling::BLOCK_THREADS, aiter::sampling::REDUCE_ALGO, vec_size, float, int>;
    hipFuncSetAttribute(reinterpret_cast<const void*>(kernel), hipFuncAttributeMaxDynamicSharedMemorySize, smem_size);
    kernel<<<nblks, nthrs, smem_size, reinterpret_cast<hipStream_t>(stream)>>>(reinterpret_cast<float*>(probs_ptr), reinterpret_cast<float*>(renormed_probs_ptr), reinterpret_cast<int*>(top_k_arr_ptr), top_k_val, {{d}});
}