#blocked = #ttg.blocked<{sizePerThread = [2, 16], threadsPerWarp = [8, 8], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc(unknown)
#loc1 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":652:0)
#loc165 = loc("/mnt/raid0/felix/triton/python/triton/language/standard.py":32:0)
#loc175 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":14:0)
#mma = #ttg.amd_mfma<{version = 3, warpsPerCTA = [1, 4], instrShape = [16, 16], isTransposed = false}>
#loc179 = loc("batch_size"(#loc1))
#loc180 = loc("heads_num"(#loc1))
#loc181 = loc("Q_buffer"(#loc1))
#loc182 = loc("stride_q_batch"(#loc1))
#loc183 = loc("stride_q_next_n"(#loc1))
#loc184 = loc("stride_q_heads"(#loc1))
#loc185 = loc("KV_buffer"(#loc1))
#loc186 = loc("stride_k_seq"(#loc1))
#loc187 = loc("scale_buffer"(#loc1))
#loc188 = loc("stride_scale_seq"(#loc1))
#loc189 = loc("context_len_ptr"(#loc1))
#loc190 = loc("kv_indices"(#loc1))
#loc191 = loc("weights"(#loc1))
#loc192 = loc("stride_w_batch"(#loc1))
#loc193 = loc("OutLogits_buffer"(#loc1))
#loc194 = loc("stride_out_batch"(#loc1))
#loc195 = loc("max_model_len"(#loc1))
#loc196 = loc("max_block_len"(#loc1))
#loc197 = loc("SplitKV"(#loc1))
#loc324 = loc("x"(#loc165))
#loc325 = loc("div"(#loc165))
#loc326 = loc("a"(#loc175))
#loc327 = loc("b"(#loc175))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "hip:gfx942", "ttg.threads-per-warp" = 64 : i32} {
  tt.func public @_gluon_deepgemm_fp8_paged_mqa_logits_preshuffle(%batch_size: i32 loc("batch_size"(#loc1)), %heads_num: i32 {tt.divisibility = 16 : i32} loc("heads_num"(#loc1)), %Q_buffer: !tt.ptr<f8E4M3FNUZ> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("Q_buffer"(#loc1)), %stride_q_batch: i32 {tt.divisibility = 16 : i32} loc("stride_q_batch"(#loc1)), %stride_q_next_n: i32 {tt.divisibility = 16 : i32} loc("stride_q_next_n"(#loc1)), %stride_q_heads: i32 {tt.divisibility = 16 : i32} loc("stride_q_heads"(#loc1)), %KV_buffer: !tt.ptr<f8E4M3FNUZ> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("KV_buffer"(#loc1)), %stride_k_seq: i32 {tt.divisibility = 16 : i32} loc("stride_k_seq"(#loc1)), %scale_buffer: !tt.ptr<f32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("scale_buffer"(#loc1)), %stride_scale_seq: i32 {tt.divisibility = 16 : i32} loc("stride_scale_seq"(#loc1)), %context_len_ptr: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("context_len_ptr"(#loc1)), %kv_indices: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("kv_indices"(#loc1)), %weights: !tt.ptr<f32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("weights"(#loc1)), %stride_w_batch: i32 {tt.divisibility = 16 : i32} loc("stride_w_batch"(#loc1)), %OutLogits_buffer: !tt.ptr<f32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("OutLogits_buffer"(#loc1)), %stride_out_batch: i32 {tt.divisibility = 16 : i32} loc("stride_out_batch"(#loc1)), %max_model_len: i32 {tt.divisibility = 16 : i32} loc("max_model_len"(#loc1)), %max_block_len: i32 {tt.divisibility = 16 : i32} loc("max_block_len"(#loc1)), %SplitKV: i32 loc("SplitKV"(#loc1))) attributes {noinline = false} {
    %pid = tt.get_program_id x : i32 loc(#loc198)
    %num_block_q_head = tt.call @"triton.language.standard.cdiv__i32__(1,)cconstexpr_64_"(%heads_num) : (i32) -> i32 loc(#loc199)
    %0 = arith.remsi %pid, %batch_size : i32 loc(#loc4)
    %1 = arith.divsi %pid, %batch_size : i32 loc(#loc5)
    %2 = arith.remsi %1, %num_block_q_head : i32 loc(#loc6)
    %3 = arith.divsi %1, %num_block_q_head : i32 loc(#loc7)
    %c1_i32 = arith.constant 1 : i32 loc(#loc8)
    %c1_i32_0 = arith.constant 1 : i32 loc(#loc8)
    %4 = arith.remsi %3, %c1_i32_0 : i32 loc(#loc8)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc9)
    %c1_i32_2 = arith.constant 1 : i32 loc(#loc9)
    %5 = arith.divsi %3, %c1_i32_2 : i32 loc(#loc9)
    %context_length = tt.addptr %context_len_ptr, %0 : !tt.ptr<i32>, i32 loc(#loc200)
    %context_length_3 = tt.load %context_length : !tt.ptr<i32> loc(#loc201)
    %context_chunk_num = tt.call @"triton.language.standard.cdiv__i32__(1,)cconstexpr_256_"(%context_length_3) : (i32) -> i32 loc(#loc202)
    %split_context_chunk_num = tt.call @triton.language.standard.cdiv__i32_i32__(%context_chunk_num, %SplitKV) : (i32, i32) -> i32 loc(#loc203)
    %split_context_start = arith.extsi %5 : i32 to i64 loc(#loc204)
    %split_context_start_4 = arith.extsi %split_context_chunk_num : i32 to i64 loc(#loc204)
    %split_context_start_5 = arith.muli %split_context_start, %split_context_start_4 : i64 loc(#loc204)
    %split_context_start_6 = arith.constant 2147483647 : i64 loc(#loc204)
    %split_context_start_7 = arith.constant -2147483648 : i64 loc(#loc204)
    %split_context_start_8 = arith.cmpi sle, %split_context_start_5, %split_context_start_6 : i64 loc(#loc204)
    %split_context_start_9 = arith.cmpi sge, %split_context_start_5, %split_context_start_7 : i64 loc(#loc204)
    %split_context_start_10 = arith.andi %split_context_start_8, %split_context_start_9 : i1 loc(#loc204)
    %split_context_start_11 = arith.muli %5, %split_context_chunk_num : i32 loc(#loc204)
    %split_context_start_12 = arith.constant 256 : i32 loc(#loc205)
    %split_context_start_13 = arith.constant 256 : i32 loc(#loc205)
    %split_context_start_14 = arith.extsi %split_context_start_11 : i32 to i64 loc(#loc205)
    %split_context_start_15 = arith.extsi %split_context_start_13 : i32 to i64 loc(#loc205)
    %split_context_start_16 = arith.muli %split_context_start_14, %split_context_start_15 : i64 loc(#loc205)
    %split_context_start_17 = arith.constant 2147483647 : i64 loc(#loc205)
    %split_context_start_18 = arith.constant -2147483648 : i64 loc(#loc205)
    %split_context_start_19 = arith.cmpi sle, %split_context_start_16, %split_context_start_17 : i64 loc(#loc205)
    %split_context_start_20 = arith.cmpi sge, %split_context_start_16, %split_context_start_18 : i64 loc(#loc205)
    %split_context_start_21 = arith.andi %split_context_start_19, %split_context_start_20 : i1 loc(#loc205)
    %split_context_start_22 = arith.muli %split_context_start_11, %split_context_start_13 : i32 loc(#loc205)
    %split_context_length = arith.extsi %context_length_3 : i32 to i64 loc(#loc206)
    %split_context_length_23 = arith.extsi %split_context_start_22 : i32 to i64 loc(#loc206)
    %split_context_length_24 = arith.subi %split_context_length, %split_context_length_23 : i64 loc(#loc206)
    %split_context_length_25 = arith.constant 2147483647 : i64 loc(#loc206)
    %split_context_length_26 = arith.constant -2147483648 : i64 loc(#loc206)
    %split_context_length_27 = arith.cmpi sle, %split_context_length_24, %split_context_length_25 : i64 loc(#loc206)
    %split_context_length_28 = arith.cmpi sge, %split_context_length_24, %split_context_length_26 : i64 loc(#loc206)
    %split_context_length_29 = arith.andi %split_context_length_27, %split_context_length_28 : i1 loc(#loc206)
    %split_context_length_30 = arith.subi %context_length_3, %split_context_start_22 : i32 loc(#loc206)
    %split_context_length_31 = arith.constant 256 : i32 loc(#loc207)
    %split_context_length_32 = arith.constant 256 : i32 loc(#loc207)
    %split_context_length_33 = arith.extsi %split_context_chunk_num : i32 to i64 loc(#loc207)
    %split_context_length_34 = arith.extsi %split_context_length_32 : i32 to i64 loc(#loc207)
    %split_context_length_35 = arith.muli %split_context_length_33, %split_context_length_34 : i64 loc(#loc207)
    %split_context_length_36 = arith.constant 2147483647 : i64 loc(#loc207)
    %split_context_length_37 = arith.constant -2147483648 : i64 loc(#loc207)
    %split_context_length_38 = arith.cmpi sle, %split_context_length_35, %split_context_length_36 : i64 loc(#loc207)
    %split_context_length_39 = arith.cmpi sge, %split_context_length_35, %split_context_length_37 : i64 loc(#loc207)
    %split_context_length_40 = arith.andi %split_context_length_38, %split_context_length_39 : i1 loc(#loc207)
    %split_context_length_41 = arith.muli %split_context_chunk_num, %split_context_length_32 : i32 loc(#loc207)
    %split_context_length_42 = arith.minsi %split_context_length_30, %split_context_length_41 : i32 loc(#loc208)
    %c0_i32 = arith.constant 0 : i32 loc(#loc19)
    %6 = arith.cmpi sle, %split_context_length_42, %c0_i32 : i32 loc(#loc19)
    cf.cond_br %6, ^bb1, ^bb2 loc(#loc19)
  ^bb1:  // pred: ^bb0
    tt.return loc(#loc20)
  ^bb2:  // pred: ^bb0
    cf.br ^bb4 loc(#loc)
  ^bb3:  // no predecessors
    cf.br ^bb4 loc(#loc)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %split_context_block = tt.call @"triton.language.standard.cdiv__i32__(1,)cconstexpr_16_"(%split_context_length_42) : (i32) -> i32 loc(#loc209)
    %split_context_length_43 = arith.constant 16 : i32 loc(#loc210)
    %split_context_length_44 = arith.constant 16 : i32 loc(#loc210)
    %split_context_length_45 = arith.extsi %split_context_block : i32 to i64 loc(#loc210)
    %split_context_length_46 = arith.extsi %split_context_length_44 : i32 to i64 loc(#loc210)
    %split_context_length_47 = arith.muli %split_context_length_45, %split_context_length_46 : i64 loc(#loc210)
    %split_context_length_48 = arith.constant 2147483647 : i64 loc(#loc210)
    %split_context_length_49 = arith.constant -2147483648 : i64 loc(#loc210)
    %split_context_length_50 = arith.cmpi sle, %split_context_length_47, %split_context_length_48 : i64 loc(#loc210)
    %split_context_length_51 = arith.cmpi sge, %split_context_length_47, %split_context_length_49 : i64 loc(#loc210)
    %split_context_length_52 = arith.andi %split_context_length_50, %split_context_length_51 : i1 loc(#loc210)
    %split_context_length_53 = arith.muli %split_context_block, %split_context_length_44 : i32 loc(#loc210)
    %residual_context_blocks = arith.constant 16 : i32 loc(#loc211)
    %residual_context_blocks_54 = arith.constant 16 : i32 loc(#loc211)
    %residual_context_blocks_55 = arith.remsi %split_context_block, %residual_context_blocks_54 : i32 loc(#loc211)
    %residual_context_blocks_56 = arith.constant 16 : i32 loc(#loc212)
    %residual_context_blocks_57 = arith.constant 16 : i32 loc(#loc212)
    %residual_context_blocks_58 = arith.extsi %residual_context_blocks_57 : i32 to i64 loc(#loc212)
    %residual_context_blocks_59 = arith.extsi %residual_context_blocks_55 : i32 to i64 loc(#loc212)
    %residual_context_blocks_60 = arith.subi %residual_context_blocks_58, %residual_context_blocks_59 : i64 loc(#loc212)
    %residual_context_blocks_61 = arith.constant 2147483647 : i64 loc(#loc212)
    %residual_context_blocks_62 = arith.constant -2147483648 : i64 loc(#loc212)
    %residual_context_blocks_63 = arith.cmpi sle, %residual_context_blocks_60, %residual_context_blocks_61 : i64 loc(#loc212)
    %residual_context_blocks_64 = arith.cmpi sge, %residual_context_blocks_60, %residual_context_blocks_62 : i64 loc(#loc212)
    %residual_context_blocks_65 = arith.andi %residual_context_blocks_63, %residual_context_blocks_64 : i1 loc(#loc212)
    %residual_context_blocks_66 = arith.subi %residual_context_blocks_57, %residual_context_blocks_55 : i32 loc(#loc212)
    %residual_context_blocks_67 = arith.constant 16 : i32 loc(#loc213)
    %residual_context_blocks_68 = arith.constant 16 : i32 loc(#loc213)
    %residual_context_blocks_69 = arith.remsi %residual_context_blocks_66, %residual_context_blocks_68 : i32 loc(#loc213)
    %residual_context = arith.constant 16 : i32 loc(#loc214)
    %residual_context_70 = arith.constant 16 : i32 loc(#loc214)
    %residual_context_71 = arith.extsi %residual_context_blocks_69 : i32 to i64 loc(#loc214)
    %residual_context_72 = arith.extsi %residual_context_70 : i32 to i64 loc(#loc214)
    %residual_context_73 = arith.muli %residual_context_71, %residual_context_72 : i64 loc(#loc214)
    %residual_context_74 = arith.constant 2147483647 : i64 loc(#loc214)
    %residual_context_75 = arith.constant -2147483648 : i64 loc(#loc214)
    %residual_context_76 = arith.cmpi sle, %residual_context_73, %residual_context_74 : i64 loc(#loc214)
    %residual_context_77 = arith.cmpi sge, %residual_context_73, %residual_context_75 : i64 loc(#loc214)
    %residual_context_78 = arith.andi %residual_context_76, %residual_context_77 : i1 loc(#loc214)
    %residual_context_79 = arith.muli %residual_context_blocks_69, %residual_context_70 : i32 loc(#loc214)
    %q = arith.extsi %0 : i32 to i64 loc(#loc215)
    %q_80 = arith.extsi %stride_q_batch : i32 to i64 loc(#loc215)
    %q_81 = arith.muli %q, %q_80 : i64 loc(#loc215)
    %q_82 = arith.constant 2147483647 : i64 loc(#loc215)
    %q_83 = arith.constant -2147483648 : i64 loc(#loc215)
    %q_84 = arith.cmpi sle, %q_81, %q_82 : i64 loc(#loc215)
    %q_85 = arith.cmpi sge, %q_81, %q_83 : i64 loc(#loc215)
    %q_86 = arith.andi %q_84, %q_85 : i1 loc(#loc215)
    %q_87 = arith.muli %0, %stride_q_batch : i32 loc(#loc215)
    %q_88 = arith.extsi %4 : i32 to i64 loc(#loc216)
    %q_89 = arith.extsi %stride_q_next_n : i32 to i64 loc(#loc216)
    %q_90 = arith.muli %q_88, %q_89 : i64 loc(#loc216)
    %q_91 = arith.constant 2147483647 : i64 loc(#loc216)
    %q_92 = arith.constant -2147483648 : i64 loc(#loc216)
    %q_93 = arith.cmpi sle, %q_90, %q_91 : i64 loc(#loc216)
    %q_94 = arith.cmpi sge, %q_90, %q_92 : i64 loc(#loc216)
    %q_95 = arith.andi %q_93, %q_94 : i1 loc(#loc216)
    %q_96 = arith.muli %4, %stride_q_next_n : i32 loc(#loc216)
    %q_97 = arith.extsi %q_87 : i32 to i64 loc(#loc217)
    %q_98 = arith.extsi %q_96 : i32 to i64 loc(#loc217)
    %q_99 = arith.addi %q_97, %q_98 : i64 loc(#loc217)
    %q_100 = arith.constant 2147483647 : i64 loc(#loc217)
    %q_101 = arith.constant -2147483648 : i64 loc(#loc217)
    %q_102 = arith.cmpi sle, %q_99, %q_100 : i64 loc(#loc217)
    %q_103 = arith.cmpi sge, %q_99, %q_101 : i64 loc(#loc217)
    %q_104 = arith.andi %q_102, %q_103 : i1 loc(#loc217)
    %q_105 = arith.addi %q_87, %q_96 : i32 loc(#loc217)
    %q_106 = arith.constant 64 : i32 loc(#loc218)
    %q_107 = arith.constant 64 : i32 loc(#loc218)
    %q_108 = arith.extsi %2 : i32 to i64 loc(#loc218)
    %q_109 = arith.extsi %q_107 : i32 to i64 loc(#loc218)
    %q_110 = arith.muli %q_108, %q_109 : i64 loc(#loc218)
    %q_111 = arith.constant 2147483647 : i64 loc(#loc218)
    %q_112 = arith.constant -2147483648 : i64 loc(#loc218)
    %q_113 = arith.cmpi sle, %q_110, %q_111 : i64 loc(#loc218)
    %q_114 = arith.cmpi sge, %q_110, %q_112 : i64 loc(#loc218)
    %q_115 = arith.andi %q_113, %q_114 : i1 loc(#loc218)
    %q_116 = arith.muli %2, %q_107 : i32 loc(#loc218)
    %q_117 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc219)
    %q_118 = tt.splat %q_116 : i32 -> tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_119 = arith.extsi %q_118 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> to tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_120 = arith.extsi %q_117 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> to tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_121 = arith.addi %q_119, %q_120 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_122 = arith.constant 2147483647 : i64 loc(#loc220)
    %q_123 = arith.constant -2147483648 : i64 loc(#loc220)
    %q_124 = arith.constant dense<2147483647> : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_125 = arith.cmpi sle, %q_121, %q_124 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_126 = arith.constant dense<-2147483648> : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_127 = arith.cmpi sge, %q_121, %q_126 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_128 = arith.andi %q_125, %q_127 : tensor<64xi1, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_129 = arith.addi %q_118, %q_117 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc220)
    %q_130 = tt.splat %stride_q_heads : i32 -> tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_131 = arith.extsi %q_129 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> to tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_132 = arith.extsi %q_130 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> to tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_133 = arith.muli %q_131, %q_132 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_134 = arith.constant 2147483647 : i64 loc(#loc221)
    %q_135 = arith.constant -2147483648 : i64 loc(#loc221)
    %q_136 = arith.constant dense<2147483647> : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_137 = arith.cmpi sle, %q_133, %q_136 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_138 = arith.constant dense<-2147483648> : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_139 = arith.cmpi sge, %q_133, %q_138 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_140 = arith.andi %q_137, %q_139 : tensor<64xi1, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_141 = arith.muli %q_129, %q_130 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc221)
    %q_142 = tt.expand_dims %q_141 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc222)
    %q_143 = tt.splat %q_105 : i32 -> tensor<64x1xi32, #blocked> loc(#loc223)
    %q_144 = arith.extsi %q_143 : tensor<64x1xi32, #blocked> to tensor<64x1xi64, #blocked> loc(#loc223)
    %q_145 = arith.extsi %q_142 : tensor<64x1xi32, #blocked> to tensor<64x1xi64, #blocked> loc(#loc223)
    %q_146 = arith.addi %q_144, %q_145 : tensor<64x1xi64, #blocked> loc(#loc223)
    %q_147 = arith.constant 2147483647 : i64 loc(#loc223)
    %q_148 = arith.constant -2147483648 : i64 loc(#loc223)
    %q_149 = arith.constant dense<2147483647> : tensor<64x1xi64, #blocked> loc(#loc223)
    %q_150 = arith.cmpi sle, %q_146, %q_149 : tensor<64x1xi64, #blocked> loc(#loc223)
    %q_151 = arith.constant dense<-2147483648> : tensor<64x1xi64, #blocked> loc(#loc223)
    %q_152 = arith.cmpi sge, %q_146, %q_151 : tensor<64x1xi64, #blocked> loc(#loc223)
    %q_153 = arith.andi %q_150, %q_152 : tensor<64x1xi1, #blocked> loc(#loc223)
    %q_154 = arith.addi %q_143, %q_142 : tensor<64x1xi32, #blocked> loc(#loc223)
    %q_155 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc224)
    %q_156 = tt.expand_dims %q_155 {axis = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc225)
    %q_157 = tt.broadcast %q_154 : tensor<64x1xi32, #blocked> -> tensor<64x128xi32, #blocked> loc(#loc226)
    %q_158 = tt.broadcast %q_156 : tensor<1x128xi32, #blocked> -> tensor<64x128xi32, #blocked> loc(#loc226)
    %q_159 = arith.extsi %q_157 : tensor<64x128xi32, #blocked> to tensor<64x128xi64, #blocked> loc(#loc226)
    %q_160 = arith.extsi %q_158 : tensor<64x128xi32, #blocked> to tensor<64x128xi64, #blocked> loc(#loc226)
    %q_161 = arith.addi %q_159, %q_160 : tensor<64x128xi64, #blocked> loc(#loc226)
    %q_162 = arith.constant 2147483647 : i64 loc(#loc226)
    %q_163 = arith.constant -2147483648 : i64 loc(#loc226)
    %q_164 = arith.constant dense<2147483647> : tensor<64x128xi64, #blocked> loc(#loc226)
    %q_165 = arith.cmpi sle, %q_161, %q_164 : tensor<64x128xi64, #blocked> loc(#loc226)
    %q_166 = arith.constant dense<-2147483648> : tensor<64x128xi64, #blocked> loc(#loc226)
    %q_167 = arith.cmpi sge, %q_161, %q_166 : tensor<64x128xi64, #blocked> loc(#loc226)
    %q_168 = arith.andi %q_165, %q_167 : tensor<64x128xi1, #blocked> loc(#loc226)
    %q_169 = arith.addi %q_157, %q_158 : tensor<64x128xi32, #blocked> loc(#loc226)
    %q_170 = amdgpu.buffer_load %Q_buffer[%q_169] : tensor<64x128xf8E4M3FNUZ, #blocked> loc(#loc227)
    %scale_weight = arith.constant 1 : i32 loc(#loc228)
    %scale_weight_171 = arith.constant 1 : i32 loc(#loc228)
    %scale_weight_172 = arith.extsi %0 : i32 to i64 loc(#loc228)
    %scale_weight_173 = arith.extsi %scale_weight_171 : i32 to i64 loc(#loc228)
    %scale_weight_174 = arith.muli %scale_weight_172, %scale_weight_173 : i64 loc(#loc228)
    %scale_weight_175 = arith.constant 2147483647 : i64 loc(#loc228)
    %scale_weight_176 = arith.constant -2147483648 : i64 loc(#loc228)
    %scale_weight_177 = arith.cmpi sle, %scale_weight_174, %scale_weight_175 : i64 loc(#loc228)
    %scale_weight_178 = arith.cmpi sge, %scale_weight_174, %scale_weight_176 : i64 loc(#loc228)
    %scale_weight_179 = arith.andi %scale_weight_177, %scale_weight_178 : i1 loc(#loc228)
    %scale_weight_180 = arith.muli %0, %scale_weight_171 : i32 loc(#loc228)
    %scale_weight_181 = arith.extsi %scale_weight_180 : i32 to i64 loc(#loc229)
    %scale_weight_182 = arith.extsi %4 : i32 to i64 loc(#loc229)
    %scale_weight_183 = arith.addi %scale_weight_181, %scale_weight_182 : i64 loc(#loc229)
    %scale_weight_184 = arith.constant 2147483647 : i64 loc(#loc229)
    %scale_weight_185 = arith.constant -2147483648 : i64 loc(#loc229)
    %scale_weight_186 = arith.cmpi sle, %scale_weight_183, %scale_weight_184 : i64 loc(#loc229)
    %scale_weight_187 = arith.cmpi sge, %scale_weight_183, %scale_weight_185 : i64 loc(#loc229)
    %scale_weight_188 = arith.andi %scale_weight_186, %scale_weight_187 : i1 loc(#loc229)
    %scale_weight_189 = arith.addi %scale_weight_180, %4 : i32 loc(#loc229)
    %scale_weight_190 = arith.extsi %scale_weight_189 : i32 to i64 loc(#loc230)
    %scale_weight_191 = arith.extsi %stride_w_batch : i32 to i64 loc(#loc230)
    %scale_weight_192 = arith.muli %scale_weight_190, %scale_weight_191 : i64 loc(#loc230)
    %scale_weight_193 = arith.constant 2147483647 : i64 loc(#loc230)
    %scale_weight_194 = arith.constant -2147483648 : i64 loc(#loc230)
    %scale_weight_195 = arith.cmpi sle, %scale_weight_192, %scale_weight_193 : i64 loc(#loc230)
    %scale_weight_196 = arith.cmpi sge, %scale_weight_192, %scale_weight_194 : i64 loc(#loc230)
    %scale_weight_197 = arith.andi %scale_weight_195, %scale_weight_196 : i1 loc(#loc230)
    %scale_weight_198 = arith.muli %scale_weight_189, %stride_w_batch : i32 loc(#loc230)
    %scale_weight_199 = arith.constant 64 : i32 loc(#loc231)
    %scale_weight_200 = arith.constant 64 : i32 loc(#loc231)
    %scale_weight_201 = arith.extsi %2 : i32 to i64 loc(#loc231)
    %scale_weight_202 = arith.extsi %scale_weight_200 : i32 to i64 loc(#loc231)
    %scale_weight_203 = arith.muli %scale_weight_201, %scale_weight_202 : i64 loc(#loc231)
    %scale_weight_204 = arith.constant 2147483647 : i64 loc(#loc231)
    %scale_weight_205 = arith.constant -2147483648 : i64 loc(#loc231)
    %scale_weight_206 = arith.cmpi sle, %scale_weight_203, %scale_weight_204 : i64 loc(#loc231)
    %scale_weight_207 = arith.cmpi sge, %scale_weight_203, %scale_weight_205 : i64 loc(#loc231)
    %scale_weight_208 = arith.andi %scale_weight_206, %scale_weight_207 : i1 loc(#loc231)
    %scale_weight_209 = arith.muli %2, %scale_weight_200 : i32 loc(#loc231)
    %scale_weight_210 = arith.extsi %scale_weight_198 : i32 to i64 loc(#loc232)
    %scale_weight_211 = arith.extsi %scale_weight_209 : i32 to i64 loc(#loc232)
    %scale_weight_212 = arith.addi %scale_weight_210, %scale_weight_211 : i64 loc(#loc232)
    %scale_weight_213 = arith.constant 2147483647 : i64 loc(#loc232)
    %scale_weight_214 = arith.constant -2147483648 : i64 loc(#loc232)
    %scale_weight_215 = arith.cmpi sle, %scale_weight_212, %scale_weight_213 : i64 loc(#loc232)
    %scale_weight_216 = arith.cmpi sge, %scale_weight_212, %scale_weight_214 : i64 loc(#loc232)
    %scale_weight_217 = arith.andi %scale_weight_215, %scale_weight_216 : i1 loc(#loc232)
    %scale_weight_218 = arith.addi %scale_weight_198, %scale_weight_209 : i32 loc(#loc232)
    %scale_weight_219 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc233)
    %scale_weight_220 = tt.splat %scale_weight_218 : i32 -> tensor<64xi32, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_221 = arith.extsi %scale_weight_220 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #mma}>> to tensor<64xi64, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_222 = arith.extsi %scale_weight_219 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #mma}>> to tensor<64xi64, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_223 = arith.addi %scale_weight_221, %scale_weight_222 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_224 = arith.constant 2147483647 : i64 loc(#loc234)
    %scale_weight_225 = arith.constant -2147483648 : i64 loc(#loc234)
    %scale_weight_226 = arith.constant dense<2147483647> : tensor<64xi64, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_227 = arith.cmpi sle, %scale_weight_223, %scale_weight_226 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_228 = arith.constant dense<-2147483648> : tensor<64xi64, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_229 = arith.cmpi sge, %scale_weight_223, %scale_weight_228 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_230 = arith.andi %scale_weight_227, %scale_weight_229 : tensor<64xi1, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_231 = arith.addi %scale_weight_220, %scale_weight_219 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc234)
    %scale_weight_232 = amdgpu.buffer_load %weights[%scale_weight_231] : tensor<64xf32, #ttg.slice<{dim = 1, parent = #mma}>> loc(#loc235)
    %mask_kv_next = arith.extsi %split_context_start_22 : i32 to i64 loc(#loc236)
    %mask_kv_next_233 = arith.extsi %residual_context_79 : i32 to i64 loc(#loc236)
    %mask_kv_next_234 = arith.subi %mask_kv_next, %mask_kv_next_233 : i64 loc(#loc236)
    %mask_kv_next_235 = arith.constant 2147483647 : i64 loc(#loc236)
    %mask_kv_next_236 = arith.constant -2147483648 : i64 loc(#loc236)
    %mask_kv_next_237 = arith.cmpi sle, %mask_kv_next_234, %mask_kv_next_235 : i64 loc(#loc236)
    %mask_kv_next_238 = arith.cmpi sge, %mask_kv_next_234, %mask_kv_next_236 : i64 loc(#loc236)
    %mask_kv_next_239 = arith.andi %mask_kv_next_237, %mask_kv_next_238 : i1 loc(#loc236)
    %mask_kv_next_240 = arith.subi %split_context_start_22, %residual_context_79 : i32 loc(#loc236)
    %mask_kv_next_241 = arith.constant 16 : i32 loc(#loc237)
    %mask_kv_next_242 = arith.constant 16 : i32 loc(#loc237)
    %mask_kv_next_243 = arith.divsi %mask_kv_next_240, %mask_kv_next_242 : i32 loc(#loc237)
    %mask_kv_next_244 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc238)
    %mask_kv_next_245 = arith.constant 16 : i32 loc(#loc239)
    %mask_kv_next_246 = arith.constant 16 : i32 loc(#loc239)
    %mask_kv_next_247 = arith.constant dense<16> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc239)
    %mask_kv_next_248 = arith.divsi %mask_kv_next_244, %mask_kv_next_247 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc239)
    %mask_kv_next_249 = tt.splat %mask_kv_next_243 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_250 = arith.extsi %mask_kv_next_249 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_251 = arith.extsi %mask_kv_next_248 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_252 = arith.addi %mask_kv_next_250, %mask_kv_next_251 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_253 = arith.constant 2147483647 : i64 loc(#loc240)
    %mask_kv_next_254 = arith.constant -2147483648 : i64 loc(#loc240)
    %mask_kv_next_255 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_256 = arith.cmpi sle, %mask_kv_next_252, %mask_kv_next_255 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_257 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_258 = arith.cmpi sge, %mask_kv_next_252, %mask_kv_next_257 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_259 = arith.andi %mask_kv_next_256, %mask_kv_next_258 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_260 = arith.addi %mask_kv_next_249, %mask_kv_next_248 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc240)
    %mask_kv_next_261 = arith.constant 0 : i32 loc(#loc241)
    %mask_kv_next_262 = arith.constant dense<0> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc241)
    %mask_kv_next_263 = arith.cmpi sge, %mask_kv_next_260, %mask_kv_next_262 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc241)
    %context_kv_idx_next = arith.extsi %0 : i32 to i64 loc(#loc242)
    %context_kv_idx_next_264 = arith.extsi %max_block_len : i32 to i64 loc(#loc242)
    %context_kv_idx_next_265 = arith.muli %context_kv_idx_next, %context_kv_idx_next_264 : i64 loc(#loc242)
    %context_kv_idx_next_266 = arith.constant 2147483647 : i64 loc(#loc242)
    %context_kv_idx_next_267 = arith.constant -2147483648 : i64 loc(#loc242)
    %context_kv_idx_next_268 = arith.cmpi sle, %context_kv_idx_next_265, %context_kv_idx_next_266 : i64 loc(#loc242)
    %context_kv_idx_next_269 = arith.cmpi sge, %context_kv_idx_next_265, %context_kv_idx_next_267 : i64 loc(#loc242)
    %context_kv_idx_next_270 = arith.andi %context_kv_idx_next_268, %context_kv_idx_next_269 : i1 loc(#loc242)
    %context_kv_idx_next_271 = arith.muli %0, %max_block_len : i32 loc(#loc242)
    %context_kv_idx_next_272 = arith.extsi %split_context_start_22 : i32 to i64 loc(#loc243)
    %context_kv_idx_next_273 = arith.extsi %residual_context_79 : i32 to i64 loc(#loc243)
    %context_kv_idx_next_274 = arith.subi %context_kv_idx_next_272, %context_kv_idx_next_273 : i64 loc(#loc243)
    %context_kv_idx_next_275 = arith.constant 2147483647 : i64 loc(#loc243)
    %context_kv_idx_next_276 = arith.constant -2147483648 : i64 loc(#loc243)
    %context_kv_idx_next_277 = arith.cmpi sle, %context_kv_idx_next_274, %context_kv_idx_next_275 : i64 loc(#loc243)
    %context_kv_idx_next_278 = arith.cmpi sge, %context_kv_idx_next_274, %context_kv_idx_next_276 : i64 loc(#loc243)
    %context_kv_idx_next_279 = arith.andi %context_kv_idx_next_277, %context_kv_idx_next_278 : i1 loc(#loc243)
    %context_kv_idx_next_280 = arith.subi %split_context_start_22, %residual_context_79 : i32 loc(#loc243)
    %context_kv_idx_next_281 = arith.constant 16 : i32 loc(#loc244)
    %context_kv_idx_next_282 = arith.constant 16 : i32 loc(#loc244)
    %context_kv_idx_next_283 = arith.divsi %context_kv_idx_next_280, %context_kv_idx_next_282 : i32 loc(#loc244)
    %context_kv_idx_next_284 = arith.extsi %context_kv_idx_next_271 : i32 to i64 loc(#loc245)
    %context_kv_idx_next_285 = arith.extsi %context_kv_idx_next_283 : i32 to i64 loc(#loc245)
    %context_kv_idx_next_286 = arith.addi %context_kv_idx_next_284, %context_kv_idx_next_285 : i64 loc(#loc245)
    %context_kv_idx_next_287 = arith.constant 2147483647 : i64 loc(#loc245)
    %context_kv_idx_next_288 = arith.constant -2147483648 : i64 loc(#loc245)
    %context_kv_idx_next_289 = arith.cmpi sle, %context_kv_idx_next_286, %context_kv_idx_next_287 : i64 loc(#loc245)
    %context_kv_idx_next_290 = arith.cmpi sge, %context_kv_idx_next_286, %context_kv_idx_next_288 : i64 loc(#loc245)
    %context_kv_idx_next_291 = arith.andi %context_kv_idx_next_289, %context_kv_idx_next_290 : i1 loc(#loc245)
    %context_kv_idx_next_292 = arith.addi %context_kv_idx_next_271, %context_kv_idx_next_283 : i32 loc(#loc245)
    %context_kv_idx_next_293 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc246)
    %context_kv_idx_next_294 = arith.constant 16 : i32 loc(#loc247)
    %context_kv_idx_next_295 = arith.constant 16 : i32 loc(#loc247)
    %context_kv_idx_next_296 = arith.constant dense<16> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc247)
    %context_kv_idx_next_297 = arith.divsi %context_kv_idx_next_293, %context_kv_idx_next_296 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc247)
    %context_kv_idx_next_298 = tt.splat %context_kv_idx_next_292 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_299 = arith.extsi %context_kv_idx_next_298 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_300 = arith.extsi %context_kv_idx_next_297 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_301 = arith.addi %context_kv_idx_next_299, %context_kv_idx_next_300 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_302 = arith.constant 2147483647 : i64 loc(#loc248)
    %context_kv_idx_next_303 = arith.constant -2147483648 : i64 loc(#loc248)
    %context_kv_idx_next_304 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_305 = arith.cmpi sle, %context_kv_idx_next_301, %context_kv_idx_next_304 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_306 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_307 = arith.cmpi sge, %context_kv_idx_next_301, %context_kv_idx_next_306 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_308 = arith.andi %context_kv_idx_next_305, %context_kv_idx_next_307 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_309 = arith.addi %context_kv_idx_next_298, %context_kv_idx_next_297 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc248)
    %context_kv_idx_next_310 = amdgpu.buffer_load %kv_indices[%context_kv_idx_next_309], %mask_kv_next_263 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc249)
    %offset_k_fixed = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc250)
    %offset_k_fixed_311 = arith.constant 16 : i32 loc(#loc251)
    %offset_k_fixed_312 = arith.constant 16 : i32 loc(#loc251)
    %offset_k_fixed_313 = arith.constant dense<16> : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc251)
    %offset_k_fixed_314 = arith.remsi %offset_k_fixed, %offset_k_fixed_313 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc251)
    %offset_k_fixed_315 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc252)
    %offset_k_fixed_316 = arith.constant 16 : i32 loc(#loc253)
    %offset_k_fixed_317 = arith.constant 16 : i32 loc(#loc253)
    %offset_k_fixed_318 = arith.constant dense<16> : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc253)
    %offset_k_fixed_319 = arith.divsi %offset_k_fixed_315, %offset_k_fixed_318 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc253)
    %offset_k_fixed_320 = arith.constant 256 : i32 loc(#loc254)
    %offset_k_fixed_321 = arith.constant 256 : i32 loc(#loc254)
    %offset_k_fixed_322 = arith.constant dense<256> : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_323 = arith.extsi %offset_k_fixed_319 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_324 = arith.extsi %offset_k_fixed_322 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_325 = arith.muli %offset_k_fixed_323, %offset_k_fixed_324 : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_326 = arith.constant 2147483647 : i64 loc(#loc254)
    %offset_k_fixed_327 = arith.constant -2147483648 : i64 loc(#loc254)
    %offset_k_fixed_328 = arith.constant dense<2147483647> : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_329 = arith.cmpi sle, %offset_k_fixed_325, %offset_k_fixed_328 : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_330 = arith.constant dense<-2147483648> : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_331 = arith.cmpi sge, %offset_k_fixed_325, %offset_k_fixed_330 : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_332 = arith.andi %offset_k_fixed_329, %offset_k_fixed_331 : tensor<128xi1, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_333 = arith.muli %offset_k_fixed_319, %offset_k_fixed_322 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc254)
    %offset_k_fixed_334 = arith.extsi %offset_k_fixed_314 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_335 = arith.extsi %offset_k_fixed_333 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_336 = arith.addi %offset_k_fixed_334, %offset_k_fixed_335 : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_337 = arith.constant 2147483647 : i64 loc(#loc255)
    %offset_k_fixed_338 = arith.constant -2147483648 : i64 loc(#loc255)
    %offset_k_fixed_339 = arith.constant dense<2147483647> : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_340 = arith.cmpi sle, %offset_k_fixed_336, %offset_k_fixed_339 : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_341 = arith.constant dense<-2147483648> : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_342 = arith.cmpi sge, %offset_k_fixed_336, %offset_k_fixed_341 : tensor<128xi64, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_343 = arith.andi %offset_k_fixed_340, %offset_k_fixed_342 : tensor<128xi1, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_344 = arith.addi %offset_k_fixed_314, %offset_k_fixed_333 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc255)
    %offset_k_fixed_345 = tt.expand_dims %offset_k_fixed_344 {axis = 1 : i32} : tensor<128xi32, #ttg.slice<{dim = 1, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> -> tensor<128x1xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc256)
    %offset_k_fixed_346 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc257)
    %offset_k_fixed_347 = arith.constant 16 : i32 loc(#loc258)
    %offset_k_fixed_348 = arith.constant 16 : i32 loc(#loc258)
    %offset_k_fixed_349 = arith.constant dense<16> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc258)
    %offset_k_fixed_350 = arith.remsi %offset_k_fixed_346, %offset_k_fixed_349 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc258)
    %offset_k_fixed_351 = arith.constant 16 : i32 loc(#loc259)
    %offset_k_fixed_352 = arith.constant 16 : i32 loc(#loc259)
    %offset_k_fixed_353 = arith.constant dense<16> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_354 = arith.extsi %offset_k_fixed_350 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_355 = arith.extsi %offset_k_fixed_353 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_356 = arith.muli %offset_k_fixed_354, %offset_k_fixed_355 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_357 = arith.constant 2147483647 : i64 loc(#loc259)
    %offset_k_fixed_358 = arith.constant -2147483648 : i64 loc(#loc259)
    %offset_k_fixed_359 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_360 = arith.cmpi sle, %offset_k_fixed_356, %offset_k_fixed_359 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_361 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_362 = arith.cmpi sge, %offset_k_fixed_356, %offset_k_fixed_361 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_363 = arith.andi %offset_k_fixed_360, %offset_k_fixed_362 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_364 = arith.muli %offset_k_fixed_350, %offset_k_fixed_353 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc259)
    %offset_k_fixed_365 = tt.expand_dims %offset_k_fixed_364 {axis = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> -> tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc260)
    %offset_k_fixed_366 = tt.broadcast %offset_k_fixed_345 : tensor<128x1xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> -> tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_367 = tt.broadcast %offset_k_fixed_365 : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> -> tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_368 = arith.extsi %offset_k_fixed_366 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_369 = arith.extsi %offset_k_fixed_367 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_370 = arith.addi %offset_k_fixed_368, %offset_k_fixed_369 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_371 = arith.constant 2147483647 : i64 loc(#loc261)
    %offset_k_fixed_372 = arith.constant -2147483648 : i64 loc(#loc261)
    %offset_k_fixed_373 = arith.constant dense<2147483647> : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_374 = arith.cmpi sle, %offset_k_fixed_370, %offset_k_fixed_373 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_375 = arith.constant dense<-2147483648> : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_376 = arith.cmpi sge, %offset_k_fixed_370, %offset_k_fixed_375 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_377 = arith.andi %offset_k_fixed_374, %offset_k_fixed_376 : tensor<128x256xi1, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %offset_k_fixed_378 = arith.addi %offset_k_fixed_366, %offset_k_fixed_367 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc261)
    %context_kv_idx_next_379 = arith.constant 0 : i32 loc(#loc262)
    %context_kv_idx_next_380 = arith.constant 0 : i32 loc(#loc262)
    %context_kv_idx_next_381 = arith.constant dense<0> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc262)
    %context_kv_idx_next_382 = arith.select %mask_kv_next_263, %context_kv_idx_next_310, %context_kv_idx_next_381 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>>, tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc262)
    %k_next = tt.expand_dims %context_kv_idx_next_382 {axis = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> -> tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc263)
    %k_next_383 = tt.splat %stride_k_seq : i32 -> tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_384 = arith.extsi %k_next : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_385 = arith.extsi %k_next_383 : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_386 = arith.muli %k_next_384, %k_next_385 : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_387 = arith.constant 2147483647 : i64 loc(#loc264)
    %k_next_388 = arith.constant -2147483648 : i64 loc(#loc264)
    %k_next_389 = arith.constant dense<2147483647> : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_390 = arith.cmpi sle, %k_next_386, %k_next_389 : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_391 = arith.constant dense<-2147483648> : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_392 = arith.cmpi sge, %k_next_386, %k_next_391 : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_393 = arith.andi %k_next_390, %k_next_392 : tensor<1x256xi1, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_394 = arith.muli %k_next, %k_next_383 : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc264)
    %k_next_395 = tt.broadcast %k_next_394 : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> -> tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_396 = arith.extsi %offset_k_fixed_378 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_397 = arith.extsi %k_next_395 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_398 = arith.addi %k_next_396, %k_next_397 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_399 = arith.constant 2147483647 : i64 loc(#loc265)
    %k_next_400 = arith.constant -2147483648 : i64 loc(#loc265)
    %k_next_401 = arith.constant dense<2147483647> : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_402 = arith.cmpi sle, %k_next_398, %k_next_401 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_403 = arith.constant dense<-2147483648> : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_404 = arith.cmpi sge, %k_next_398, %k_next_403 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_405 = arith.andi %k_next_402, %k_next_404 : tensor<128x256xi1, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_406 = arith.addi %offset_k_fixed_378, %k_next_395 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc265)
    %k_next_407 = amdgpu.buffer_load %KV_buffer[%k_next_406] : tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc266)
    %k_scale_f_next = tt.splat %stride_scale_seq : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_408 = arith.extsi %context_kv_idx_next_382 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_409 = arith.extsi %k_scale_f_next : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_410 = arith.muli %k_scale_f_next_408, %k_scale_f_next_409 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_411 = arith.constant 2147483647 : i64 loc(#loc267)
    %k_scale_f_next_412 = arith.constant -2147483648 : i64 loc(#loc267)
    %k_scale_f_next_413 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_414 = arith.cmpi sle, %k_scale_f_next_410, %k_scale_f_next_413 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_415 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_416 = arith.cmpi sge, %k_scale_f_next_410, %k_scale_f_next_415 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_417 = arith.andi %k_scale_f_next_414, %k_scale_f_next_416 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_418 = arith.muli %context_kv_idx_next_382, %k_scale_f_next : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc267)
    %k_scale_f_next_419 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc268)
    %k_scale_f_next_420 = arith.constant 16 : i32 loc(#loc269)
    %k_scale_f_next_421 = arith.constant 16 : i32 loc(#loc269)
    %k_scale_f_next_422 = arith.constant dense<16> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc269)
    %k_scale_f_next_423 = arith.remsi %k_scale_f_next_419, %k_scale_f_next_422 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc269)
    %k_scale_f_next_424 = arith.extsi %k_scale_f_next_418 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_425 = arith.extsi %k_scale_f_next_423 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_426 = arith.addi %k_scale_f_next_424, %k_scale_f_next_425 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_427 = arith.constant 2147483647 : i64 loc(#loc270)
    %k_scale_f_next_428 = arith.constant -2147483648 : i64 loc(#loc270)
    %k_scale_f_next_429 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_430 = arith.cmpi sle, %k_scale_f_next_426, %k_scale_f_next_429 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_431 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_432 = arith.cmpi sge, %k_scale_f_next_426, %k_scale_f_next_431 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_433 = arith.andi %k_scale_f_next_430, %k_scale_f_next_432 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_434 = arith.addi %k_scale_f_next_418, %k_scale_f_next_423 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc270)
    %k_scale_f_next_435 = amdgpu.buffer_load %scale_buffer[%k_scale_f_next_434] : tensor<256xf32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc271)
    %mfma_q = ttg.convert_layout %q_170 : tensor<64x128xf8E4M3FNUZ, #blocked> -> tensor<64x128xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 0, parent = #mma, kWidth = 16}>> loc(#loc272)
    %zero = tt.call @"triton.experimental.gluon.language._standard.zeros____(0, 0)cconstexpr_64__(0, 1)cconstexpr_256__(1,)cconstexpr_fp32__(2,)cconstexpr_AMDMFMALayout(version=3, instr_shape=(16 ,16), transposed=False, warps_per_cta=(1 ,4), elem_type=triton_d_language_d_float32, tiles_per_warp=_1, 1_, ctas_per_cga=_1, 1_, cta_split_num=_1, 1_, cta_order=_1, 0_)_"() : () -> tensor<64x256xf32, #mma> loc(#loc273)
    %7 = arith.extsi %split_context_start_22 : i32 to i64 loc(#loc86)
    %8 = arith.extsi %residual_context_79 : i32 to i64 loc(#loc86)
    %9 = arith.subi %7, %8 : i64 loc(#loc86)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc86)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc86)
    %10 = arith.cmpi sle, %9, %c2147483647_i64 : i64 loc(#loc86)
    %11 = arith.cmpi sge, %9, %c-2147483648_i64 : i64 loc(#loc86)
    %12 = arith.andi %10, %11 : i1 loc(#loc86)
    %13 = arith.subi %split_context_start_22, %residual_context_79 : i32 loc(#loc86)
    %14 = arith.extsi %split_context_start_22 : i32 to i64 loc(#loc87)
    %15 = arith.extsi %split_context_length_53 : i32 to i64 loc(#loc87)
    %16 = arith.addi %14, %15 : i64 loc(#loc87)
    %c2147483647_i64_436 = arith.constant 2147483647 : i64 loc(#loc87)
    %c-2147483648_i64_437 = arith.constant -2147483648 : i64 loc(#loc87)
    %17 = arith.cmpi sle, %16, %c2147483647_i64_436 : i64 loc(#loc87)
    %18 = arith.cmpi sge, %16, %c-2147483648_i64_437 : i64 loc(#loc87)
    %19 = arith.andi %17, %18 : i1 loc(#loc87)
    %20 = arith.addi %split_context_start_22, %split_context_length_53 : i32 loc(#loc87)
    %c256_i32 = arith.constant 256 : i32 loc(#loc88)
    %c256_i32_438 = arith.constant 256 : i32 loc(#loc88)
    %21 = arith.extsi %20 : i32 to i64 loc(#loc88)
    %22 = arith.extsi %c256_i32_438 : i32 to i64 loc(#loc88)
    %23 = arith.subi %21, %22 : i64 loc(#loc88)
    %c2147483647_i64_439 = arith.constant 2147483647 : i64 loc(#loc88)
    %c-2147483648_i64_440 = arith.constant -2147483648 : i64 loc(#loc88)
    %24 = arith.cmpi sle, %23, %c2147483647_i64_439 : i64 loc(#loc88)
    %25 = arith.cmpi sge, %23, %c-2147483648_i64_440 : i64 loc(#loc88)
    %26 = arith.andi %24, %25 : i1 loc(#loc88)
    %27 = arith.subi %20, %c256_i32_438 : i32 loc(#loc88)
    %c256_i32_441 = arith.constant 256 : i32 loc(#loc89)
    %28 = arith.bitcast %13 : i32 to i32 loc(#loc89)
    %29 = arith.bitcast %27 : i32 to i32 loc(#loc89)
    %30 = arith.bitcast %c256_i32_441 : i32 to i32 loc(#loc89)
    %31 = ub.poison : i32 loc(#loc89)
    %k_scale_f_next_442:3 = scf.for %context_idx_522 = %28 to %29 step %30 iter_args(%context_kv_idx_next_523 = %context_kv_idx_next_382, %k_next_524 = %k_next_407, %k_scale_f_next_525 = %k_scale_f_next_435) -> (tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>>, tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>>, tensor<256xf32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>>)  : i32 {
      rocdl.sched.barrier 0 loc(#loc90)
      %context_kv_idx_next_526 = arith.extsi %0 : i32 to i64 loc(#loc275)
      %context_kv_idx_next_527 = arith.extsi %max_block_len : i32 to i64 loc(#loc275)
      %context_kv_idx_next_528 = arith.muli %context_kv_idx_next_526, %context_kv_idx_next_527 : i64 loc(#loc275)
      %context_kv_idx_next_529 = arith.constant 2147483647 : i64 loc(#loc275)
      %context_kv_idx_next_530 = arith.constant -2147483648 : i64 loc(#loc275)
      %context_kv_idx_next_531 = arith.cmpi sle, %context_kv_idx_next_528, %context_kv_idx_next_529 : i64 loc(#loc275)
      %context_kv_idx_next_532 = arith.cmpi sge, %context_kv_idx_next_528, %context_kv_idx_next_530 : i64 loc(#loc275)
      %context_kv_idx_next_533 = arith.andi %context_kv_idx_next_531, %context_kv_idx_next_532 : i1 loc(#loc275)
      %context_kv_idx_next_534 = arith.muli %0, %max_block_len : i32 loc(#loc275)
      %context_kv_idx_next_535 = arith.constant 256 : i32 loc(#loc276)
      %context_kv_idx_next_536 = arith.constant 256 : i32 loc(#loc276)
      %context_kv_idx_next_537 = arith.extsi %context_idx_522 : i32 to i64 loc(#loc276)
      %context_kv_idx_next_538 = arith.extsi %context_kv_idx_next_536 : i32 to i64 loc(#loc276)
      %context_kv_idx_next_539 = arith.addi %context_kv_idx_next_537, %context_kv_idx_next_538 : i64 loc(#loc276)
      %context_kv_idx_next_540 = arith.constant 2147483647 : i64 loc(#loc276)
      %context_kv_idx_next_541 = arith.constant -2147483648 : i64 loc(#loc276)
      %context_kv_idx_next_542 = arith.cmpi sle, %context_kv_idx_next_539, %context_kv_idx_next_540 : i64 loc(#loc276)
      %context_kv_idx_next_543 = arith.cmpi sge, %context_kv_idx_next_539, %context_kv_idx_next_541 : i64 loc(#loc276)
      %context_kv_idx_next_544 = arith.andi %context_kv_idx_next_542, %context_kv_idx_next_543 : i1 loc(#loc276)
      %context_kv_idx_next_545 = arith.addi %context_idx_522, %context_kv_idx_next_536 : i32 loc(#loc276)
      %context_kv_idx_next_546 = arith.constant 16 : i32 loc(#loc277)
      %context_kv_idx_next_547 = arith.constant 16 : i32 loc(#loc277)
      %context_kv_idx_next_548 = arith.divsi %context_kv_idx_next_545, %context_kv_idx_next_547 : i32 loc(#loc277)
      %context_kv_idx_next_549 = arith.extsi %context_kv_idx_next_534 : i32 to i64 loc(#loc278)
      %context_kv_idx_next_550 = arith.extsi %context_kv_idx_next_548 : i32 to i64 loc(#loc278)
      %context_kv_idx_next_551 = arith.addi %context_kv_idx_next_549, %context_kv_idx_next_550 : i64 loc(#loc278)
      %context_kv_idx_next_552 = arith.constant 2147483647 : i64 loc(#loc278)
      %context_kv_idx_next_553 = arith.constant -2147483648 : i64 loc(#loc278)
      %context_kv_idx_next_554 = arith.cmpi sle, %context_kv_idx_next_551, %context_kv_idx_next_552 : i64 loc(#loc278)
      %context_kv_idx_next_555 = arith.cmpi sge, %context_kv_idx_next_551, %context_kv_idx_next_553 : i64 loc(#loc278)
      %context_kv_idx_next_556 = arith.andi %context_kv_idx_next_554, %context_kv_idx_next_555 : i1 loc(#loc278)
      %context_kv_idx_next_557 = arith.addi %context_kv_idx_next_534, %context_kv_idx_next_548 : i32 loc(#loc278)
      %context_kv_idx_next_558 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc279)
      %context_kv_idx_next_559 = arith.constant 16 : i32 loc(#loc280)
      %context_kv_idx_next_560 = arith.constant 16 : i32 loc(#loc280)
      %context_kv_idx_next_561 = arith.constant dense<16> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc280)
      %context_kv_idx_next_562 = arith.divsi %context_kv_idx_next_558, %context_kv_idx_next_561 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc280)
      %context_kv_idx_next_563 = tt.splat %context_kv_idx_next_557 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_564 = arith.extsi %context_kv_idx_next_563 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_565 = arith.extsi %context_kv_idx_next_562 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_566 = arith.addi %context_kv_idx_next_564, %context_kv_idx_next_565 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_567 = arith.constant 2147483647 : i64 loc(#loc281)
      %context_kv_idx_next_568 = arith.constant -2147483648 : i64 loc(#loc281)
      %context_kv_idx_next_569 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_570 = arith.cmpi sle, %context_kv_idx_next_566, %context_kv_idx_next_569 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_571 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_572 = arith.cmpi sge, %context_kv_idx_next_566, %context_kv_idx_next_571 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_573 = arith.andi %context_kv_idx_next_570, %context_kv_idx_next_572 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_574 = arith.addi %context_kv_idx_next_563, %context_kv_idx_next_562 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc281)
      %context_kv_idx_next_575 = amdgpu.buffer_load %kv_indices[%context_kv_idx_next_574] : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc282)
      rocdl.sched.barrier 0 loc(#loc99)
      %mfma_k_576 = ttg.convert_layout %k_next_524 : tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> -> tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc283)
      %o_577 = arith.constant 0.000000e+00 : f32 loc(#loc284)
      %o_578 = tt.dot %mfma_q, %mfma_k_576, %zero : tensor<64x128xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 0, parent = #mma, kWidth = 16}>> * tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> -> tensor<64x256xf32, #mma> loc(#loc284)
      %k_next_579 = tt.expand_dims %context_kv_idx_next_575 {axis = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> -> tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc285)
      %k_next_580 = tt.splat %stride_k_seq : i32 -> tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_581 = arith.extsi %k_next_579 : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_582 = arith.extsi %k_next_580 : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_583 = arith.muli %k_next_581, %k_next_582 : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_584 = arith.constant 2147483647 : i64 loc(#loc286)
      %k_next_585 = arith.constant -2147483648 : i64 loc(#loc286)
      %k_next_586 = arith.constant dense<2147483647> : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_587 = arith.cmpi sle, %k_next_583, %k_next_586 : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_588 = arith.constant dense<-2147483648> : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_589 = arith.cmpi sge, %k_next_583, %k_next_588 : tensor<1x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_590 = arith.andi %k_next_587, %k_next_589 : tensor<1x256xi1, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_591 = arith.muli %k_next_579, %k_next_580 : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc286)
      %k_next_592 = tt.broadcast %k_next_591 : tensor<1x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> -> tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_593 = arith.extsi %offset_k_fixed_378 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_594 = arith.extsi %k_next_592 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> to tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_595 = arith.addi %k_next_593, %k_next_594 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_596 = arith.constant 2147483647 : i64 loc(#loc287)
      %k_next_597 = arith.constant -2147483648 : i64 loc(#loc287)
      %k_next_598 = arith.constant dense<2147483647> : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_599 = arith.cmpi sle, %k_next_595, %k_next_598 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_600 = arith.constant dense<-2147483648> : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_601 = arith.cmpi sge, %k_next_595, %k_next_600 : tensor<128x256xi64, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_602 = arith.andi %k_next_599, %k_next_601 : tensor<128x256xi1, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_603 = arith.addi %offset_k_fixed_378, %k_next_592 : tensor<128x256xi32, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc287)
      %k_next_604 = amdgpu.buffer_load %KV_buffer[%k_next_603] : tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc288)
      rocdl.sched.barrier 0 loc(#loc106)
      %k_scale_f_605 = ttg.convert_layout %k_scale_f_next_525 : tensor<256xf32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> -> tensor<256xf32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc289)
      %o_606 = tt.expand_dims %k_scale_f_605 {axis = 0 : i32} : tensor<256xf32, #ttg.slice<{dim = 0, parent = #mma}>> -> tensor<1x256xf32, #mma> loc(#loc290)
      %o_607 = tt.broadcast %o_606 : tensor<1x256xf32, #mma> -> tensor<64x256xf32, #mma> loc(#loc291)
      %o_608 = arith.mulf %o_578, %o_607 : tensor<64x256xf32, #mma> loc(#loc291)
      %o_609 = arith.constant 0.000000e+00 : f32 loc(#loc292)
      %o_610 = arith.constant dense<0.000000e+00> : tensor<64x256xf32, #mma> loc(#loc292)
      %o_611 = arith.maxnumf %o_608, %o_610 : tensor<64x256xf32, #mma> loc(#loc292)
      rocdl.sched.barrier 0 loc(#loc111)
      %k_scale_f_next_612 = tt.splat %stride_scale_seq : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_613 = arith.extsi %context_kv_idx_next_575 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_614 = arith.extsi %k_scale_f_next_612 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_615 = arith.muli %k_scale_f_next_613, %k_scale_f_next_614 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_616 = arith.constant 2147483647 : i64 loc(#loc293)
      %k_scale_f_next_617 = arith.constant -2147483648 : i64 loc(#loc293)
      %k_scale_f_next_618 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_619 = arith.cmpi sle, %k_scale_f_next_615, %k_scale_f_next_618 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_620 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_621 = arith.cmpi sge, %k_scale_f_next_615, %k_scale_f_next_620 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_622 = arith.andi %k_scale_f_next_619, %k_scale_f_next_621 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_623 = arith.muli %context_kv_idx_next_575, %k_scale_f_next_612 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc293)
      %k_scale_f_next_624 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc294)
      %k_scale_f_next_625 = arith.constant 16 : i32 loc(#loc295)
      %k_scale_f_next_626 = arith.constant 16 : i32 loc(#loc295)
      %k_scale_f_next_627 = arith.constant dense<16> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc295)
      %k_scale_f_next_628 = arith.remsi %k_scale_f_next_624, %k_scale_f_next_627 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc295)
      %k_scale_f_next_629 = arith.extsi %k_scale_f_next_623 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_630 = arith.extsi %k_scale_f_next_628 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_631 = arith.addi %k_scale_f_next_629, %k_scale_f_next_630 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_632 = arith.constant 2147483647 : i64 loc(#loc296)
      %k_scale_f_next_633 = arith.constant -2147483648 : i64 loc(#loc296)
      %k_scale_f_next_634 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_635 = arith.cmpi sle, %k_scale_f_next_631, %k_scale_f_next_634 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_636 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_637 = arith.cmpi sge, %k_scale_f_next_631, %k_scale_f_next_636 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_638 = arith.andi %k_scale_f_next_635, %k_scale_f_next_637 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_639 = arith.addi %k_scale_f_next_623, %k_scale_f_next_628 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc296)
      %k_scale_f_next_640 = amdgpu.buffer_load %scale_buffer[%k_scale_f_next_639] : tensor<256xf32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc297)
      %o_641 = tt.expand_dims %scale_weight_232 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #mma}>> -> tensor<64x1xf32, #mma> loc(#loc298)
      %o_642 = tt.broadcast %o_641 : tensor<64x1xf32, #mma> -> tensor<64x256xf32, #mma> loc(#loc299)
      %o_643 = arith.mulf %o_611, %o_642 : tensor<64x256xf32, #mma> loc(#loc299)
      %mask_644 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc300)
      %mask_645 = tt.splat %context_idx_522 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_646 = arith.extsi %mask_645 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_647 = arith.extsi %mask_644 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_648 = arith.addi %mask_646, %mask_647 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_649 = arith.constant 2147483647 : i64 loc(#loc301)
      %mask_650 = arith.constant -2147483648 : i64 loc(#loc301)
      %mask_651 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_652 = arith.cmpi sle, %mask_648, %mask_651 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_653 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_654 = arith.cmpi sge, %mask_648, %mask_653 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_655 = arith.andi %mask_652, %mask_654 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_656 = arith.addi %mask_645, %mask_644 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc301)
      %mask_657 = arith.extsi %context_length_3 : i32 to i64 loc(#loc302)
      %mask_658 = arith.extsi %4 : i32 to i64 loc(#loc302)
      %mask_659 = arith.subi %mask_657, %mask_658 : i64 loc(#loc302)
      %mask_660 = arith.constant 2147483647 : i64 loc(#loc302)
      %mask_661 = arith.constant -2147483648 : i64 loc(#loc302)
      %mask_662 = arith.cmpi sle, %mask_659, %mask_660 : i64 loc(#loc302)
      %mask_663 = arith.cmpi sge, %mask_659, %mask_661 : i64 loc(#loc302)
      %mask_664 = arith.andi %mask_662, %mask_663 : i1 loc(#loc302)
      %mask_665 = arith.subi %context_length_3, %4 : i32 loc(#loc302)
      %mask_666 = tt.splat %mask_665 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc303)
      %mask_667 = arith.cmpi sle, %mask_656, %mask_666 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc303)
      %o_668 = tt.expand_dims %mask_667 {axis = 0 : i32} : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> -> tensor<1x256xi1, #mma> loc(#loc304)
      %o_669 = arith.constant 0xFF800000 : f32 loc(#loc305)
      %o_670 = arith.constant 0xFF800000 : f32 loc(#loc305)
      %o_671 = arith.constant dense<0xFF800000> : tensor<64x256xf32, #mma> loc(#loc305)
      %o_672 = tt.broadcast %o_668 : tensor<1x256xi1, #mma> -> tensor<64x256xi1, #mma> loc(#loc305)
      %o_673 = arith.select %o_672, %o_643, %o_671 : tensor<64x256xi1, #mma>, tensor<64x256xf32, #mma> loc(#loc305)
      %logits_674 = "tt.reduce"(%o_673) <{axis = 0 : i32}> ({
      ^bb0(%arg23: f32 loc(unknown), %arg24: f32 loc(unknown)):
        %logits_697 = tt.call @aiter.ops.triton._triton_kernels.pa_mqa_logits._sum_combine__fp32_fp32__(%arg23, %arg24) : (f32, f32) -> f32 loc(#loc306)
        tt.reduce.return %logits_697 : f32 loc(#loc306)
      }) : (tensor<64x256xf32, #mma>) -> tensor<256xf32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc306)
      %c1_i32_675 = arith.constant 1 : i32 loc(#loc126)
      %c1_i32_676 = arith.constant 1 : i32 loc(#loc126)
      %80 = arith.extsi %0 : i32 to i64 loc(#loc126)
      %81 = arith.extsi %c1_i32_676 : i32 to i64 loc(#loc126)
      %82 = arith.muli %80, %81 : i64 loc(#loc126)
      %c2147483647_i64_677 = arith.constant 2147483647 : i64 loc(#loc126)
      %c-2147483648_i64_678 = arith.constant -2147483648 : i64 loc(#loc126)
      %83 = arith.cmpi sle, %82, %c2147483647_i64_677 : i64 loc(#loc126)
      %84 = arith.cmpi sge, %82, %c-2147483648_i64_678 : i64 loc(#loc126)
      %85 = arith.andi %83, %84 : i1 loc(#loc126)
      %86 = arith.muli %0, %c1_i32_676 : i32 loc(#loc126)
      %87 = arith.extsi %86 : i32 to i64 loc(#loc127)
      %88 = arith.extsi %4 : i32 to i64 loc(#loc127)
      %89 = arith.addi %87, %88 : i64 loc(#loc127)
      %c2147483647_i64_679 = arith.constant 2147483647 : i64 loc(#loc127)
      %c-2147483648_i64_680 = arith.constant -2147483648 : i64 loc(#loc127)
      %90 = arith.cmpi sle, %89, %c2147483647_i64_679 : i64 loc(#loc127)
      %91 = arith.cmpi sge, %89, %c-2147483648_i64_680 : i64 loc(#loc127)
      %92 = arith.andi %90, %91 : i1 loc(#loc127)
      %93 = arith.addi %86, %4 : i32 loc(#loc127)
      %94 = arith.extsi %93 : i32 to i64 loc(#loc128)
      %95 = arith.extsi %stride_out_batch : i32 to i64 loc(#loc128)
      %96 = arith.muli %94, %95 : i64 loc(#loc128)
      %c2147483647_i64_681 = arith.constant 2147483647 : i64 loc(#loc128)
      %c-2147483648_i64_682 = arith.constant -2147483648 : i64 loc(#loc128)
      %97 = arith.cmpi sle, %96, %c2147483647_i64_681 : i64 loc(#loc128)
      %98 = arith.cmpi sge, %96, %c-2147483648_i64_682 : i64 loc(#loc128)
      %99 = arith.andi %97, %98 : i1 loc(#loc128)
      %100 = arith.muli %93, %stride_out_batch : i32 loc(#loc128)
      %101 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc129)
      %102 = tt.splat %context_idx_522 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %103 = arith.extsi %102 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %104 = arith.extsi %101 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %105 = arith.addi %103, %104 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %c2147483647_i64_683 = arith.constant 2147483647 : i64 loc(#loc130)
      %c-2147483648_i64_684 = arith.constant -2147483648 : i64 loc(#loc130)
      %cst_685 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %106 = arith.cmpi sle, %105, %cst_685 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %cst_686 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %107 = arith.cmpi sge, %105, %cst_686 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %108 = arith.andi %106, %107 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %109 = arith.addi %102, %101 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc130)
      %110 = tt.splat %100 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %111 = arith.extsi %110 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %112 = arith.extsi %109 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %113 = arith.addi %111, %112 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %c2147483647_i64_687 = arith.constant 2147483647 : i64 loc(#loc131)
      %c-2147483648_i64_688 = arith.constant -2147483648 : i64 loc(#loc131)
      %cst_689 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %114 = arith.cmpi sle, %113, %cst_689 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %cst_690 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %115 = arith.cmpi sge, %113, %cst_690 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %116 = arith.andi %114, %115 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %117 = arith.addi %110, %109 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc131)
      %118 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc132)
      %119 = tt.splat %context_idx_522 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %120 = arith.extsi %119 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %121 = arith.extsi %118 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %122 = arith.addi %120, %121 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %c2147483647_i64_691 = arith.constant 2147483647 : i64 loc(#loc133)
      %c-2147483648_i64_692 = arith.constant -2147483648 : i64 loc(#loc133)
      %cst_693 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %123 = arith.cmpi sle, %122, %cst_693 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %cst_694 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %124 = arith.cmpi sge, %122, %cst_694 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %125 = arith.andi %123, %124 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %126 = arith.addi %119, %118 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc133)
      %c0_i32_695 = arith.constant 0 : i32 loc(#loc134)
      %cst_696 = arith.constant dense<0> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc134)
      %127 = arith.cmpi sge, %126, %cst_696 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc134)
      amdgpu.buffer_store %logits_674, %OutLogits_buffer[%117], %127 : tensor<256xf32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc135)
      scf.yield %context_kv_idx_next_575, %k_next_604, %k_scale_f_next_640 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>>, tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>>, tensor<256xf32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> loc(#loc136)
    } loc(#loc329)
    %context_idx = arith.extsi %split_context_start_22 : i32 to i64 loc(#loc307)
    %context_idx_443 = arith.extsi %split_context_length_53 : i32 to i64 loc(#loc307)
    %context_idx_444 = arith.addi %context_idx, %context_idx_443 : i64 loc(#loc307)
    %context_idx_445 = arith.constant 2147483647 : i64 loc(#loc307)
    %context_idx_446 = arith.constant -2147483648 : i64 loc(#loc307)
    %context_idx_447 = arith.cmpi sle, %context_idx_444, %context_idx_445 : i64 loc(#loc307)
    %context_idx_448 = arith.cmpi sge, %context_idx_444, %context_idx_446 : i64 loc(#loc307)
    %context_idx_449 = arith.andi %context_idx_447, %context_idx_448 : i1 loc(#loc307)
    %context_idx_450 = arith.addi %split_context_start_22, %split_context_length_53 : i32 loc(#loc307)
    %context_idx_451 = arith.constant 256 : i32 loc(#loc308)
    %context_idx_452 = arith.constant 256 : i32 loc(#loc308)
    %context_idx_453 = arith.extsi %context_idx_450 : i32 to i64 loc(#loc308)
    %context_idx_454 = arith.extsi %context_idx_452 : i32 to i64 loc(#loc308)
    %context_idx_455 = arith.subi %context_idx_453, %context_idx_454 : i64 loc(#loc308)
    %context_idx_456 = arith.constant 2147483647 : i64 loc(#loc308)
    %context_idx_457 = arith.constant -2147483648 : i64 loc(#loc308)
    %context_idx_458 = arith.cmpi sle, %context_idx_455, %context_idx_456 : i64 loc(#loc308)
    %context_idx_459 = arith.cmpi sge, %context_idx_455, %context_idx_457 : i64 loc(#loc308)
    %context_idx_460 = arith.andi %context_idx_458, %context_idx_459 : i1 loc(#loc308)
    %context_idx_461 = arith.subi %context_idx_450, %context_idx_452 : i32 loc(#loc308)
    %mfma_k = ttg.convert_layout %k_scale_f_next_442#1 : tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> -> tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> loc(#loc309)
    %o = arith.constant 0.000000e+00 : f32 loc(#loc310)
    %o_462 = tt.dot %mfma_q, %mfma_k, %zero : tensor<64x128xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 0, parent = #mma, kWidth = 16}>> * tensor<128x256xf8E4M3FNUZ, #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>> -> tensor<64x256xf32, #mma> loc(#loc310)
    %k_scale_f = ttg.convert_layout %k_scale_f_next_442#2 : tensor<256xf32, #ttg.slice<{dim = 0, parent = #ttg.dot_op<{opIdx = 1, parent = #mma, kWidth = 16}>}>> -> tensor<256xf32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc311)
    %o_463 = tt.expand_dims %k_scale_f {axis = 0 : i32} : tensor<256xf32, #ttg.slice<{dim = 0, parent = #mma}>> -> tensor<1x256xf32, #mma> loc(#loc312)
    %o_464 = tt.broadcast %o_463 : tensor<1x256xf32, #mma> -> tensor<64x256xf32, #mma> loc(#loc313)
    %o_465 = arith.mulf %o_462, %o_464 : tensor<64x256xf32, #mma> loc(#loc313)
    %o_466 = arith.constant 0.000000e+00 : f32 loc(#loc314)
    %o_467 = arith.constant dense<0.000000e+00> : tensor<64x256xf32, #mma> loc(#loc314)
    %o_468 = arith.maxnumf %o_465, %o_467 : tensor<64x256xf32, #mma> loc(#loc314)
    %o_469 = tt.expand_dims %scale_weight_232 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #mma}>> -> tensor<64x1xf32, #mma> loc(#loc315)
    %o_470 = tt.broadcast %o_469 : tensor<64x1xf32, #mma> -> tensor<64x256xf32, #mma> loc(#loc316)
    %o_471 = arith.mulf %o_468, %o_470 : tensor<64x256xf32, #mma> loc(#loc316)
    %mask = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc317)
    %mask_472 = tt.splat %context_idx_461 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_473 = arith.extsi %mask_472 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_474 = arith.extsi %mask : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_475 = arith.addi %mask_473, %mask_474 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_476 = arith.constant 2147483647 : i64 loc(#loc318)
    %mask_477 = arith.constant -2147483648 : i64 loc(#loc318)
    %mask_478 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_479 = arith.cmpi sle, %mask_475, %mask_478 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_480 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_481 = arith.cmpi sge, %mask_475, %mask_480 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_482 = arith.andi %mask_479, %mask_481 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_483 = arith.addi %mask_472, %mask : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc318)
    %mask_484 = arith.extsi %context_length_3 : i32 to i64 loc(#loc319)
    %mask_485 = arith.extsi %4 : i32 to i64 loc(#loc319)
    %mask_486 = arith.subi %mask_484, %mask_485 : i64 loc(#loc319)
    %mask_487 = arith.constant 2147483647 : i64 loc(#loc319)
    %mask_488 = arith.constant -2147483648 : i64 loc(#loc319)
    %mask_489 = arith.cmpi sle, %mask_486, %mask_487 : i64 loc(#loc319)
    %mask_490 = arith.cmpi sge, %mask_486, %mask_488 : i64 loc(#loc319)
    %mask_491 = arith.andi %mask_489, %mask_490 : i1 loc(#loc319)
    %mask_492 = arith.subi %context_length_3, %4 : i32 loc(#loc319)
    %mask_493 = tt.splat %mask_492 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc320)
    %mask_494 = arith.cmpi sle, %mask_483, %mask_493 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc320)
    %o_495 = tt.expand_dims %mask_494 {axis = 0 : i32} : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> -> tensor<1x256xi1, #mma> loc(#loc321)
    %o_496 = arith.constant 0xFF800000 : f32 loc(#loc322)
    %o_497 = arith.constant 0xFF800000 : f32 loc(#loc322)
    %o_498 = arith.constant dense<0xFF800000> : tensor<64x256xf32, #mma> loc(#loc322)
    %o_499 = tt.broadcast %o_495 : tensor<1x256xi1, #mma> -> tensor<64x256xi1, #mma> loc(#loc322)
    %o_500 = arith.select %o_499, %o_471, %o_498 : tensor<64x256xi1, #mma>, tensor<64x256xf32, #mma> loc(#loc322)
    %logits = "tt.reduce"(%o_500) <{axis = 0 : i32}> ({
    ^bb0(%arg19: f32 loc(unknown), %arg20: f32 loc(unknown)):
      %logits_522 = tt.call @aiter.ops.triton._triton_kernels.pa_mqa_logits._sum_combine__fp32_fp32__(%arg19, %arg20) : (f32, f32) -> f32 loc(#loc323)
      tt.reduce.return %logits_522 : f32 loc(#loc323)
    }) : (tensor<64x256xf32, #mma>) -> tensor<256xf32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc323)
    %c1_i32_501 = arith.constant 1 : i32 loc(#loc154)
    %c1_i32_502 = arith.constant 1 : i32 loc(#loc154)
    %32 = arith.extsi %0 : i32 to i64 loc(#loc154)
    %33 = arith.extsi %c1_i32_502 : i32 to i64 loc(#loc154)
    %34 = arith.muli %32, %33 : i64 loc(#loc154)
    %c2147483647_i64_503 = arith.constant 2147483647 : i64 loc(#loc154)
    %c-2147483648_i64_504 = arith.constant -2147483648 : i64 loc(#loc154)
    %35 = arith.cmpi sle, %34, %c2147483647_i64_503 : i64 loc(#loc154)
    %36 = arith.cmpi sge, %34, %c-2147483648_i64_504 : i64 loc(#loc154)
    %37 = arith.andi %35, %36 : i1 loc(#loc154)
    %38 = arith.muli %0, %c1_i32_502 : i32 loc(#loc154)
    %39 = arith.extsi %38 : i32 to i64 loc(#loc155)
    %40 = arith.extsi %4 : i32 to i64 loc(#loc155)
    %41 = arith.addi %39, %40 : i64 loc(#loc155)
    %c2147483647_i64_505 = arith.constant 2147483647 : i64 loc(#loc155)
    %c-2147483648_i64_506 = arith.constant -2147483648 : i64 loc(#loc155)
    %42 = arith.cmpi sle, %41, %c2147483647_i64_505 : i64 loc(#loc155)
    %43 = arith.cmpi sge, %41, %c-2147483648_i64_506 : i64 loc(#loc155)
    %44 = arith.andi %42, %43 : i1 loc(#loc155)
    %45 = arith.addi %38, %4 : i32 loc(#loc155)
    %46 = arith.extsi %45 : i32 to i64 loc(#loc156)
    %47 = arith.extsi %stride_out_batch : i32 to i64 loc(#loc156)
    %48 = arith.muli %46, %47 : i64 loc(#loc156)
    %c2147483647_i64_507 = arith.constant 2147483647 : i64 loc(#loc156)
    %c-2147483648_i64_508 = arith.constant -2147483648 : i64 loc(#loc156)
    %49 = arith.cmpi sle, %48, %c2147483647_i64_507 : i64 loc(#loc156)
    %50 = arith.cmpi sge, %48, %c-2147483648_i64_508 : i64 loc(#loc156)
    %51 = arith.andi %49, %50 : i1 loc(#loc156)
    %52 = arith.muli %45, %stride_out_batch : i32 loc(#loc156)
    %53 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc157)
    %54 = tt.splat %context_idx_461 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %55 = arith.extsi %54 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %56 = arith.extsi %53 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %57 = arith.addi %55, %56 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %c2147483647_i64_509 = arith.constant 2147483647 : i64 loc(#loc158)
    %c-2147483648_i64_510 = arith.constant -2147483648 : i64 loc(#loc158)
    %cst = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %58 = arith.cmpi sle, %57, %cst : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %cst_511 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %59 = arith.cmpi sge, %57, %cst_511 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %60 = arith.andi %58, %59 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %61 = arith.addi %54, %53 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc158)
    %62 = tt.splat %52 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %63 = arith.extsi %62 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %64 = arith.extsi %61 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %65 = arith.addi %63, %64 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %c2147483647_i64_512 = arith.constant 2147483647 : i64 loc(#loc159)
    %c-2147483648_i64_513 = arith.constant -2147483648 : i64 loc(#loc159)
    %cst_514 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %66 = arith.cmpi sle, %65, %cst_514 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %cst_515 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %67 = arith.cmpi sge, %65, %cst_515 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %68 = arith.andi %66, %67 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %69 = arith.addi %62, %61 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc159)
    %70 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc160)
    %71 = tt.splat %context_idx_461 : i32 -> tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %72 = arith.extsi %71 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %73 = arith.extsi %70 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> to tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %74 = arith.addi %72, %73 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %c2147483647_i64_516 = arith.constant 2147483647 : i64 loc(#loc161)
    %c-2147483648_i64_517 = arith.constant -2147483648 : i64 loc(#loc161)
    %cst_518 = arith.constant dense<2147483647> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %75 = arith.cmpi sle, %74, %cst_518 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %cst_519 = arith.constant dense<-2147483648> : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %76 = arith.cmpi sge, %74, %cst_519 : tensor<256xi64, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %77 = arith.andi %75, %76 : tensor<256xi1, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %78 = arith.addi %71, %70 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc161)
    %c0_i32_520 = arith.constant 0 : i32 loc(#loc162)
    %cst_521 = arith.constant dense<0> : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc162)
    %79 = arith.cmpi sge, %78, %cst_521 : tensor<256xi32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc162)
    amdgpu.buffer_store %logits, %OutLogits_buffer[%69], %79 : tensor<256xf32, #ttg.slice<{dim = 0, parent = #mma}>> loc(#loc163)
    tt.return loc(#loc164)
  } loc(#loc1)
  tt.func private @"triton.language.standard.cdiv__i32__(1,)cconstexpr_64_"(%x: i32 loc("x"(#loc165))) -> i32 attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc166)
    %c64_i32_0 = arith.constant 64 : i32 loc(#loc166)
    %0 = arith.extsi %x : i32 to i64 loc(#loc166)
    %1 = arith.extsi %c64_i32_0 : i32 to i64 loc(#loc166)
    %2 = arith.addi %0, %1 : i64 loc(#loc166)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc166)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc166)
    %3 = arith.cmpi sle, %2, %c2147483647_i64 : i64 loc(#loc166)
    %4 = arith.cmpi sge, %2, %c-2147483648_i64 : i64 loc(#loc166)
    %5 = arith.andi %3, %4 : i1 loc(#loc166)
    %6 = arith.addi %x, %c64_i32_0 : i32 loc(#loc166)
    %c1_i32 = arith.constant 1 : i32 loc(#loc167)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc167)
    %7 = arith.extsi %6 : i32 to i64 loc(#loc167)
    %8 = arith.extsi %c1_i32_1 : i32 to i64 loc(#loc167)
    %9 = arith.subi %7, %8 : i64 loc(#loc167)
    %c2147483647_i64_2 = arith.constant 2147483647 : i64 loc(#loc167)
    %c-2147483648_i64_3 = arith.constant -2147483648 : i64 loc(#loc167)
    %10 = arith.cmpi sle, %9, %c2147483647_i64_2 : i64 loc(#loc167)
    %11 = arith.cmpi sge, %9, %c-2147483648_i64_3 : i64 loc(#loc167)
    %12 = arith.andi %10, %11 : i1 loc(#loc167)
    %13 = arith.subi %6, %c1_i32_1 : i32 loc(#loc167)
    %c64_i32_4 = arith.constant 64 : i32 loc(#loc168)
    %c64_i32_5 = arith.constant 64 : i32 loc(#loc168)
    %14 = arith.divsi %13, %c64_i32_5 : i32 loc(#loc168)
    tt.return %14 : i32 loc(#loc169)
  ^bb1:  // no predecessors
    %15 = ub.poison : i32 loc(#loc170)
    tt.return %15 : i32 loc(#loc170)
  } loc(#loc165)
  tt.func private @"triton.language.standard.cdiv__i32__(1,)cconstexpr_256_"(%x: i32 loc("x"(#loc165))) -> i32 attributes {noinline = false} {
    %c256_i32 = arith.constant 256 : i32 loc(#loc166)
    %c256_i32_0 = arith.constant 256 : i32 loc(#loc166)
    %0 = arith.extsi %x : i32 to i64 loc(#loc166)
    %1 = arith.extsi %c256_i32_0 : i32 to i64 loc(#loc166)
    %2 = arith.addi %0, %1 : i64 loc(#loc166)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc166)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc166)
    %3 = arith.cmpi sle, %2, %c2147483647_i64 : i64 loc(#loc166)
    %4 = arith.cmpi sge, %2, %c-2147483648_i64 : i64 loc(#loc166)
    %5 = arith.andi %3, %4 : i1 loc(#loc166)
    %6 = arith.addi %x, %c256_i32_0 : i32 loc(#loc166)
    %c1_i32 = arith.constant 1 : i32 loc(#loc167)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc167)
    %7 = arith.extsi %6 : i32 to i64 loc(#loc167)
    %8 = arith.extsi %c1_i32_1 : i32 to i64 loc(#loc167)
    %9 = arith.subi %7, %8 : i64 loc(#loc167)
    %c2147483647_i64_2 = arith.constant 2147483647 : i64 loc(#loc167)
    %c-2147483648_i64_3 = arith.constant -2147483648 : i64 loc(#loc167)
    %10 = arith.cmpi sle, %9, %c2147483647_i64_2 : i64 loc(#loc167)
    %11 = arith.cmpi sge, %9, %c-2147483648_i64_3 : i64 loc(#loc167)
    %12 = arith.andi %10, %11 : i1 loc(#loc167)
    %13 = arith.subi %6, %c1_i32_1 : i32 loc(#loc167)
    %c256_i32_4 = arith.constant 256 : i32 loc(#loc168)
    %c256_i32_5 = arith.constant 256 : i32 loc(#loc168)
    %14 = arith.divsi %13, %c256_i32_5 : i32 loc(#loc168)
    tt.return %14 : i32 loc(#loc169)
  ^bb1:  // no predecessors
    %15 = ub.poison : i32 loc(#loc170)
    tt.return %15 : i32 loc(#loc170)
  } loc(#loc165)
  tt.func private @triton.language.standard.cdiv__i32_i32__(%x: i32 loc("x"(#loc165)), %div: i32 loc("div"(#loc165))) -> i32 attributes {noinline = false} {
    %0 = arith.extsi %x : i32 to i64 loc(#loc166)
    %1 = arith.extsi %div : i32 to i64 loc(#loc166)
    %2 = arith.addi %0, %1 : i64 loc(#loc166)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc166)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc166)
    %3 = arith.cmpi sle, %2, %c2147483647_i64 : i64 loc(#loc166)
    %4 = arith.cmpi sge, %2, %c-2147483648_i64 : i64 loc(#loc166)
    %5 = arith.andi %3, %4 : i1 loc(#loc166)
    %6 = arith.addi %x, %div : i32 loc(#loc166)
    %c1_i32 = arith.constant 1 : i32 loc(#loc167)
    %c1_i32_0 = arith.constant 1 : i32 loc(#loc167)
    %7 = arith.extsi %6 : i32 to i64 loc(#loc167)
    %8 = arith.extsi %c1_i32_0 : i32 to i64 loc(#loc167)
    %9 = arith.subi %7, %8 : i64 loc(#loc167)
    %c2147483647_i64_1 = arith.constant 2147483647 : i64 loc(#loc167)
    %c-2147483648_i64_2 = arith.constant -2147483648 : i64 loc(#loc167)
    %10 = arith.cmpi sle, %9, %c2147483647_i64_1 : i64 loc(#loc167)
    %11 = arith.cmpi sge, %9, %c-2147483648_i64_2 : i64 loc(#loc167)
    %12 = arith.andi %10, %11 : i1 loc(#loc167)
    %13 = arith.subi %6, %c1_i32_0 : i32 loc(#loc167)
    %14 = arith.divsi %13, %div : i32 loc(#loc168)
    tt.return %14 : i32 loc(#loc169)
  ^bb1:  // no predecessors
    %15 = ub.poison : i32 loc(#loc170)
    tt.return %15 : i32 loc(#loc170)
  } loc(#loc165)
  tt.func private @"triton.language.standard.cdiv__i32__(1,)cconstexpr_16_"(%x: i32 loc("x"(#loc165))) -> i32 attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc166)
    %c16_i32_0 = arith.constant 16 : i32 loc(#loc166)
    %0 = arith.extsi %x : i32 to i64 loc(#loc166)
    %1 = arith.extsi %c16_i32_0 : i32 to i64 loc(#loc166)
    %2 = arith.addi %0, %1 : i64 loc(#loc166)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc166)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc166)
    %3 = arith.cmpi sle, %2, %c2147483647_i64 : i64 loc(#loc166)
    %4 = arith.cmpi sge, %2, %c-2147483648_i64 : i64 loc(#loc166)
    %5 = arith.andi %3, %4 : i1 loc(#loc166)
    %6 = arith.addi %x, %c16_i32_0 : i32 loc(#loc166)
    %c1_i32 = arith.constant 1 : i32 loc(#loc167)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc167)
    %7 = arith.extsi %6 : i32 to i64 loc(#loc167)
    %8 = arith.extsi %c1_i32_1 : i32 to i64 loc(#loc167)
    %9 = arith.subi %7, %8 : i64 loc(#loc167)
    %c2147483647_i64_2 = arith.constant 2147483647 : i64 loc(#loc167)
    %c-2147483648_i64_3 = arith.constant -2147483648 : i64 loc(#loc167)
    %10 = arith.cmpi sle, %9, %c2147483647_i64_2 : i64 loc(#loc167)
    %11 = arith.cmpi sge, %9, %c-2147483648_i64_3 : i64 loc(#loc167)
    %12 = arith.andi %10, %11 : i1 loc(#loc167)
    %13 = arith.subi %6, %c1_i32_1 : i32 loc(#loc167)
    %c16_i32_4 = arith.constant 16 : i32 loc(#loc168)
    %c16_i32_5 = arith.constant 16 : i32 loc(#loc168)
    %14 = arith.divsi %13, %c16_i32_5 : i32 loc(#loc168)
    tt.return %14 : i32 loc(#loc169)
  ^bb1:  // no predecessors
    %15 = ub.poison : i32 loc(#loc170)
    tt.return %15 : i32 loc(#loc170)
  } loc(#loc165)
  tt.func private @"triton.experimental.gluon.language._standard.zeros____(0, 0)cconstexpr_64__(0, 1)cconstexpr_256__(1,)cconstexpr_fp32__(2,)cconstexpr_AMDMFMALayout(version=3, instr_shape=(16 ,16), transposed=False, warps_per_cta=(1 ,4), elem_type=triton_d_language_d_float32, tiles_per_warp=_1, 1_, ctas_per_cga=_1, 1_, cta_split_num=_1, 1_, cta_order=_1, 0_)_"() -> tensor<64x256xf32, #mma> attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc172)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<64x256xf32, #mma> loc(#loc172)
    tt.return %cst_0 : tensor<64x256xf32, #mma> loc(#loc173)
  ^bb1:  // no predecessors
    %0 = ub.poison : tensor<64x256xf32, #mma> loc(#loc174)
    tt.return %0 : tensor<64x256xf32, #mma> loc(#loc174)
  } loc(#loc171)
  tt.func private @aiter.ops.triton._triton_kernels.pa_mqa_logits._sum_combine__fp32_fp32__(%a: f32 loc("a"(#loc175)), %b: f32 loc("b"(#loc175))) -> f32 attributes {noinline = false} {
    %0 = arith.addf %a, %b : f32 loc(#loc176)
    tt.return %0 : f32 loc(#loc177)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc178)
    tt.return %1 : f32 loc(#loc178)
  } loc(#loc175)
} loc(#loc)
#loc2 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":720:24)
#loc3 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":721:42)
#loc4 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":723:34)
#loc5 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":723:53)
#loc6 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":725:21)
#loc7 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":726:22)
#loc8 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":728:44)
#loc9 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":728:66)
#loc10 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":730:47)
#loc11 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":730:29)
#loc12 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":732:48)
#loc13 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":733:57)
#loc14 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":735:42)
#loc15 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":735:69)
#loc16 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":737:25)
#loc17 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":737:72)
#loc18 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":737:46)
#loc19 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":740:31)
#loc20 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":741:8)
#loc21 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":743:56)
#loc22 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":744:49)
#loc23 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":747:54)
#loc24 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":747:32)
#loc25 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":748:8)
#loc26 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":749:49)
#loc27 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":756:28)
#loc28 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":757:23)
#loc29 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":757:10)
#loc30 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":760:29)
#loc31 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":761:31)
#loc32 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":761:18)
#loc33 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":763:14)
#loc34 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":764:10)
#loc35 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":758:10)
#loc36 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":765:23)
#loc37 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":765:70)
#loc38 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":765:10)
#loc39 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":756:8)
#loc40 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":769:29)
#loc41 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":769:38)
#loc42 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":769:52)
#loc43 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":770:23)
#loc44 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":770:10)
#loc45 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":771:23)
#loc46 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":771:10)
#loc47 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":769:8)
#loc48 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":775:31)
#loc49 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":775:52)
#loc50 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":776:23)
#loc51 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":776:75)
#loc52 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":776:10)
#loc53 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":777:9)
#loc54 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":780:28)
#loc55 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":781:33)
#loc56 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":781:54)
#loc57 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":781:10)
#loc58 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":782:23)
#loc59 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":782:75)
#loc60 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":782:10)
#loc61 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":783:8)
#loc62 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":787:21)
#loc63 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":787:75)
#loc64 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":788:23)
#loc65 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":788:78)
#loc66 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":788:83)
#loc67 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":788:10)
#loc68 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":789:6)
#loc69 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":790:21)
#loc70 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":790:72)
#loc71 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":790:77)
#loc72 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":792:8)
#loc73 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":789:17)
#loc74 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":799:70)
#loc75 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":802:53)
#loc76 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":802:64)
#loc77 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":802:33)
#loc78 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":802:8)
#loc79 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":806:38)
#loc80 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":807:23)
#loc81 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":807:74)
#loc82 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":807:10)
#loc83 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":806:8)
#loc84 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":809:34)
#loc85 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":811:20)
#loc86 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":813:30)
#loc87 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":814:30)
#loc88 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":814:53)
#loc89 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":815:8)
#loc90 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":821:35)
#loc91 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":826:32)
#loc92 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":827:29)
#loc93 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":827:40)
#loc94 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":827:14)
#loc95 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":828:27)
#loc96 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":829:15)
#loc97 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":828:14)
#loc98 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":826:12)
#loc99 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":833:35)
#loc100 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":836:38)
#loc101 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":837:46)
#loc102 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":842:57)
#loc103 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":842:68)
#loc104 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":842:37)
#loc105 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":842:12)
#loc106 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":849:35)
#loc107 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":851:49)
#loc108 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":852:26)
#loc109 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":852:16)
#loc110 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":853:26)
#loc111 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":856:35)
#loc112 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":860:42)
#loc113 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":861:27)
#loc114 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":862:14)
#loc115 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":861:14)
#loc116 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":860:12)
#loc117 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":864:29)
#loc118 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":864:16)
#loc119 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":867:39)
#loc120 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":867:26)
#loc121 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":868:32)
#loc122 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":868:15)
#loc123 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":870:26)
#loc124 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":870:39)
#loc125 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":872:27)
#loc126 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":876:33)
#loc127 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":876:42)
#loc128 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":876:56)
#loc129 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":879:31)
#loc130 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":879:18)
#loc131 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":878:16)
#loc132 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":882:27)
#loc133 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":882:14)
#loc134 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":883:15)
#loc135 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":874:12)
#loc136 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":873:8)
#loc137 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":886:40)
#loc138 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":886:63)
#loc139 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":890:34)
#loc140 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":891:42)
#loc141 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":893:45)
#loc142 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":894:22)
#loc143 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":894:12)
#loc144 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":895:22)
#loc145 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":896:25)
#loc146 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":896:12)
#loc147 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":899:35)
#loc148 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":899:22)
#loc149 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":900:28)
#loc150 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":900:11)
#loc151 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":902:22)
#loc152 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":902:35)
#loc153 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":904:23)
#loc154 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":908:29)
#loc155 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":908:38)
#loc156 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":908:52)
#loc157 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":909:38)
#loc158 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":909:25)
#loc159 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":909:11)
#loc160 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":910:40)
#loc161 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":910:27)
#loc162 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":911:11)
#loc163 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":906:8)
#loc164 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":905:4)
#loc166 = loc("/mnt/raid0/felix/triton/python/triton/language/standard.py":41:16)
#loc167 = loc("/mnt/raid0/felix/triton/python/triton/language/standard.py":41:22)
#loc168 = loc("/mnt/raid0/felix/triton/python/triton/language/standard.py":41:28)
#loc169 = loc("/mnt/raid0/felix/triton/python/triton/language/standard.py":41:11)
#loc170 = loc("/mnt/raid0/felix/triton/python/triton/language/standard.py":41:4)
#loc171 = loc("/mnt/raid0/felix/triton/python/triton/experimental/gluon/language/_standard.py":28:0)
#loc172 = loc("/mnt/raid0/felix/triton/python/triton/experimental/gluon/language/_standard.py":40:38)
#loc173 = loc("/mnt/raid0/felix/triton/python/triton/experimental/gluon/language/_standard.py":40:11)
#loc174 = loc("/mnt/raid0/felix/triton/python/triton/experimental/gluon/language/_standard.py":40:4)
#loc176 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":15:15)
#loc177 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":15:11)
#loc178 = loc("/mnt/raid0/felix/aiter/aiter/ops/triton/_triton_kernels/pa_mqa_logits.py":15:4)
#loc198 = loc("pid"(#loc2))
#loc199 = loc("num_block_q_head"(#loc3))
#loc200 = loc("context_length"(#loc10))
#loc201 = loc("context_length"(#loc11))
#loc202 = loc("context_chunk_num"(#loc12))
#loc203 = loc("split_context_chunk_num"(#loc13))
#loc204 = loc("split_context_start"(#loc14))
#loc205 = loc("split_context_start"(#loc15))
#loc206 = loc("split_context_length"(#loc16))
#loc207 = loc("split_context_length"(#loc17))
#loc208 = loc("split_context_length"(#loc18))
#loc209 = loc("split_context_block"(#loc21))
#loc210 = loc("split_context_length"(#loc22))
#loc211 = loc("residual_context_blocks"(#loc23))
#loc212 = loc("residual_context_blocks"(#loc24))
#loc213 = loc("residual_context_blocks"(#loc25))
#loc214 = loc("residual_context"(#loc26))
#loc215 = loc("q"(#loc27))
#loc216 = loc("q"(#loc28))
#loc217 = loc("q"(#loc29))
#loc218 = loc("q"(#loc30))
#loc219 = loc("q"(#loc31))
#loc220 = loc("q"(#loc32))
#loc221 = loc("q"(#loc33))
#loc222 = loc("q"(#loc34))
#loc223 = loc("q"(#loc35))
#loc224 = loc("q"(#loc36))
#loc225 = loc("q"(#loc37))
#loc226 = loc("q"(#loc38))
#loc227 = loc("q"(#loc39))
#loc228 = loc("scale_weight"(#loc40))
#loc229 = loc("scale_weight"(#loc41))
#loc230 = loc("scale_weight"(#loc42))
#loc231 = loc("scale_weight"(#loc43))
#loc232 = loc("scale_weight"(#loc44))
#loc233 = loc("scale_weight"(#loc45))
#loc234 = loc("scale_weight"(#loc46))
#loc235 = loc("scale_weight"(#loc47))
#loc236 = loc("mask_kv_next"(#loc48))
#loc237 = loc("mask_kv_next"(#loc49))
#loc238 = loc("mask_kv_next"(#loc50))
#loc239 = loc("mask_kv_next"(#loc51))
#loc240 = loc("mask_kv_next"(#loc52))
#loc241 = loc("mask_kv_next"(#loc53))
#loc242 = loc("context_kv_idx_next"(#loc54))
#loc243 = loc("context_kv_idx_next"(#loc55))
#loc244 = loc("context_kv_idx_next"(#loc56))
#loc245 = loc("context_kv_idx_next"(#loc57))
#loc246 = loc("context_kv_idx_next"(#loc58))
#loc247 = loc("context_kv_idx_next"(#loc59))
#loc248 = loc("context_kv_idx_next"(#loc60))
#loc249 = loc("context_kv_idx_next"(#loc61))
#loc250 = loc("offset_k_fixed"(#loc62))
#loc251 = loc("offset_k_fixed"(#loc63))
#loc252 = loc("offset_k_fixed"(#loc64))
#loc253 = loc("offset_k_fixed"(#loc65))
#loc254 = loc("offset_k_fixed"(#loc66))
#loc255 = loc("offset_k_fixed"(#loc67))
#loc256 = loc("offset_k_fixed"(#loc68))
#loc257 = loc("offset_k_fixed"(#loc69))
#loc258 = loc("offset_k_fixed"(#loc70))
#loc259 = loc("offset_k_fixed"(#loc71))
#loc260 = loc("offset_k_fixed"(#loc72))
#loc261 = loc("offset_k_fixed"(#loc73))
#loc262 = loc("context_kv_idx_next"(#loc74))
#loc263 = loc("k_next"(#loc75))
#loc264 = loc("k_next"(#loc76))
#loc265 = loc("k_next"(#loc77))
#loc266 = loc("k_next"(#loc78))
#loc267 = loc("k_scale_f_next"(#loc79))
#loc268 = loc("k_scale_f_next"(#loc80))
#loc269 = loc("k_scale_f_next"(#loc81))
#loc270 = loc("k_scale_f_next"(#loc82))
#loc271 = loc("k_scale_f_next"(#loc83))
#loc272 = loc("mfma_q"(#loc84))
#loc273 = loc("zero"(#loc85))
#loc274 = loc("context_kv_idx_next"(#loc89))
#loc275 = loc("context_kv_idx_next"(#loc91))
#loc276 = loc("context_kv_idx_next"(#loc92))
#loc277 = loc("context_kv_idx_next"(#loc93))
#loc278 = loc("context_kv_idx_next"(#loc94))
#loc279 = loc("context_kv_idx_next"(#loc95))
#loc280 = loc("context_kv_idx_next"(#loc96))
#loc281 = loc("context_kv_idx_next"(#loc97))
#loc282 = loc("context_kv_idx_next"(#loc98))
#loc283 = loc("mfma_k"(#loc100))
#loc284 = loc("o"(#loc101))
#loc285 = loc("k_next"(#loc102))
#loc286 = loc("k_next"(#loc103))
#loc287 = loc("k_next"(#loc104))
#loc288 = loc("k_next"(#loc105))
#loc289 = loc("k_scale_f"(#loc107))
#loc290 = loc("o"(#loc108))
#loc291 = loc("o"(#loc109))
#loc292 = loc("o"(#loc110))
#loc293 = loc("k_scale_f_next"(#loc112))
#loc294 = loc("k_scale_f_next"(#loc113))
#loc295 = loc("k_scale_f_next"(#loc114))
#loc296 = loc("k_scale_f_next"(#loc115))
#loc297 = loc("k_scale_f_next"(#loc116))
#loc298 = loc("o"(#loc117))
#loc299 = loc("o"(#loc118))
#loc300 = loc("mask"(#loc119))
#loc301 = loc("mask"(#loc120))
#loc302 = loc("mask"(#loc121))
#loc303 = loc("mask"(#loc122))
#loc304 = loc("o"(#loc123))
#loc305 = loc("o"(#loc124))
#loc306 = loc("logits"(#loc125))
#loc307 = loc("context_idx"(#loc137))
#loc308 = loc("context_idx"(#loc138))
#loc309 = loc("mfma_k"(#loc139))
#loc310 = loc("o"(#loc140))
#loc311 = loc("k_scale_f"(#loc141))
#loc312 = loc("o"(#loc142))
#loc313 = loc("o"(#loc143))
#loc314 = loc("o"(#loc144))
#loc315 = loc("o"(#loc145))
#loc316 = loc("o"(#loc146))
#loc317 = loc("mask"(#loc147))
#loc318 = loc("mask"(#loc148))
#loc319 = loc("mask"(#loc149))
#loc320 = loc("mask"(#loc150))
#loc321 = loc("o"(#loc151))
#loc322 = loc("o"(#loc152))
#loc323 = loc("logits"(#loc153))
#loc328 = loc("k_next"(#loc274))
#loc329 = loc("k_scale_f_next"(#loc328))
