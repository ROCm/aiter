; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external addrspace(3) global [0 x i8], align 16

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_gemm_afp4_wfp4_kernel(ptr addrspace(1) inreg readonly captures(none) %0, ptr addrspace(1) inreg readonly captures(none) %1, ptr addrspace(1) inreg writeonly captures(none) %2, ptr addrspace(1) inreg readonly captures(none) %3, ptr addrspace(1) inreg readonly captures(none) %4, i32 inreg %5, i32 inreg %6, ptr addrspace(1) inreg readnone captures(none) %7) local_unnamed_addr #0 !dbg !4 {
  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %10 = add i32 %6, 127, !dbg !8
  %11 = sdiv i32 %10, 128, !dbg !12
  %.frozen = freeze i32 %11, !dbg !13
  %12 = sdiv i32 %9, %.frozen, !dbg !13
  %13 = mul i32 %12, %.frozen, !dbg !17
  %.decomposed = sub i32 %9, %13, !dbg !17
  %14 = shl i32 %12, 7, !dbg !18
  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !19
  %16 = and i32 %15, 63, !dbg !19
  %.lobit18 = lshr i32 %15, 4, !dbg !19
  %17 = and i32 %.lobit18, 3, !dbg !19
  %18 = and i32 %.lobit18, 15, !dbg !19
  %19 = and i32 %15, 256, !dbg !19
  %20 = lshr exact i32 %19, 4, !dbg !19
  %21 = or disjoint i32 %18, %20, !dbg !19
  %22 = or disjoint i32 %21, 32, !dbg !19
  %23 = or disjoint i32 %21, 64, !dbg !19
  %24 = or disjoint i32 %21, 96, !dbg !19
  %25 = lshr i32 %15, 2, !dbg !19
  %26 = and i32 %25, 16, !dbg !19
  %27 = and i32 %25, 32, !dbg !19
  %28 = and i32 %25, 127, !dbg !19
  %29 = or disjoint i32 %14, %21, !dbg !20
  %30 = or disjoint i32 %14, %22, !dbg !20
  %31 = or disjoint i32 %14, %23, !dbg !20
  %32 = or disjoint i32 %14, %24, !dbg !20
  %33 = or disjoint i32 %14, %28, !dbg !20
  %34 = srem i32 %29, %5, !dbg !21
  %35 = srem i32 %30, %5, !dbg !21
  %36 = srem i32 %31, %5, !dbg !21
  %37 = srem i32 %32, %5, !dbg !21
  %38 = srem i32 %33, %5, !dbg !21
  %39 = shl nsw i32 %.decomposed, 7, !dbg !22
  %40 = or disjoint i32 %39, %21, !dbg !23
  %41 = or disjoint i32 %39, %22, !dbg !23
  %42 = or disjoint i32 %39, %23, !dbg !23
  %43 = or disjoint i32 %39, %24, !dbg !23
  %44 = or disjoint i32 %39, %28, !dbg !23
  %45 = srem i32 %40, %6, !dbg !24
  %46 = srem i32 %41, %6, !dbg !24
  %47 = srem i32 %42, %6, !dbg !24
  %48 = srem i32 %43, %6, !dbg !24
  %49 = srem i32 %44, %6, !dbg !24
  %50 = shl i32 %15, 4, !dbg !25
  %51 = and i32 %50, 48, !dbg !25
  %52 = and i32 %50, 64, !dbg !25
  %53 = and i32 %50, 112, !dbg !25
  %54 = and i32 %50, 128, !dbg !25
  %55 = and i32 %50, 240, !dbg !25
  %56 = shl i32 %34, 13, !dbg !26
  %57 = shl i32 %35, 13, !dbg !26
  %58 = shl i32 %36, 13, !dbg !26
  %59 = shl i32 %37, 13, !dbg !26
  %60 = shl i32 %45, 13, !dbg !27
  %61 = shl i32 %46, 13, !dbg !27
  %62 = shl i32 %47, 13, !dbg !27
  %63 = shl i32 %48, 13, !dbg !27
  %64 = or disjoint i32 %60, %55, !dbg !27
  %65 = or disjoint i32 %61, %55, !dbg !27
  %66 = or disjoint i32 %62, %55, !dbg !27
  %67 = or disjoint i32 %63, %55, !dbg !27
  %68 = shl i32 %38, 9, !dbg !28
  %69 = shl i32 %15, 2, !dbg !29
  %70 = and i32 %69, 12, !dbg !29
  %71 = or disjoint i32 %68, %70, !dbg !30
  %72 = shl i32 %49, 9, !dbg !31
  %73 = or disjoint i32 %72, %70, !dbg !32
  %74 = shl nuw nsw i32 %28, 4, !dbg !33
  %75 = or disjoint i32 %74, %70, !dbg !33
  %76 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %75, !dbg !33
  %77 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3, i16 0, i32 2147483646, i32 159744), !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %77, ptr addrspace(3) %76, i32 4, i32 %71, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %78 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 135168), i32 %75, !dbg !37
  %79 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %4, i16 0, i32 2147483646, i32 159744), !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %79, ptr addrspace(3) %78, i32 4, i32 %73, i32 0, i32 0, i32 0), !dbg !37, !alias.scope !34
  %and.ra = and i32 %15, 48, !dbg !38
  %80 = xor i32 %55, %and.ra, !dbg !38
  %and.ra19 = and i32 %15, 192, !dbg !38
  %81 = xor i32 %80, %and.ra19, !dbg !38
  %82 = shl nuw nsw i32 %21, 8, !dbg !38
  %83 = or disjoint i32 %82, 8192, !dbg !38
  %84 = or disjoint i32 %82, 16384, !dbg !38
  %85 = or disjoint i32 %82, 24576, !dbg !38
  %86 = or disjoint i32 %82, %55, !dbg !38
  %87 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %86, !dbg !38
  %88 = or disjoint i32 %83, %55, !dbg !38
  %89 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %88, !dbg !38
  %90 = or disjoint i32 %84, %55, !dbg !38
  %91 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %90, !dbg !38
  %92 = or disjoint i32 %85, %55, !dbg !38
  %93 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %92, !dbg !38
  %94 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %0, i16 0, i32 2147483646, i32 159744), !dbg !38
  %gepdiff = sub nsw i32 %81, %55, !dbg !38
  %.lhs.trunc = trunc nsw i32 %gepdiff to i16, !dbg !38
  %95 = ashr exact i16 %.lhs.trunc, 4, !dbg !38
  %.sext = sext i16 %95 to i32, !dbg !38
  %96 = add nsw i32 %16, %.sext, !dbg !38
  %97 = shl nsw i32 %.sext, 4, !dbg !38
  %98 = add nsw i32 %97, %55, !dbg !26
  %99 = add i32 %98, %56, !dbg !38
  %100 = tail call i64 @llvm.amdgcn.ballot.i64(i1 true), !dbg !38
  %101 = zext nneg i32 %96 to i64, !dbg !38
  %102 = lshr i64 %100, %101, !dbg !38
  %103 = trunc i64 %102 to i1, !dbg !38
  %104 = select i1 %103, i32 %99, i32 -2147483648, !dbg !38
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %94, ptr addrspace(3) %87, i32 16, i32 %104, i32 0, i32 0, i32 0), !dbg !38, !alias.scope !34
  %105 = add i32 %98, %57, !dbg !38
  %106 = select i1 %103, i32 %105, i32 -2147483648, !dbg !38
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %94, ptr addrspace(3) nonnull %89, i32 16, i32 %106, i32 0, i32 0, i32 0), !dbg !38, !alias.scope !34
  %107 = add i32 %98, %58, !dbg !38
  %108 = select i1 %103, i32 %107, i32 -2147483648, !dbg !38
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %94, ptr addrspace(3) nonnull %91, i32 16, i32 %108, i32 0, i32 0, i32 0), !dbg !38, !alias.scope !34
  %109 = add i32 %98, %59, !dbg !38
  %110 = select i1 %103, i32 %109, i32 -2147483648, !dbg !38
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %94, ptr addrspace(3) nonnull %93, i32 16, i32 %110, i32 0, i32 0, i32 0), !dbg !38, !alias.scope !34
  %111 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %86, !dbg !39
  %112 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %88, !dbg !39
  %113 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %90, !dbg !39
  %114 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %92, !dbg !39
  %115 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %1, i16 0, i32 2147483646, i32 159744), !dbg !39
  %116 = add i32 %64, %97, !dbg !39
  %117 = select i1 %103, i32 %116, i32 -2147483648, !dbg !39
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %115, ptr addrspace(3) %111, i32 16, i32 %117, i32 0, i32 0, i32 3), !dbg !39, !alias.scope !34
  %118 = add i32 %65, %97, !dbg !39
  %119 = select i1 %103, i32 %118, i32 -2147483648, !dbg !39
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %115, ptr addrspace(3) nonnull %112, i32 16, i32 %119, i32 0, i32 0, i32 3), !dbg !39, !alias.scope !34
  %120 = add i32 %66, %97, !dbg !39
  %121 = select i1 %103, i32 %120, i32 -2147483648, !dbg !39
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %115, ptr addrspace(3) nonnull %113, i32 16, i32 %121, i32 0, i32 0, i32 3), !dbg !39, !alias.scope !34
  %122 = add i32 %67, %97, !dbg !39
  %123 = select i1 %103, i32 %122, i32 -2147483648, !dbg !39
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %115, ptr addrspace(3) nonnull %114, i32 16, i32 %123, i32 0, i32 0, i32 3), !dbg !39, !alias.scope !34
  %.off = add i32 %15, 255, !dbg !40
  %124 = icmp ult i32 %.off, 511, !dbg !40
  br i1 %124, label %126, label %125, !dbg !41

125:                                              ; preds = %8
  tail call void @llvm.amdgcn.s.barrier(), !dbg !41
  br label %126, !dbg !41

126:                                              ; preds = %125, %8
  %127 = and i32 %15, 15
  %128 = or disjoint i32 %20, %127
  %129 = shl nuw nsw i32 %128, 4
  %130 = or disjoint i32 %17, 4
  %131 = or disjoint i32 %17, 8
  %132 = or disjoint i32 %17, 12
  %133 = or disjoint i32 %128, 32
  %134 = shl nuw nsw i32 %133, 4
  %135 = or disjoint i32 %127, 64
  %136 = or disjoint i32 %135, %20
  %137 = shl nuw nsw i32 %136, 4
  %138 = or disjoint i32 %128, 96
  %139 = shl nuw nsw i32 %138, 4
  %140 = and i32 %25, 48
  %141 = or disjoint i32 %140, %127
  %142 = shl nuw nsw i32 %141, 4
  %143 = or disjoint i32 %135, %26
  %144 = or disjoint i32 %143, %27
  %145 = shl nuw nsw i32 %144, 4
  %146 = shl nuw nsw i32 %128, 8
  %147 = or disjoint i32 %51, 64
  %148 = xor i32 %147, %52
  %149 = or disjoint i32 %148, %54
  %150 = xor i32 %149, %and.ra
  %151 = or disjoint i32 %53, 128
  %152 = or disjoint i32 %54, %and.ra
  %153 = xor i32 %152, %151
  %154 = or disjoint i32 %51, 192
  %and.ra27 = and i32 %50, 192
  %155 = or disjoint i32 %and.ra27, %and.ra
  %156 = xor i32 %155, %154
  %157 = shl nuw nsw i32 %133, 8
  %158 = shl nuw nsw i32 %136, 8
  %159 = shl nuw nsw i32 %138, 8
  %160 = shl nuw nsw i32 %141, 8
  %161 = shl nuw nsw i32 %144, 8
  br label %162, !dbg !42

162:                                              ; preds = %126, %162
  %163 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), %126 ], [ %226, %162 ]
  %164 = phi ptr addrspace(3) [ @global_smem, %126 ], [ %220, %162 ]
  %165 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 135168), %126 ], [ %216, %162 ]
  %166 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), %126 ], [ %213, %162 ]
  %167 = phi i32 [ 0, %126 ], [ %211, %162 ]
  %168 = phi ptr addrspace(1) [ %1, %126 ], [ %206, %162 ]
  %169 = phi ptr addrspace(1) [ %0, %126 ], [ %205, %162 ]
  %170 = phi ptr addrspace(1) [ %4, %126 ], [ %208, %162 ]
  %171 = phi ptr addrspace(1) [ %3, %126 ], [ %207, %162 ]
  %172 = phi float [ 0.000000e+00, %126 ], [ %405, %162 ]
  %173 = phi float [ 0.000000e+00, %126 ], [ %406, %162 ]
  %174 = phi float [ 0.000000e+00, %126 ], [ %407, %162 ]
  %175 = phi float [ 0.000000e+00, %126 ], [ %408, %162 ]
  %176 = phi float [ 0.000000e+00, %126 ], [ %417, %162 ]
  %177 = phi float [ 0.000000e+00, %126 ], [ %418, %162 ]
  %178 = phi float [ 0.000000e+00, %126 ], [ %419, %162 ]
  %179 = phi float [ 0.000000e+00, %126 ], [ %420, %162 ]
  %180 = phi float [ 0.000000e+00, %126 ], [ %429, %162 ]
  %181 = phi float [ 0.000000e+00, %126 ], [ %430, %162 ]
  %182 = phi float [ 0.000000e+00, %126 ], [ %431, %162 ]
  %183 = phi float [ 0.000000e+00, %126 ], [ %432, %162 ]
  %184 = phi float [ 0.000000e+00, %126 ], [ %441, %162 ]
  %185 = phi float [ 0.000000e+00, %126 ], [ %442, %162 ]
  %186 = phi float [ 0.000000e+00, %126 ], [ %443, %162 ]
  %187 = phi float [ 0.000000e+00, %126 ], [ %444, %162 ]
  %188 = phi float [ 0.000000e+00, %126 ], [ %453, %162 ]
  %189 = phi float [ 0.000000e+00, %126 ], [ %454, %162 ]
  %190 = phi float [ 0.000000e+00, %126 ], [ %455, %162 ]
  %191 = phi float [ 0.000000e+00, %126 ], [ %456, %162 ]
  %192 = phi float [ 0.000000e+00, %126 ], [ %465, %162 ]
  %193 = phi float [ 0.000000e+00, %126 ], [ %466, %162 ]
  %194 = phi float [ 0.000000e+00, %126 ], [ %467, %162 ]
  %195 = phi float [ 0.000000e+00, %126 ], [ %468, %162 ]
  %196 = phi float [ 0.000000e+00, %126 ], [ %477, %162 ]
  %197 = phi float [ 0.000000e+00, %126 ], [ %478, %162 ]
  %198 = phi float [ 0.000000e+00, %126 ], [ %479, %162 ]
  %199 = phi float [ 0.000000e+00, %126 ], [ %480, %162 ]
  %200 = phi float [ 0.000000e+00, %126 ], [ %489, %162 ]
  %201 = phi float [ 0.000000e+00, %126 ], [ %490, %162 ]
  %202 = phi float [ 0.000000e+00, %126 ], [ %491, %162 ]
  %203 = phi float [ 0.000000e+00, %126 ], [ %492, %162 ]
  %204 = phi i32 [ 0, %126 ], [ %493, %162 ]
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49168), !dbg !33
  fence syncscope("workgroup") release, !dbg !33
  tail call void @llvm.amdgcn.s.barrier(), !dbg !33
  fence syncscope("workgroup") acquire, !dbg !33
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !43
  %205 = getelementptr i8, ptr addrspace(1) %169, i64 256, !dbg !44
  %206 = getelementptr i8, ptr addrspace(1) %168, i64 256, !dbg !45
  %207 = getelementptr i8, ptr addrspace(1) %171, i64 16, !dbg !46
  %208 = getelementptr i8, ptr addrspace(1) %170, i64 16, !dbg !47
  %209 = add i32 %167, 1, !dbg !42
  %210 = icmp slt i32 %209, 2, !dbg !42
  %211 = select i1 %210, i32 %209, i32 0, !dbg !42
  %212 = shl i32 %211, 11, !dbg !33
  %213 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %212, !dbg !33
  %214 = getelementptr inbounds nuw i8, ptr addrspace(3) %213, i32 %75, !dbg !33
  %215 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %207, i16 0, i32 2147483646, i32 159744), !dbg !33
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %215, ptr addrspace(3) %214, i32 4, i32 %71, i32 0, i32 0, i32 0), !dbg !33, !alias.scope !34
  %216 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 135168), i32 %212, !dbg !37
  %217 = getelementptr inbounds nuw i8, ptr addrspace(3) %216, i32 %75, !dbg !37
  %218 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %208, i16 0, i32 2147483646, i32 159744), !dbg !37
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %218, ptr addrspace(3) %217, i32 4, i32 %73, i32 0, i32 0, i32 0), !dbg !37, !alias.scope !34
  %219 = shl i32 %211, 15, !dbg !38
  %220 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %219, !dbg !38
  %221 = getelementptr inbounds nuw i8, ptr addrspace(3) %220, i32 %86, !dbg !38
  %222 = getelementptr inbounds nuw i8, ptr addrspace(3) %220, i32 %88, !dbg !38
  %223 = getelementptr inbounds nuw i8, ptr addrspace(3) %220, i32 %90, !dbg !38
  %224 = getelementptr inbounds nuw i8, ptr addrspace(3) %220, i32 %92, !dbg !38
  %225 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %205, i16 0, i32 2147483646, i32 159744), !dbg !38
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %225, ptr addrspace(3) %221, i32 16, i32 %99, i32 0, i32 0, i32 0), !dbg !38, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %225, ptr addrspace(3) nonnull %222, i32 16, i32 %105, i32 0, i32 0, i32 0), !dbg !38, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %225, ptr addrspace(3) nonnull %223, i32 16, i32 %107, i32 0, i32 0, i32 0), !dbg !38, !alias.scope !34
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %225, ptr addrspace(3) nonnull %224, i32 16, i32 %109, i32 0, i32 0, i32 0), !dbg !38, !alias.scope !34
  %226 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %219, !dbg !39
  %227 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %81, !dbg !39
  %228 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 %82, !dbg !39
  %229 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 %83, !dbg !39
  %230 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 %84, !dbg !39
  %231 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 %85, !dbg !39
  %232 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %86, !dbg !39
  %233 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %88, !dbg !39
  %234 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %90, !dbg !39
  %235 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %92, !dbg !39
  %236 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %206, i16 0, i32 2147483646, i32 159744), !dbg !39
  %237 = ptrtoint ptr addrspace(3) %232 to i32, !dbg !39
  %238 = ptrtoint ptr addrspace(3) %228 to i32, !dbg !39
  %239 = sub i32 %238, %237, !dbg !39
  %240 = sdiv i32 %239, 16, !dbg !39
  %241 = shl nsw i32 %240, 4, !dbg !39
  %242 = add i32 %241, %64, !dbg !39
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %236, ptr addrspace(3) %232, i32 16, i32 %242, i32 0, i32 0, i32 3), !dbg !39, !alias.scope !34
  %243 = ptrtoint ptr addrspace(3) %233 to i32, !dbg !39
  %244 = ptrtoint ptr addrspace(3) %229 to i32, !dbg !39
  %245 = sub i32 %244, %243, !dbg !39
  %246 = sdiv i32 %245, 16, !dbg !39
  %247 = shl nsw i32 %246, 4, !dbg !39
  %248 = add i32 %247, %65, !dbg !39
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %236, ptr addrspace(3) nonnull %233, i32 16, i32 %248, i32 0, i32 0, i32 3), !dbg !39, !alias.scope !34
  %249 = ptrtoint ptr addrspace(3) %234 to i32, !dbg !39
  %250 = ptrtoint ptr addrspace(3) %230 to i32, !dbg !39
  %251 = sub i32 %250, %249, !dbg !39
  %252 = sdiv i32 %251, 16, !dbg !39
  %253 = shl nsw i32 %252, 4, !dbg !39
  %254 = add i32 %253, %66, !dbg !39
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %236, ptr addrspace(3) nonnull %234, i32 16, i32 %254, i32 0, i32 0, i32 3), !dbg !39, !alias.scope !34
  %255 = ptrtoint ptr addrspace(3) %235 to i32, !dbg !39
  %256 = ptrtoint ptr addrspace(3) %231 to i32, !dbg !39
  %257 = sub i32 %256, %255, !dbg !39
  %258 = sdiv i32 %257, 16, !dbg !39
  %259 = shl nsw i32 %258, 4, !dbg !39
  %260 = add i32 %259, %67, !dbg !39
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %236, ptr addrspace(3) nonnull %235, i32 16, i32 %260, i32 0, i32 0, i32 3), !dbg !39, !alias.scope !34
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !49
  %261 = getelementptr inbounds nuw i8, ptr addrspace(3) %166, i32 %17, !dbg !33
  %262 = getelementptr inbounds nuw i8, ptr addrspace(3) %261, i32 %129, !dbg !33
  %263 = load i8, ptr addrspace(3) %262, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %264 = getelementptr inbounds nuw i8, ptr addrspace(3) %166, i32 %130, !dbg !33
  %265 = getelementptr inbounds nuw i8, ptr addrspace(3) %264, i32 %129, !dbg !33
  %266 = load i8, ptr addrspace(3) %265, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %267 = getelementptr inbounds nuw i8, ptr addrspace(3) %166, i32 %131, !dbg !33
  %268 = getelementptr inbounds nuw i8, ptr addrspace(3) %267, i32 %129, !dbg !33
  %269 = load i8, ptr addrspace(3) %268, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %270 = getelementptr inbounds nuw i8, ptr addrspace(3) %166, i32 %132, !dbg !33
  %271 = getelementptr inbounds nuw i8, ptr addrspace(3) %270, i32 %129, !dbg !33
  %272 = load i8, ptr addrspace(3) %271, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %273 = getelementptr inbounds nuw i8, ptr addrspace(3) %261, i32 %134, !dbg !33
  %274 = load i8, ptr addrspace(3) %273, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %275 = getelementptr inbounds nuw i8, ptr addrspace(3) %264, i32 %134, !dbg !33
  %276 = load i8, ptr addrspace(3) %275, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %277 = getelementptr inbounds nuw i8, ptr addrspace(3) %267, i32 %134, !dbg !33
  %278 = load i8, ptr addrspace(3) %277, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %279 = getelementptr inbounds nuw i8, ptr addrspace(3) %270, i32 %134, !dbg !33
  %280 = load i8, ptr addrspace(3) %279, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %281 = getelementptr inbounds nuw i8, ptr addrspace(3) %261, i32 %137, !dbg !33
  %282 = load i8, ptr addrspace(3) %281, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %283 = getelementptr inbounds nuw i8, ptr addrspace(3) %264, i32 %137, !dbg !33
  %284 = load i8, ptr addrspace(3) %283, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %285 = getelementptr inbounds nuw i8, ptr addrspace(3) %267, i32 %137, !dbg !33
  %286 = load i8, ptr addrspace(3) %285, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %287 = getelementptr inbounds nuw i8, ptr addrspace(3) %270, i32 %137, !dbg !33
  %288 = load i8, ptr addrspace(3) %287, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %289 = getelementptr inbounds nuw i8, ptr addrspace(3) %261, i32 %139, !dbg !33
  %290 = load i8, ptr addrspace(3) %289, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %291 = getelementptr inbounds nuw i8, ptr addrspace(3) %264, i32 %139, !dbg !33
  %292 = load i8, ptr addrspace(3) %291, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %293 = getelementptr inbounds nuw i8, ptr addrspace(3) %267, i32 %139, !dbg !33
  %294 = load i8, ptr addrspace(3) %293, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %295 = getelementptr inbounds nuw i8, ptr addrspace(3) %270, i32 %139, !dbg !33
  %296 = load i8, ptr addrspace(3) %295, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %297 = getelementptr inbounds nuw i8, ptr addrspace(3) %165, i32 %17, !dbg !37
  %298 = getelementptr inbounds nuw i8, ptr addrspace(3) %297, i32 %142, !dbg !37
  %299 = load i8, ptr addrspace(3) %298, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %300 = getelementptr inbounds nuw i8, ptr addrspace(3) %165, i32 %130, !dbg !37
  %301 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 %142, !dbg !37
  %302 = load i8, ptr addrspace(3) %301, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %303 = getelementptr inbounds nuw i8, ptr addrspace(3) %165, i32 %131, !dbg !37
  %304 = getelementptr inbounds nuw i8, ptr addrspace(3) %303, i32 %142, !dbg !37
  %305 = load i8, ptr addrspace(3) %304, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %306 = getelementptr inbounds nuw i8, ptr addrspace(3) %165, i32 %132, !dbg !37
  %307 = getelementptr inbounds nuw i8, ptr addrspace(3) %306, i32 %142, !dbg !37
  %308 = load i8, ptr addrspace(3) %307, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %309 = getelementptr inbounds nuw i8, ptr addrspace(3) %297, i32 %145, !dbg !37
  %310 = load i8, ptr addrspace(3) %309, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %311 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 %145, !dbg !37
  %312 = load i8, ptr addrspace(3) %311, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %313 = getelementptr inbounds nuw i8, ptr addrspace(3) %303, i32 %145, !dbg !37
  %314 = load i8, ptr addrspace(3) %313, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %315 = getelementptr inbounds nuw i8, ptr addrspace(3) %306, i32 %145, !dbg !37
  %316 = load i8, ptr addrspace(3) %315, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %317 = getelementptr inbounds nuw i8, ptr addrspace(3) %164, i32 %80, !dbg !38
  %318 = getelementptr inbounds nuw i8, ptr addrspace(3) %317, i32 %146, !dbg !38
  %319 = load <4 x i32>, ptr addrspace(3) %318, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %320 = getelementptr inbounds nuw i8, ptr addrspace(3) %164, i32 %150, !dbg !38
  %321 = getelementptr inbounds nuw i8, ptr addrspace(3) %320, i32 %146, !dbg !38
  %322 = load <4 x i32>, ptr addrspace(3) %321, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %323 = getelementptr inbounds nuw i8, ptr addrspace(3) %164, i32 %153, !dbg !38
  %324 = getelementptr inbounds nuw i8, ptr addrspace(3) %323, i32 %146, !dbg !38
  %325 = load <4 x i32>, ptr addrspace(3) %324, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %326 = getelementptr inbounds nuw i8, ptr addrspace(3) %164, i32 %156, !dbg !38
  %327 = getelementptr inbounds nuw i8, ptr addrspace(3) %326, i32 %146, !dbg !38
  %328 = load <4 x i32>, ptr addrspace(3) %327, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %329 = getelementptr inbounds nuw i8, ptr addrspace(3) %317, i32 %157, !dbg !38
  %330 = load <4 x i32>, ptr addrspace(3) %329, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %331 = getelementptr inbounds nuw i8, ptr addrspace(3) %320, i32 %157, !dbg !38
  %332 = load <4 x i32>, ptr addrspace(3) %331, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %333 = getelementptr inbounds nuw i8, ptr addrspace(3) %323, i32 %157, !dbg !38
  %334 = load <4 x i32>, ptr addrspace(3) %333, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %335 = getelementptr inbounds nuw i8, ptr addrspace(3) %326, i32 %157, !dbg !38
  %336 = load <4 x i32>, ptr addrspace(3) %335, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %337 = getelementptr inbounds nuw i8, ptr addrspace(3) %317, i32 %158, !dbg !38
  %338 = load <4 x i32>, ptr addrspace(3) %337, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %339 = getelementptr inbounds nuw i8, ptr addrspace(3) %320, i32 %158, !dbg !38
  %340 = load <4 x i32>, ptr addrspace(3) %339, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %341 = getelementptr inbounds nuw i8, ptr addrspace(3) %323, i32 %158, !dbg !38
  %342 = load <4 x i32>, ptr addrspace(3) %341, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %343 = getelementptr inbounds nuw i8, ptr addrspace(3) %326, i32 %158, !dbg !38
  %344 = load <4 x i32>, ptr addrspace(3) %343, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %345 = getelementptr inbounds nuw i8, ptr addrspace(3) %317, i32 %159, !dbg !38
  %346 = load <4 x i32>, ptr addrspace(3) %345, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %347 = getelementptr inbounds nuw i8, ptr addrspace(3) %320, i32 %159, !dbg !38
  %348 = load <4 x i32>, ptr addrspace(3) %347, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %349 = getelementptr inbounds nuw i8, ptr addrspace(3) %323, i32 %159, !dbg !38
  %350 = load <4 x i32>, ptr addrspace(3) %349, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %351 = getelementptr inbounds nuw i8, ptr addrspace(3) %326, i32 %159, !dbg !38
  %352 = load <4 x i32>, ptr addrspace(3) %351, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %353 = getelementptr inbounds nuw i8, ptr addrspace(3) %163, i32 %80, !dbg !39
  %354 = getelementptr inbounds nuw i8, ptr addrspace(3) %353, i32 %160, !dbg !39
  %355 = load <4 x i32>, ptr addrspace(3) %354, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %356 = getelementptr inbounds nuw i8, ptr addrspace(3) %163, i32 %150, !dbg !39
  %357 = getelementptr inbounds nuw i8, ptr addrspace(3) %356, i32 %160, !dbg !39
  %358 = load <4 x i32>, ptr addrspace(3) %357, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %359 = getelementptr inbounds nuw i8, ptr addrspace(3) %163, i32 %153, !dbg !39
  %360 = getelementptr inbounds nuw i8, ptr addrspace(3) %359, i32 %160, !dbg !39
  %361 = load <4 x i32>, ptr addrspace(3) %360, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %362 = getelementptr inbounds nuw i8, ptr addrspace(3) %163, i32 %156, !dbg !39
  %363 = getelementptr inbounds nuw i8, ptr addrspace(3) %362, i32 %160, !dbg !39
  %364 = load <4 x i32>, ptr addrspace(3) %363, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %365 = getelementptr inbounds nuw i8, ptr addrspace(3) %353, i32 %161, !dbg !39
  %366 = load <4 x i32>, ptr addrspace(3) %365, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %367 = getelementptr inbounds nuw i8, ptr addrspace(3) %356, i32 %161, !dbg !39
  %368 = load <4 x i32>, ptr addrspace(3) %367, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %369 = getelementptr inbounds nuw i8, ptr addrspace(3) %359, i32 %161, !dbg !39
  %370 = load <4 x i32>, ptr addrspace(3) %369, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %371 = getelementptr inbounds nuw i8, ptr addrspace(3) %362, i32 %161, !dbg !39
  %372 = load <4 x i32>, ptr addrspace(3) %371, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %373 = zext i8 %263 to i32, !dbg !52
  %374 = zext i8 %266 to i32, !dbg !52
  %375 = zext i8 %269 to i32, !dbg !52
  %376 = zext i8 %272 to i32, !dbg !52
  %377 = zext i8 %274 to i32, !dbg !52
  %378 = zext i8 %276 to i32, !dbg !52
  %379 = zext i8 %278 to i32, !dbg !52
  %380 = zext i8 %280 to i32, !dbg !52
  %381 = zext i8 %282 to i32, !dbg !52
  %382 = zext i8 %284 to i32, !dbg !52
  %383 = zext i8 %286 to i32, !dbg !52
  %384 = zext i8 %288 to i32, !dbg !52
  %385 = zext i8 %290 to i32, !dbg !52
  %386 = zext i8 %292 to i32, !dbg !52
  %387 = zext i8 %294 to i32, !dbg !52
  %388 = zext i8 %296 to i32, !dbg !52
  %389 = zext i8 %299 to i32, !dbg !52
  %390 = zext i8 %302 to i32, !dbg !52
  %391 = zext i8 %305 to i32, !dbg !52
  %392 = zext i8 %308 to i32, !dbg !52
  %393 = zext i8 %310 to i32, !dbg !52
  %394 = zext i8 %312 to i32, !dbg !52
  %395 = zext i8 %314 to i32, !dbg !52
  %396 = zext i8 %316 to i32, !dbg !52
  %397 = insertelement <4 x float> poison, float %172, i64 0, !dbg !52
  %398 = insertelement <4 x float> %397, float %173, i64 1, !dbg !52
  %399 = insertelement <4 x float> %398, float %174, i64 2, !dbg !52
  %400 = insertelement <4 x float> %399, float %175, i64 3, !dbg !52
  %401 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %355, <4 x i32> %319, <4 x float> %400, i32 4, i32 4, i32 0, i32 %389, i32 0, i32 %373), !dbg !52
  %402 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %358, <4 x i32> %322, <4 x float> %401, i32 4, i32 4, i32 0, i32 %390, i32 0, i32 %374), !dbg !52
  %403 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %361, <4 x i32> %325, <4 x float> %402, i32 4, i32 4, i32 0, i32 %391, i32 0, i32 %375), !dbg !52
  %404 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %364, <4 x i32> %328, <4 x float> %403, i32 4, i32 4, i32 0, i32 %392, i32 0, i32 %376), !dbg !52
  %405 = extractelement <4 x float> %404, i64 0, !dbg !52
  %406 = extractelement <4 x float> %404, i64 1, !dbg !52
  %407 = extractelement <4 x float> %404, i64 2, !dbg !52
  %408 = extractelement <4 x float> %404, i64 3, !dbg !52
  %409 = insertelement <4 x float> poison, float %176, i64 0, !dbg !52
  %410 = insertelement <4 x float> %409, float %177, i64 1, !dbg !52
  %411 = insertelement <4 x float> %410, float %178, i64 2, !dbg !52
  %412 = insertelement <4 x float> %411, float %179, i64 3, !dbg !52
  %413 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %366, <4 x i32> %319, <4 x float> %412, i32 4, i32 4, i32 0, i32 %393, i32 0, i32 %373), !dbg !52
  %414 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %368, <4 x i32> %322, <4 x float> %413, i32 4, i32 4, i32 0, i32 %394, i32 0, i32 %374), !dbg !52
  %415 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %370, <4 x i32> %325, <4 x float> %414, i32 4, i32 4, i32 0, i32 %395, i32 0, i32 %375), !dbg !52
  %416 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %372, <4 x i32> %328, <4 x float> %415, i32 4, i32 4, i32 0, i32 %396, i32 0, i32 %376), !dbg !52
  %417 = extractelement <4 x float> %416, i64 0, !dbg !52
  %418 = extractelement <4 x float> %416, i64 1, !dbg !52
  %419 = extractelement <4 x float> %416, i64 2, !dbg !52
  %420 = extractelement <4 x float> %416, i64 3, !dbg !52
  %421 = insertelement <4 x float> poison, float %180, i64 0, !dbg !52
  %422 = insertelement <4 x float> %421, float %181, i64 1, !dbg !52
  %423 = insertelement <4 x float> %422, float %182, i64 2, !dbg !52
  %424 = insertelement <4 x float> %423, float %183, i64 3, !dbg !52
  %425 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %355, <4 x i32> %330, <4 x float> %424, i32 4, i32 4, i32 0, i32 %389, i32 0, i32 %377), !dbg !52
  %426 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %358, <4 x i32> %332, <4 x float> %425, i32 4, i32 4, i32 0, i32 %390, i32 0, i32 %378), !dbg !52
  %427 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %361, <4 x i32> %334, <4 x float> %426, i32 4, i32 4, i32 0, i32 %391, i32 0, i32 %379), !dbg !52
  %428 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %364, <4 x i32> %336, <4 x float> %427, i32 4, i32 4, i32 0, i32 %392, i32 0, i32 %380), !dbg !52
  %429 = extractelement <4 x float> %428, i64 0, !dbg !52
  %430 = extractelement <4 x float> %428, i64 1, !dbg !52
  %431 = extractelement <4 x float> %428, i64 2, !dbg !52
  %432 = extractelement <4 x float> %428, i64 3, !dbg !52
  %433 = insertelement <4 x float> poison, float %184, i64 0, !dbg !52
  %434 = insertelement <4 x float> %433, float %185, i64 1, !dbg !52
  %435 = insertelement <4 x float> %434, float %186, i64 2, !dbg !52
  %436 = insertelement <4 x float> %435, float %187, i64 3, !dbg !52
  %437 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %366, <4 x i32> %330, <4 x float> %436, i32 4, i32 4, i32 0, i32 %393, i32 0, i32 %377), !dbg !52
  %438 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %368, <4 x i32> %332, <4 x float> %437, i32 4, i32 4, i32 0, i32 %394, i32 0, i32 %378), !dbg !52
  %439 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %370, <4 x i32> %334, <4 x float> %438, i32 4, i32 4, i32 0, i32 %395, i32 0, i32 %379), !dbg !52
  %440 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %372, <4 x i32> %336, <4 x float> %439, i32 4, i32 4, i32 0, i32 %396, i32 0, i32 %380), !dbg !52
  %441 = extractelement <4 x float> %440, i64 0, !dbg !52
  %442 = extractelement <4 x float> %440, i64 1, !dbg !52
  %443 = extractelement <4 x float> %440, i64 2, !dbg !52
  %444 = extractelement <4 x float> %440, i64 3, !dbg !52
  %445 = insertelement <4 x float> poison, float %188, i64 0, !dbg !52
  %446 = insertelement <4 x float> %445, float %189, i64 1, !dbg !52
  %447 = insertelement <4 x float> %446, float %190, i64 2, !dbg !52
  %448 = insertelement <4 x float> %447, float %191, i64 3, !dbg !52
  %449 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %355, <4 x i32> %338, <4 x float> %448, i32 4, i32 4, i32 0, i32 %389, i32 0, i32 %381), !dbg !52
  %450 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %358, <4 x i32> %340, <4 x float> %449, i32 4, i32 4, i32 0, i32 %390, i32 0, i32 %382), !dbg !52
  %451 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %361, <4 x i32> %342, <4 x float> %450, i32 4, i32 4, i32 0, i32 %391, i32 0, i32 %383), !dbg !52
  %452 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %364, <4 x i32> %344, <4 x float> %451, i32 4, i32 4, i32 0, i32 %392, i32 0, i32 %384), !dbg !52
  %453 = extractelement <4 x float> %452, i64 0, !dbg !52
  %454 = extractelement <4 x float> %452, i64 1, !dbg !52
  %455 = extractelement <4 x float> %452, i64 2, !dbg !52
  %456 = extractelement <4 x float> %452, i64 3, !dbg !52
  %457 = insertelement <4 x float> poison, float %192, i64 0, !dbg !52
  %458 = insertelement <4 x float> %457, float %193, i64 1, !dbg !52
  %459 = insertelement <4 x float> %458, float %194, i64 2, !dbg !52
  %460 = insertelement <4 x float> %459, float %195, i64 3, !dbg !52
  %461 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %366, <4 x i32> %338, <4 x float> %460, i32 4, i32 4, i32 0, i32 %393, i32 0, i32 %381), !dbg !52
  %462 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %368, <4 x i32> %340, <4 x float> %461, i32 4, i32 4, i32 0, i32 %394, i32 0, i32 %382), !dbg !52
  %463 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %370, <4 x i32> %342, <4 x float> %462, i32 4, i32 4, i32 0, i32 %395, i32 0, i32 %383), !dbg !52
  %464 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %372, <4 x i32> %344, <4 x float> %463, i32 4, i32 4, i32 0, i32 %396, i32 0, i32 %384), !dbg !52
  %465 = extractelement <4 x float> %464, i64 0, !dbg !52
  %466 = extractelement <4 x float> %464, i64 1, !dbg !52
  %467 = extractelement <4 x float> %464, i64 2, !dbg !52
  %468 = extractelement <4 x float> %464, i64 3, !dbg !52
  %469 = insertelement <4 x float> poison, float %196, i64 0, !dbg !52
  %470 = insertelement <4 x float> %469, float %197, i64 1, !dbg !52
  %471 = insertelement <4 x float> %470, float %198, i64 2, !dbg !52
  %472 = insertelement <4 x float> %471, float %199, i64 3, !dbg !52
  %473 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %355, <4 x i32> %346, <4 x float> %472, i32 4, i32 4, i32 0, i32 %389, i32 0, i32 %385), !dbg !52
  %474 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %358, <4 x i32> %348, <4 x float> %473, i32 4, i32 4, i32 0, i32 %390, i32 0, i32 %386), !dbg !52
  %475 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %361, <4 x i32> %350, <4 x float> %474, i32 4, i32 4, i32 0, i32 %391, i32 0, i32 %387), !dbg !52
  %476 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %364, <4 x i32> %352, <4 x float> %475, i32 4, i32 4, i32 0, i32 %392, i32 0, i32 %388), !dbg !52
  %477 = extractelement <4 x float> %476, i64 0, !dbg !52
  %478 = extractelement <4 x float> %476, i64 1, !dbg !52
  %479 = extractelement <4 x float> %476, i64 2, !dbg !52
  %480 = extractelement <4 x float> %476, i64 3, !dbg !52
  %481 = insertelement <4 x float> poison, float %200, i64 0, !dbg !52
  %482 = insertelement <4 x float> %481, float %201, i64 1, !dbg !52
  %483 = insertelement <4 x float> %482, float %202, i64 2, !dbg !52
  %484 = insertelement <4 x float> %483, float %203, i64 3, !dbg !52
  %485 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %366, <4 x i32> %346, <4 x float> %484, i32 4, i32 4, i32 0, i32 %393, i32 0, i32 %385), !dbg !52
  %486 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %368, <4 x i32> %348, <4 x float> %485, i32 4, i32 4, i32 0, i32 %394, i32 0, i32 %386), !dbg !52
  %487 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %370, <4 x i32> %350, <4 x float> %486, i32 4, i32 4, i32 0, i32 %395, i32 0, i32 %387), !dbg !52
  %488 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %372, <4 x i32> %352, <4 x float> %487, i32 4, i32 4, i32 0, i32 %396, i32 0, i32 %388), !dbg !52
  %489 = extractelement <4 x float> %488, i64 0, !dbg !52
  %490 = extractelement <4 x float> %488, i64 1, !dbg !52
  %491 = extractelement <4 x float> %488, i64 2, !dbg !52
  %492 = extractelement <4 x float> %488, i64 3, !dbg !52
  %493 = add nuw nsw i32 %204, 1, !dbg !42
  %exitcond.not = icmp eq i32 %493, 31, !dbg !42
  br i1 %exitcond.not, label %494, label %162, !dbg !42

494:                                              ; preds = %162
  br i1 %124, label %495, label %496, !dbg !53

495:                                              ; preds = %494
  tail call void @llvm.amdgcn.s.barrier(), !dbg !53
  br label %496, !dbg !53

496:                                              ; preds = %495, %494
  %497 = shl i32 %15, 3, !dbg !19
  %498 = and i32 %497, 120, !dbg !19
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49168), !dbg !33
  fence syncscope("workgroup") release, !dbg !33
  tail call void @llvm.amdgcn.s.barrier(), !dbg !33
  fence syncscope("workgroup") acquire, !dbg !33
  %499 = getelementptr inbounds nuw i8, ptr addrspace(3) %213, i32 %17, !dbg !33
  %500 = getelementptr inbounds nuw i8, ptr addrspace(3) %499, i32 %129, !dbg !33
  %501 = load i8, ptr addrspace(3) %500, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %502 = getelementptr inbounds nuw i8, ptr addrspace(3) %213, i32 %130, !dbg !33
  %503 = getelementptr inbounds nuw i8, ptr addrspace(3) %502, i32 %129, !dbg !33
  %504 = load i8, ptr addrspace(3) %503, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %505 = getelementptr inbounds nuw i8, ptr addrspace(3) %213, i32 %131, !dbg !33
  %506 = getelementptr inbounds nuw i8, ptr addrspace(3) %505, i32 %129, !dbg !33
  %507 = load i8, ptr addrspace(3) %506, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %508 = getelementptr inbounds nuw i8, ptr addrspace(3) %213, i32 %132, !dbg !33
  %509 = getelementptr inbounds nuw i8, ptr addrspace(3) %508, i32 %129, !dbg !33
  %510 = load i8, ptr addrspace(3) %509, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %511 = getelementptr inbounds nuw i8, ptr addrspace(3) %499, i32 %134, !dbg !33
  %512 = load i8, ptr addrspace(3) %511, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %513 = getelementptr inbounds nuw i8, ptr addrspace(3) %502, i32 %134, !dbg !33
  %514 = load i8, ptr addrspace(3) %513, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %515 = getelementptr inbounds nuw i8, ptr addrspace(3) %505, i32 %134, !dbg !33
  %516 = load i8, ptr addrspace(3) %515, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %517 = getelementptr inbounds nuw i8, ptr addrspace(3) %508, i32 %134, !dbg !33
  %518 = load i8, ptr addrspace(3) %517, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %519 = getelementptr inbounds nuw i8, ptr addrspace(3) %499, i32 %137, !dbg !33
  %520 = load i8, ptr addrspace(3) %519, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %521 = getelementptr inbounds nuw i8, ptr addrspace(3) %502, i32 %137, !dbg !33
  %522 = load i8, ptr addrspace(3) %521, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %523 = getelementptr inbounds nuw i8, ptr addrspace(3) %505, i32 %137, !dbg !33
  %524 = load i8, ptr addrspace(3) %523, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %525 = getelementptr inbounds nuw i8, ptr addrspace(3) %508, i32 %137, !dbg !33
  %526 = load i8, ptr addrspace(3) %525, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %527 = getelementptr inbounds nuw i8, ptr addrspace(3) %499, i32 %139, !dbg !33
  %528 = load i8, ptr addrspace(3) %527, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %529 = getelementptr inbounds nuw i8, ptr addrspace(3) %502, i32 %139, !dbg !33
  %530 = load i8, ptr addrspace(3) %529, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %531 = getelementptr inbounds nuw i8, ptr addrspace(3) %505, i32 %139, !dbg !33
  %532 = load i8, ptr addrspace(3) %531, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %533 = getelementptr inbounds nuw i8, ptr addrspace(3) %508, i32 %139, !dbg !33
  %534 = load i8, ptr addrspace(3) %533, align 1, !dbg !33, !alias.scope !50, !noalias !34
  %535 = getelementptr inbounds nuw i8, ptr addrspace(3) %216, i32 %17, !dbg !37
  %536 = getelementptr inbounds nuw i8, ptr addrspace(3) %535, i32 %142, !dbg !37
  %537 = load i8, ptr addrspace(3) %536, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %538 = getelementptr inbounds nuw i8, ptr addrspace(3) %216, i32 %130, !dbg !37
  %539 = getelementptr inbounds nuw i8, ptr addrspace(3) %538, i32 %142, !dbg !37
  %540 = load i8, ptr addrspace(3) %539, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %541 = getelementptr inbounds nuw i8, ptr addrspace(3) %216, i32 %131, !dbg !37
  %542 = getelementptr inbounds nuw i8, ptr addrspace(3) %541, i32 %142, !dbg !37
  %543 = load i8, ptr addrspace(3) %542, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %544 = getelementptr inbounds nuw i8, ptr addrspace(3) %216, i32 %132, !dbg !37
  %545 = getelementptr inbounds nuw i8, ptr addrspace(3) %544, i32 %142, !dbg !37
  %546 = load i8, ptr addrspace(3) %545, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %547 = getelementptr inbounds nuw i8, ptr addrspace(3) %535, i32 %145, !dbg !37
  %548 = load i8, ptr addrspace(3) %547, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %549 = getelementptr inbounds nuw i8, ptr addrspace(3) %538, i32 %145, !dbg !37
  %550 = load i8, ptr addrspace(3) %549, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %551 = getelementptr inbounds nuw i8, ptr addrspace(3) %541, i32 %145, !dbg !37
  %552 = load i8, ptr addrspace(3) %551, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %553 = getelementptr inbounds nuw i8, ptr addrspace(3) %544, i32 %145, !dbg !37
  %554 = load i8, ptr addrspace(3) %553, align 1, !dbg !37, !alias.scope !50, !noalias !34
  %555 = getelementptr inbounds nuw i8, ptr addrspace(3) %220, i32 %80, !dbg !38
  %556 = getelementptr inbounds nuw i8, ptr addrspace(3) %555, i32 %146, !dbg !38
  %557 = load <4 x i32>, ptr addrspace(3) %556, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %558 = getelementptr inbounds nuw i8, ptr addrspace(3) %220, i32 %150, !dbg !38
  %559 = getelementptr inbounds nuw i8, ptr addrspace(3) %558, i32 %146, !dbg !38
  %560 = load <4 x i32>, ptr addrspace(3) %559, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %561 = getelementptr inbounds nuw i8, ptr addrspace(3) %220, i32 %153, !dbg !38
  %562 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %146, !dbg !38
  %563 = load <4 x i32>, ptr addrspace(3) %562, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %564 = getelementptr inbounds nuw i8, ptr addrspace(3) %220, i32 %156, !dbg !38
  %565 = getelementptr inbounds nuw i8, ptr addrspace(3) %564, i32 %146, !dbg !38
  %566 = load <4 x i32>, ptr addrspace(3) %565, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %567 = getelementptr inbounds nuw i8, ptr addrspace(3) %555, i32 %157, !dbg !38
  %568 = load <4 x i32>, ptr addrspace(3) %567, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %569 = getelementptr inbounds nuw i8, ptr addrspace(3) %558, i32 %157, !dbg !38
  %570 = load <4 x i32>, ptr addrspace(3) %569, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %571 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %157, !dbg !38
  %572 = load <4 x i32>, ptr addrspace(3) %571, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %573 = getelementptr inbounds nuw i8, ptr addrspace(3) %564, i32 %157, !dbg !38
  %574 = load <4 x i32>, ptr addrspace(3) %573, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %575 = getelementptr inbounds nuw i8, ptr addrspace(3) %555, i32 %158, !dbg !38
  %576 = load <4 x i32>, ptr addrspace(3) %575, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %577 = getelementptr inbounds nuw i8, ptr addrspace(3) %558, i32 %158, !dbg !38
  %578 = load <4 x i32>, ptr addrspace(3) %577, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %579 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %158, !dbg !38
  %580 = load <4 x i32>, ptr addrspace(3) %579, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %581 = getelementptr inbounds nuw i8, ptr addrspace(3) %564, i32 %158, !dbg !38
  %582 = load <4 x i32>, ptr addrspace(3) %581, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %583 = getelementptr inbounds nuw i8, ptr addrspace(3) %555, i32 %159, !dbg !38
  %584 = load <4 x i32>, ptr addrspace(3) %583, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %585 = getelementptr inbounds nuw i8, ptr addrspace(3) %558, i32 %159, !dbg !38
  %586 = load <4 x i32>, ptr addrspace(3) %585, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %587 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %159, !dbg !38
  %588 = load <4 x i32>, ptr addrspace(3) %587, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %589 = getelementptr inbounds nuw i8, ptr addrspace(3) %564, i32 %159, !dbg !38
  %590 = load <4 x i32>, ptr addrspace(3) %589, align 16, !dbg !38, !alias.scope !50, !noalias !34
  %591 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %80, !dbg !39
  %592 = getelementptr inbounds nuw i8, ptr addrspace(3) %591, i32 %160, !dbg !39
  %593 = load <4 x i32>, ptr addrspace(3) %592, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %594 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %150, !dbg !39
  %595 = getelementptr inbounds nuw i8, ptr addrspace(3) %594, i32 %160, !dbg !39
  %596 = load <4 x i32>, ptr addrspace(3) %595, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %597 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %153, !dbg !39
  %598 = getelementptr inbounds nuw i8, ptr addrspace(3) %597, i32 %160, !dbg !39
  %599 = load <4 x i32>, ptr addrspace(3) %598, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %600 = getelementptr inbounds nuw i8, ptr addrspace(3) %226, i32 %156, !dbg !39
  %601 = getelementptr inbounds nuw i8, ptr addrspace(3) %600, i32 %160, !dbg !39
  %602 = load <4 x i32>, ptr addrspace(3) %601, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %603 = getelementptr inbounds nuw i8, ptr addrspace(3) %591, i32 %161, !dbg !39
  %604 = load <4 x i32>, ptr addrspace(3) %603, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %605 = getelementptr inbounds nuw i8, ptr addrspace(3) %594, i32 %161, !dbg !39
  %606 = load <4 x i32>, ptr addrspace(3) %605, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %607 = getelementptr inbounds nuw i8, ptr addrspace(3) %597, i32 %161, !dbg !39
  %608 = load <4 x i32>, ptr addrspace(3) %607, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %609 = getelementptr inbounds nuw i8, ptr addrspace(3) %600, i32 %161, !dbg !39
  %610 = load <4 x i32>, ptr addrspace(3) %609, align 16, !dbg !39, !alias.scope !50, !noalias !34
  %611 = zext i8 %501 to i32, !dbg !52
  %612 = zext i8 %504 to i32, !dbg !52
  %613 = zext i8 %507 to i32, !dbg !52
  %614 = zext i8 %510 to i32, !dbg !52
  %615 = zext i8 %512 to i32, !dbg !52
  %616 = zext i8 %514 to i32, !dbg !52
  %617 = zext i8 %516 to i32, !dbg !52
  %618 = zext i8 %518 to i32, !dbg !52
  %619 = zext i8 %520 to i32, !dbg !52
  %620 = zext i8 %522 to i32, !dbg !52
  %621 = zext i8 %524 to i32, !dbg !52
  %622 = zext i8 %526 to i32, !dbg !52
  %623 = zext i8 %528 to i32, !dbg !52
  %624 = zext i8 %530 to i32, !dbg !52
  %625 = zext i8 %532 to i32, !dbg !52
  %626 = zext i8 %534 to i32, !dbg !52
  %627 = zext i8 %537 to i32, !dbg !52
  %628 = zext i8 %540 to i32, !dbg !52
  %629 = zext i8 %543 to i32, !dbg !52
  %630 = zext i8 %546 to i32, !dbg !52
  %631 = zext i8 %548 to i32, !dbg !52
  %632 = zext i8 %550 to i32, !dbg !52
  %633 = zext i8 %552 to i32, !dbg !52
  %634 = zext i8 %554 to i32, !dbg !52
  %635 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %593, <4 x i32> %557, <4 x float> %404, i32 4, i32 4, i32 0, i32 %627, i32 0, i32 %611), !dbg !52
  %636 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %596, <4 x i32> %560, <4 x float> %635, i32 4, i32 4, i32 0, i32 %628, i32 0, i32 %612), !dbg !52
  %637 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %599, <4 x i32> %563, <4 x float> %636, i32 4, i32 4, i32 0, i32 %629, i32 0, i32 %613), !dbg !52
  %638 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %602, <4 x i32> %566, <4 x float> %637, i32 4, i32 4, i32 0, i32 %630, i32 0, i32 %614), !dbg !52
  %639 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %604, <4 x i32> %557, <4 x float> %416, i32 4, i32 4, i32 0, i32 %631, i32 0, i32 %611), !dbg !52
  %640 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %606, <4 x i32> %560, <4 x float> %639, i32 4, i32 4, i32 0, i32 %632, i32 0, i32 %612), !dbg !52
  %641 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %608, <4 x i32> %563, <4 x float> %640, i32 4, i32 4, i32 0, i32 %633, i32 0, i32 %613), !dbg !52
  %642 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %610, <4 x i32> %566, <4 x float> %641, i32 4, i32 4, i32 0, i32 %634, i32 0, i32 %614), !dbg !52
  %643 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %593, <4 x i32> %568, <4 x float> %428, i32 4, i32 4, i32 0, i32 %627, i32 0, i32 %615), !dbg !52
  %644 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %596, <4 x i32> %570, <4 x float> %643, i32 4, i32 4, i32 0, i32 %628, i32 0, i32 %616), !dbg !52
  %645 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %599, <4 x i32> %572, <4 x float> %644, i32 4, i32 4, i32 0, i32 %629, i32 0, i32 %617), !dbg !52
  %646 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %602, <4 x i32> %574, <4 x float> %645, i32 4, i32 4, i32 0, i32 %630, i32 0, i32 %618), !dbg !52
  %647 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %604, <4 x i32> %568, <4 x float> %440, i32 4, i32 4, i32 0, i32 %631, i32 0, i32 %615), !dbg !52
  %648 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %606, <4 x i32> %570, <4 x float> %647, i32 4, i32 4, i32 0, i32 %632, i32 0, i32 %616), !dbg !52
  %649 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %608, <4 x i32> %572, <4 x float> %648, i32 4, i32 4, i32 0, i32 %633, i32 0, i32 %617), !dbg !52
  %650 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %610, <4 x i32> %574, <4 x float> %649, i32 4, i32 4, i32 0, i32 %634, i32 0, i32 %618), !dbg !52
  %651 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %593, <4 x i32> %576, <4 x float> %452, i32 4, i32 4, i32 0, i32 %627, i32 0, i32 %619), !dbg !52
  %652 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %596, <4 x i32> %578, <4 x float> %651, i32 4, i32 4, i32 0, i32 %628, i32 0, i32 %620), !dbg !52
  %653 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %599, <4 x i32> %580, <4 x float> %652, i32 4, i32 4, i32 0, i32 %629, i32 0, i32 %621), !dbg !52
  %654 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %602, <4 x i32> %582, <4 x float> %653, i32 4, i32 4, i32 0, i32 %630, i32 0, i32 %622), !dbg !52
  %655 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %604, <4 x i32> %576, <4 x float> %464, i32 4, i32 4, i32 0, i32 %631, i32 0, i32 %619), !dbg !52
  %656 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %606, <4 x i32> %578, <4 x float> %655, i32 4, i32 4, i32 0, i32 %632, i32 0, i32 %620), !dbg !52
  %657 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %608, <4 x i32> %580, <4 x float> %656, i32 4, i32 4, i32 0, i32 %633, i32 0, i32 %621), !dbg !52
  %658 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %610, <4 x i32> %582, <4 x float> %657, i32 4, i32 4, i32 0, i32 %634, i32 0, i32 %622), !dbg !52
  %659 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %593, <4 x i32> %584, <4 x float> %476, i32 4, i32 4, i32 0, i32 %627, i32 0, i32 %623), !dbg !52
  %660 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %596, <4 x i32> %586, <4 x float> %659, i32 4, i32 4, i32 0, i32 %628, i32 0, i32 %624), !dbg !52
  %661 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %599, <4 x i32> %588, <4 x float> %660, i32 4, i32 4, i32 0, i32 %629, i32 0, i32 %625), !dbg !52
  %662 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %602, <4 x i32> %590, <4 x float> %661, i32 4, i32 4, i32 0, i32 %630, i32 0, i32 %626), !dbg !52
  %663 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %604, <4 x i32> %584, <4 x float> %488, i32 4, i32 4, i32 0, i32 %631, i32 0, i32 %623), !dbg !52
  %664 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %606, <4 x i32> %586, <4 x float> %663, i32 4, i32 4, i32 0, i32 %632, i32 0, i32 %624), !dbg !52
  %665 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %608, <4 x i32> %588, <4 x float> %664, i32 4, i32 4, i32 0, i32 %633, i32 0, i32 %625), !dbg !52
  %666 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %610, <4 x i32> %590, <4 x float> %665, i32 4, i32 4, i32 0, i32 %634, i32 0, i32 %626), !dbg !52
  %667 = zext nneg i32 %21 to i64, !dbg !54
  %668 = zext nneg i32 %22 to i64, !dbg !54
  %669 = zext nneg i32 %23 to i64, !dbg !54
  %670 = zext nneg i32 %24 to i64, !dbg !54
  %671 = zext nneg i32 %498 to i64, !dbg !54
  %672 = sext i32 %14 to i64, !dbg !55
  %673 = or disjoint i64 %672, %667, !dbg !55
  %674 = or disjoint i64 %672, %668, !dbg !55
  %675 = or disjoint i64 %672, %669, !dbg !55
  %676 = or disjoint i64 %672, %670, !dbg !55
  %677 = sext i32 %39 to i64, !dbg !56
  %678 = or disjoint i64 %677, %671, !dbg !56
  %679 = mul nuw nsw i32 %21, 106496, !dbg !57
  %680 = mul nuw nsw i32 %22, 106496, !dbg !57
  %681 = mul nuw nsw i32 %23, 106496, !dbg !57
  %682 = mul nuw nsw i32 %24, 106496, !dbg !57
  %.idx = mul nsw i64 %672, 212992, !dbg !57
  %683 = getelementptr i8, ptr addrspace(1) %2, i64 %.idx, !dbg !57
  %684 = getelementptr bfloat, ptr addrspace(1) %683, i64 %677, !dbg !58
  %685 = or disjoint i32 %679, %498, !dbg !58
  %686 = or disjoint i32 %680, %498, !dbg !58
  %687 = or disjoint i32 %681, %498, !dbg !58
  %688 = or disjoint i32 %682, %498, !dbg !58
  %689 = sext i32 %5 to i64, !dbg !59
  %690 = icmp slt i64 %673, %689, !dbg !59
  %691 = icmp slt i64 %674, %689, !dbg !59
  %692 = icmp slt i64 %675, %689, !dbg !59
  %693 = icmp slt i64 %676, %689, !dbg !59
  %694 = sext i32 %6 to i64, !dbg !60
  %695 = icmp slt i64 %678, %694, !dbg !60
  %696 = and i1 %690, %695, !dbg !61
  %697 = and i1 %691, %695, !dbg !61
  %698 = and i1 %692, %695, !dbg !61
  %699 = and i1 %693, %695, !dbg !61
  fence syncscope("workgroup") release, !dbg !62
  tail call void @llvm.amdgcn.s.barrier(), !dbg !62
  fence syncscope("workgroup") acquire, !dbg !62
  %700 = shl i32 %15, 7, !dbg !62
  %701 = and i32 %700, 1920, !dbg !62
  %702 = and i32 %25, 12, !dbg !62
  %703 = or disjoint i32 %701, %702, !dbg !62
  %704 = or disjoint i32 %703, %26, !dbg !62
  %705 = or disjoint i32 %704, %27, !dbg !62
  %706 = shl nuw nsw i32 %19, 3, !dbg !62
  %707 = or disjoint i32 %705, %706, !dbg !62
  %708 = and i32 %497, 2040, !dbg !62
  %709 = or disjoint i32 %708, %706, !dbg !62
  %710 = lshr i32 %707, 4, !dbg !62
  %711 = and i32 %710, 268435448, !dbg !62
  %712 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %711, !dbg !62
  %713 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %712, i32 %707, !dbg !62
  %714 = fptrunc <4 x float> %638 to <4 x bfloat>, !dbg !62
  store <4 x bfloat> %714, ptr addrspace(3) %713, align 8, !dbg !62
  %715 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %712, i32 %707, !dbg !62
  %716 = getelementptr inbounds nuw i8, ptr addrspace(3) %715, i32 128, !dbg !62
  %717 = fptrunc <4 x float> %642 to <4 x bfloat>, !dbg !62
  store <4 x bfloat> %717, ptr addrspace(3) %716, align 8, !dbg !62
  fence syncscope("workgroup") release, !dbg !62
  tail call void @llvm.amdgcn.s.barrier(), !dbg !62
  fence syncscope("workgroup") acquire, !dbg !62
  %718 = lshr i32 %709, 4, !dbg !62
  %719 = and i32 %718, 248, !dbg !62
  %720 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %719, !dbg !62
  %721 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %720, i32 %709, !dbg !62
  %722 = load <4 x i32>, ptr addrspace(3) %721, align 16, !dbg !62
  fence syncscope("workgroup") release, !dbg !62
  tail call void @llvm.amdgcn.s.barrier(), !dbg !62
  fence syncscope("workgroup") acquire, !dbg !62
  %723 = fptrunc <4 x float> %646 to <4 x bfloat>, !dbg !62
  store <4 x bfloat> %723, ptr addrspace(3) %713, align 8, !dbg !62
  %724 = fptrunc <4 x float> %650 to <4 x bfloat>, !dbg !62
  store <4 x bfloat> %724, ptr addrspace(3) %716, align 8, !dbg !62
  fence syncscope("workgroup") release, !dbg !62
  tail call void @llvm.amdgcn.s.barrier(), !dbg !62
  fence syncscope("workgroup") acquire, !dbg !62
  %725 = load <4 x i32>, ptr addrspace(3) %721, align 16, !dbg !62
  fence syncscope("workgroup") release, !dbg !62
  tail call void @llvm.amdgcn.s.barrier(), !dbg !62
  fence syncscope("workgroup") acquire, !dbg !62
  %726 = fptrunc <4 x float> %654 to <4 x bfloat>, !dbg !62
  store <4 x bfloat> %726, ptr addrspace(3) %713, align 8, !dbg !62
  %727 = fptrunc <4 x float> %658 to <4 x bfloat>, !dbg !62
  store <4 x bfloat> %727, ptr addrspace(3) %716, align 8, !dbg !62
  fence syncscope("workgroup") release, !dbg !62
  tail call void @llvm.amdgcn.s.barrier(), !dbg !62
  fence syncscope("workgroup") acquire, !dbg !62
  %728 = load <4 x i32>, ptr addrspace(3) %721, align 16, !dbg !62
  fence syncscope("workgroup") release, !dbg !62
  tail call void @llvm.amdgcn.s.barrier(), !dbg !62
  fence syncscope("workgroup") acquire, !dbg !62
  %729 = fptrunc <4 x float> %662 to <4 x bfloat>, !dbg !62
  store <4 x bfloat> %729, ptr addrspace(3) %713, align 8, !dbg !62
  %730 = fptrunc <4 x float> %666 to <4 x bfloat>, !dbg !62
  store <4 x bfloat> %730, ptr addrspace(3) %716, align 8, !dbg !62
  fence syncscope("workgroup") release, !dbg !62
  tail call void @llvm.amdgcn.s.barrier(), !dbg !62
  fence syncscope("workgroup") acquire, !dbg !62
  %731 = load <4 x i32>, ptr addrspace(3) %721, align 16, !dbg !62
  %732 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %684, i16 0, i32 2147483646, i32 159744), !dbg !62
  %733 = shl nuw nsw i32 %685, 1, !dbg !62
  %734 = select i1 %696, i32 %733, i32 -2147483648, !dbg !62
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %722, ptr addrspace(8) %732, i32 %734, i32 0, i32 0), !dbg !62
  %735 = shl nuw nsw i32 %686, 1, !dbg !62
  %736 = select i1 %697, i32 %735, i32 -2147483648, !dbg !62
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %725, ptr addrspace(8) %732, i32 %736, i32 0, i32 0), !dbg !62
  %737 = shl nuw nsw i32 %687, 1, !dbg !62
  %738 = select i1 %698, i32 %737, i32 -2147483648, !dbg !62
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %728, ptr addrspace(8) %732, i32 %738, i32 0, i32 0), !dbg !62
  %739 = shl nuw nsw i32 %688, 1, !dbg !62
  %740 = select i1 %699, i32 %739, i32 -2147483648, !dbg !62
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %731, ptr addrspace(8) %732, i32 %740, i32 0, i32 0), !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) readnone, i16, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) readonly captures(none), ptr addrspace(3) writeonly captures(none), i32 immarg, i32, i32, i32 immarg, i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i64 @llvm.amdgcn.ballot.i64(i1) #3

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #4

; Function Attrs: mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.waitcnt(i32 immarg) #5

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32>, <4 x i32>, <4 x float>, i32 immarg, i32 immarg, i32 immarg, i32, i32 immarg, i32) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32>, ptr addrspace(8) writeonly captures(none), i32, i32, i32 immarg) #7

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.sched.barrier(i32 immarg) #4

attributes #0 = { nofree norecurse nounwind "amdgpu-agpr-alloc"="0" "amdgpu-flat-work-group-size"="1,512" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-flat-scratch-init" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #4 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn }
attributes #6 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #7 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "gemm_afp4wfp4.py", directory: "/app/aiter/aiter/ops/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"amdhsa_code_object_version", i32 500}
!4 = distinct !DISubprogram(name: "_gemm_afp4_wfp4_kernel", linkageName: "_gemm_afp4_wfp4_kernel", scope: !1, file: !1, line: 14, type: !5, scopeLine: 14, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 61, column: 24, scope: !4)
!8 = !DILocation(line: 40, column: 22, scope: !9, inlinedAt: !11)
!9 = distinct !DILexicalBlockFile(scope: !4, file: !10, discriminator: 0)
!10 = !DIFile(filename: "standard.py", directory: "/app/OAI-triton/python/triton/language")
!11 = !DILocation(line: 63, column: 27, scope: !4)
!12 = !DILocation(line: 40, column: 28, scope: !9, inlinedAt: !11)
!13 = !DILocation(line: 32, column: 23, scope: !14, inlinedAt: !16)
!14 = distinct !DILexicalBlockFile(scope: !4, file: !15, discriminator: 0)
!15 = !DIFile(filename: "pid_preprocessing.py", directory: "/app/aiter/aiter/ops/triton/utils")
!16 = !DILocation(line: 67, column: 44, scope: !4)
!17 = !DILocation(line: 33, column: 22, scope: !14, inlinedAt: !16)
!18 = !DILocation(line: 77, column: 23, scope: !4)
!19 = !DILocation(line: 77, column: 51, scope: !4)
!20 = !DILocation(line: 77, column: 38, scope: !4)
!21 = !DILocation(line: 77, column: 68, scope: !4)
!22 = !DILocation(line: 78, column: 23, scope: !4)
!23 = !DILocation(line: 78, column: 38, scope: !4)
!24 = !DILocation(line: 78, column: 68, scope: !4)
!25 = !DILocation(line: 79, column: 60, scope: !4)
!26 = !DILocation(line: 79, column: 22, scope: !4)
!27 = !DILocation(line: 80, column: 22, scope: !4)
!28 = !DILocation(line: 83, column: 34, scope: !4)
!29 = !DILocation(line: 83, column: 74, scope: !4)
!30 = !DILocation(line: 83, column: 66, scope: !4)
!31 = !DILocation(line: 85, column: 34, scope: !4)
!32 = !DILocation(line: 85, column: 66, scope: !4)
!33 = !DILocation(line: 90, column: 27, scope: !4)
!34 = !{!35}
!35 = !{!"amdgpu.AsyncCopies", !36, !"Scope containing all AsyncCopyGlobalToLocal and BufferLoadToLocal ops"}
!36 = !{!"amdgpu.AsyncOps", !"Domain to hold alias scopes to specify aliasing information between AsyncCopyGlobalToLocal, BufferLoadToLocal and LocalLoad ops"}
!37 = !DILocation(line: 91, column: 27, scope: !4)
!38 = !DILocation(line: 97, column: 24, scope: !4)
!39 = !DILocation(line: 98, column: 24, scope: !4)
!40 = !DILocation(line: 117, column: 12, scope: !4)
!41 = !DILocation(line: 119, column: 5, scope: !4)
!42 = !DILocation(line: 89, column: 22, scope: !4)
!43 = !DILocation(line: 127, column: 7, scope: !4)
!44 = !DILocation(line: 106, column: 18, scope: !4)
!45 = !DILocation(line: 107, column: 18, scope: !4)
!46 = !DILocation(line: 108, column: 24, scope: !4)
!47 = !DILocation(line: 109, column: 24, scope: !4)
!48 = !DILocation(line: 149, column: 7, scope: !4)
!49 = !DILocation(line: 150, column: 7, scope: !4)
!50 = !{!51}
!51 = !{!"amdgpu.LocalLoads", !36, !"Scope containing all LocalLoad ops"}
!52 = !DILocation(line: 103, column: 71, scope: !4)
!53 = !DILocation(line: 161, column: 5, scope: !4)
!54 = !DILocation(line: 114, column: 67, scope: !4)
!55 = !DILocation(line: 114, column: 37, scope: !4)
!56 = !DILocation(line: 115, column: 37, scope: !4)
!57 = !DILocation(line: 116, column: 21, scope: !4)
!58 = !DILocation(line: 116, column: 52, scope: !4)
!59 = !DILocation(line: 117, column: 33, scope: !4)
!60 = !DILocation(line: 117, column: 58, scope: !4)
!61 = !DILocation(line: 117, column: 39, scope: !4)
!62 = !DILocation(line: 118, column: 21, scope: !4)
!63 = !DILocation(line: 118, column: 4, scope: !4)
