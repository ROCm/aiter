; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128:128:48-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external addrspace(3) global [0 x i8], align 16

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_gemm_afp4_wfp4_kernel_preshuffled_scales(ptr addrspace(1) inreg readonly captures(none) %0, ptr addrspace(1) inreg readonly captures(none) %1, ptr addrspace(1) inreg writeonly captures(none) %2, ptr addrspace(1) inreg readonly captures(none) %3, ptr addrspace(1) inreg readonly captures(none) %4, i32 inreg %5, i32 inreg %6, i32 inreg %7, i32 inreg %8, i32 inreg %9, i32 inreg %10, i32 inreg %11, i32 inreg %12, i32 inreg %13, ptr addrspace(1) inreg readnone captures(none) %14) local_unnamed_addr #0 !dbg !4 {
  %16 = icmp sgt i32 %7, 0, !dbg !7
  br i1 %16, label %17, label %1680, !dbg !8

17:                                               ; preds = %15
  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !9
  %19 = add i32 %6, 255, !dbg !10
  %20 = sdiv i32 %19, 256, !dbg !14
  %.frozen = freeze i32 %20, !dbg !15
  %21 = sdiv i32 %18, %.frozen, !dbg !15
  %22 = mul i32 %21, %.frozen, !dbg !19
  %.decomposed = sub i32 %18, %22, !dbg !19
  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !20
  %24 = and i32 %23, 63, !dbg !20
  %25 = and i32 %23, 16, !dbg !20
  %26 = icmp eq i32 %25, 0, !dbg !20
  %27 = and i32 %23, 32, !dbg !20
  %.not7.not = icmp eq i32 %27, 0, !dbg !20
  %28 = and i32 %23, 64, !dbg !20
  %.not3 = icmp eq i32 %28, 0, !dbg !20
  %29 = lshr i32 %23, 3, !dbg !20
  %30 = and i32 %29, 31, !dbg !20
  %31 = or disjoint i32 %30, 32, !dbg !20
  %32 = or disjoint i32 %30, 64, !dbg !20
  %33 = or i32 %29, 96, !dbg !20
  %34 = shl nuw nsw i32 %23, 4, !dbg !20
  %35 = and i32 %34, 112, !dbg !20
  %36 = and i32 %23, 15, !dbg !20
  %37 = or disjoint i32 %36, 16, !dbg !20
  %38 = shl i32 %21, 7, !dbg !21
  %39 = or disjoint i32 %38, %30, !dbg !22
  %40 = or disjoint i32 %38, %31, !dbg !22
  %41 = or disjoint i32 %38, %32, !dbg !22
  %42 = or disjoint i32 %38, %33, !dbg !22
  %43 = srem i32 %39, %5, !dbg !23
  %44 = srem i32 %40, %5, !dbg !23
  %45 = srem i32 %41, %5, !dbg !23
  %46 = srem i32 %42, %5, !dbg !23
  %47 = shl nsw i32 %.decomposed, 8, !dbg !24
  %48 = shl nuw nsw i32 %23, 2, !dbg !25
  %49 = and i32 %48, 252, !dbg !25
  %50 = lshr exact i32 %28, 1, !dbg !25
  %51 = lshr i32 %23, 1, !dbg !25
  %52 = and i32 %51, 64, !dbg !25
  %53 = or disjoint i32 %47, %30, !dbg !26
  %54 = or disjoint i32 %47, %31, !dbg !26
  %55 = or disjoint i32 %47, %32, !dbg !26
  %56 = or disjoint i32 %47, %33, !dbg !26
  %57 = or disjoint i32 %53, 128, !dbg !26
  %58 = or disjoint i32 %53, 160, !dbg !26
  %59 = or disjoint i32 %53, 192, !dbg !26
  %60 = or disjoint i32 %29, %47, !dbg !26
  %61 = or i32 %60, 224, !dbg !26
  %62 = srem i32 %53, %6, !dbg !27
  %63 = srem i32 %54, %6, !dbg !27
  %64 = srem i32 %55, %6, !dbg !27
  %65 = srem i32 %56, %6, !dbg !27
  %66 = srem i32 %57, %6, !dbg !27
  %67 = srem i32 %58, %6, !dbg !27
  %68 = srem i32 %59, %6, !dbg !27
  %69 = srem i32 %61, %6, !dbg !27
  %70 = mul i32 %43, %8, !dbg !28
  %71 = mul i32 %44, %8, !dbg !28
  %72 = mul i32 %45, %8, !dbg !28
  %73 = mul i32 %46, %8, !dbg !28
  %74 = mul i32 %62, %9, !dbg !29
  %75 = mul i32 %63, %9, !dbg !29
  %76 = mul i32 %64, %9, !dbg !29
  %77 = mul i32 %65, %9, !dbg !29
  %78 = mul i32 %66, %9, !dbg !29
  %79 = mul i32 %67, %9, !dbg !29
  %80 = mul i32 %68, %9, !dbg !29
  %81 = mul i32 %69, %9, !dbg !29
  %82 = shl nsw i32 %.decomposed, 3, !dbg !30
  %.lobit25 = lshr i32 %23, 6, !dbg !31
  %83 = and i32 %.lobit25, 3, !dbg !31
  %84 = or disjoint i32 %82, %83, !dbg !32
  %85 = or disjoint i32 %84, 4, !dbg !32
  %86 = srem i32 %84, %6, !dbg !33
  %87 = srem i32 %85, %6, !dbg !33
  %88 = mul i32 %86, %13, !dbg !34
  %89 = mul i32 %87, %13, !dbg !34
  %90 = add i32 %88, %49, !dbg !35
  %91 = add i32 %89, %49, !dbg !35
  %92 = shl i32 %21, 2, !dbg !36
  %93 = or disjoint i32 %92, %83, !dbg !37
  %94 = srem i32 %93, %5, !dbg !38
  %95 = mul i32 %94, %12, !dbg !39
  %96 = add i32 %95, %49, !dbg !40
  %97 = tail call i32 @llvm.amdgcn.readlane.i32(i32 %23, i32 0), !dbg !41
  %98 = shl i32 %97, 2, !dbg !41
  %99 = and i32 %98, 768, !dbg !41
  %100 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 153600), i32 %99, !dbg !41
  %101 = trunc i32 %12 to i16, !dbg !41
  %102 = and i16 %101, 16383, !dbg !41
  %103 = or disjoint i16 %102, 16384, !dbg !41
  %104 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3, i16 %103, i32 2147483646, i32 159744), !dbg !41
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %104, ptr addrspace(3) %100, i32 4, i32 %96, i32 0, i32 0, i32 0), !dbg !41, !alias.scope !42
  %105 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %99, !dbg !45
  %106 = or disjoint i32 %99, 1024, !dbg !45
  %107 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %106, !dbg !45
  %108 = trunc i32 %13 to i16, !dbg !45
  %109 = and i16 %108, 16383, !dbg !45
  %110 = or disjoint i16 %109, 16384, !dbg !45
  %111 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %4, i16 %110, i32 2147483646, i32 159744), !dbg !45
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %111, ptr addrspace(3) %105, i32 4, i32 %90, i32 0, i32 0, i32 3), !dbg !45, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %111, ptr addrspace(3) nonnull %107, i32 4, i32 %91, i32 0, i32 0, i32 3), !dbg !45, !alias.scope !42
  %112 = shl i32 %97, 4, !dbg !46
  %113 = and i32 %112, 3072, !dbg !46
  %114 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %113, !dbg !46
  %115 = or disjoint i32 %113, 4096, !dbg !46
  %116 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %115, !dbg !46
  %117 = or disjoint i32 %113, 8192, !dbg !46
  %118 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %117, !dbg !46
  %119 = or disjoint i32 %113, 12288, !dbg !46
  %120 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %119, !dbg !46
  %121 = and i32 %34, 240, !dbg !46
  %122 = select i1 %26, i32 0, i32 272, !dbg !46
  %123 = select i1 %.not7.not, i32 0, i32 544, !dbg !46
  %124 = select i1 %.not3, i32 0, i32 1088, !dbg !46
  %125 = or disjoint i32 %123, %122, !dbg !46
  %126 = xor i32 %125, %121, !dbg !46
  %127 = xor i32 %126, %124, !dbg !46
  %128 = shl nuw nsw i32 %25, 4, !dbg !46
  %129 = or disjoint i32 %121, %128, !dbg !46
  %130 = shl nuw nsw i32 %27, 4, !dbg !46
  %131 = or disjoint i32 %130, %129, !dbg !46
  %.neg55 = mul nsw i32 %28, -16, !dbg !46
  %.neg29 = sub nsw i32 %.neg55, %131, !dbg !46
  %132 = add nsw i32 %.neg29, %127, !dbg !46
  %.lhs.trunc = trunc nsw i32 %132 to i16, !dbg !46
  %133 = ashr exact i16 %.lhs.trunc, 4, !dbg !46
  %.sext = sext i16 %133 to i32, !dbg !46
  %134 = or disjoint i32 %121, 4096, !dbg !46
  %135 = xor i32 %125, %134, !dbg !46
  %136 = xor i32 %135, %124, !dbg !46
  %137 = or disjoint i32 %128, %134, !dbg !46
  %138 = or disjoint i32 %130, %137, !dbg !46
  %.neg31 = sub nsw i32 %.neg55, %138, !dbg !46
  %139 = add nsw i32 %.neg31, %136, !dbg !46
  %.lhs.trunc11 = trunc nsw i32 %139 to i16, !dbg !46
  %140 = sdiv i16 %.lhs.trunc11, 16, !dbg !46
  %.sext12 = sext i16 %140 to i32, !dbg !46
  %141 = or disjoint i32 %121, 8192, !dbg !46
  %142 = xor i32 %125, %141, !dbg !46
  %143 = xor i32 %142, %124, !dbg !46
  %144 = or disjoint i32 %128, %141, !dbg !46
  %145 = or disjoint i32 %130, %144, !dbg !46
  %.neg33 = sub nsw i32 %.neg55, %145, !dbg !46
  %146 = add nsw i32 %.neg33, %143, !dbg !46
  %.lhs.trunc13 = trunc nsw i32 %146 to i16, !dbg !46
  %147 = sdiv i16 %.lhs.trunc13, 16, !dbg !46
  %.sext14 = sext i16 %147 to i32, !dbg !46
  %148 = or disjoint i32 %121, 12288, !dbg !46
  %149 = xor i32 %125, %148, !dbg !46
  %150 = xor i32 %149, %124, !dbg !46
  %151 = or disjoint i32 %128, %148, !dbg !46
  %152 = or disjoint i32 %130, %151, !dbg !46
  %.neg35 = sub nsw i32 %.neg55, %152, !dbg !46
  %153 = add nsw i32 %.neg35, %150, !dbg !46
  %.lhs.trunc15 = trunc nsw i32 %153 to i16, !dbg !46
  %154 = sdiv i16 %.lhs.trunc15, 16, !dbg !46
  %.sext16 = sext i16 %154 to i32, !dbg !46
  %155 = trunc i32 %8 to i16, !dbg !46
  %156 = and i16 %155, 16383, !dbg !46
  %157 = or disjoint i16 %156, 16384, !dbg !46
  %158 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %0, i16 %157, i32 2147483646, i32 159744), !dbg !46
  %159 = add nsw i32 %24, %.sext, !dbg !46
  %160 = shl nsw i32 %.sext, 4, !dbg !46
  %161 = add nsw i32 %160, %35, !dbg !28
  %162 = add i32 %161, %70, !dbg !46
  %163 = tail call i64 @llvm.amdgcn.ballot.i64(i1 true), !dbg !46
  %164 = zext nneg i32 %159 to i64, !dbg !46
  %165 = lshr i64 %163, %164, !dbg !46
  %166 = trunc i64 %165 to i1, !dbg !46
  %167 = select i1 %166, i32 %162, i32 -2147483648, !dbg !46
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %158, ptr addrspace(3) %114, i32 16, i32 %167, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  %168 = add nsw i32 %24, %.sext12, !dbg !46
  %169 = shl nsw i32 %.sext12, 4, !dbg !46
  %170 = add nsw i32 %169, %35, !dbg !28
  %171 = add i32 %170, %71, !dbg !46
  %172 = zext nneg i32 %168 to i64, !dbg !46
  %173 = lshr i64 %163, %172, !dbg !46
  %174 = trunc i64 %173 to i1, !dbg !46
  %175 = select i1 %174, i32 %171, i32 -2147483648, !dbg !46
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %158, ptr addrspace(3) nonnull %116, i32 16, i32 %175, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  %176 = add nsw i32 %24, %.sext14, !dbg !46
  %177 = shl nsw i32 %.sext14, 4, !dbg !46
  %178 = add nsw i32 %177, %35, !dbg !28
  %179 = add i32 %178, %72, !dbg !46
  %180 = zext nneg i32 %176 to i64, !dbg !46
  %181 = lshr i64 %163, %180, !dbg !46
  %182 = trunc i64 %181 to i1, !dbg !46
  %183 = select i1 %182, i32 %179, i32 -2147483648, !dbg !46
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %158, ptr addrspace(3) nonnull %118, i32 16, i32 %183, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  %184 = add nsw i32 %24, %.sext16, !dbg !46
  %185 = shl nsw i32 %.sext16, 4, !dbg !46
  %186 = add nsw i32 %185, %35, !dbg !28
  %187 = add i32 %186, %73, !dbg !46
  %188 = zext nneg i32 %184 to i64, !dbg !46
  %189 = lshr i64 %163, %188, !dbg !46
  %190 = trunc i64 %189 to i1, !dbg !46
  %191 = select i1 %190, i32 %187, i32 -2147483648, !dbg !46
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %158, ptr addrspace(3) nonnull %120, i32 16, i32 %191, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  %192 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %113, !dbg !47
  %193 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %115, !dbg !47
  %194 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %117, !dbg !47
  %195 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %119, !dbg !47
  %196 = or disjoint i32 %113, 16384, !dbg !47
  %197 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %196, !dbg !47
  %198 = or disjoint i32 %113, 20480, !dbg !47
  %199 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %198, !dbg !47
  %200 = or disjoint i32 %113, 24576, !dbg !47
  %201 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %200, !dbg !47
  %202 = or disjoint i32 %113, 28672, !dbg !47
  %203 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %202, !dbg !47
  %204 = or disjoint i32 %121, 16384, !dbg !47
  %205 = xor i32 %125, %204, !dbg !47
  %206 = xor i32 %205, %124, !dbg !47
  %207 = or disjoint i32 %128, %204, !dbg !47
  %208 = or disjoint i32 %130, %207, !dbg !47
  %.neg37 = sub nsw i32 %.neg55, %208, !dbg !47
  %209 = add nsw i32 %.neg37, %206, !dbg !47
  %.lhs.trunc17 = trunc nsw i32 %209 to i16, !dbg !47
  %210 = sdiv i16 %.lhs.trunc17, 16, !dbg !47
  %.sext18 = sext i16 %210 to i32, !dbg !47
  %211 = or disjoint i32 %121, 20480, !dbg !47
  %212 = xor i32 %125, %211, !dbg !47
  %213 = xor i32 %212, %124, !dbg !47
  %214 = or disjoint i32 %128, %211, !dbg !47
  %215 = or disjoint i32 %130, %214, !dbg !47
  %.neg39 = sub nsw i32 %.neg55, %215, !dbg !47
  %216 = add nsw i32 %.neg39, %213, !dbg !47
  %.lhs.trunc19 = trunc nsw i32 %216 to i16, !dbg !47
  %217 = sdiv i16 %.lhs.trunc19, 16, !dbg !47
  %.sext20 = sext i16 %217 to i32, !dbg !47
  %218 = or disjoint i32 %121, 24576, !dbg !47
  %219 = xor i32 %125, %218, !dbg !47
  %220 = xor i32 %219, %124, !dbg !47
  %221 = or disjoint i32 %128, %218, !dbg !47
  %222 = or disjoint i32 %130, %221, !dbg !47
  %.neg41 = sub nsw i32 %.neg55, %222, !dbg !47
  %223 = add nsw i32 %.neg41, %220, !dbg !47
  %.lhs.trunc21 = trunc nsw i32 %223 to i16, !dbg !47
  %224 = sdiv i16 %.lhs.trunc21, 16, !dbg !47
  %.sext22 = sext i16 %224 to i32, !dbg !47
  %225 = or disjoint i32 %121, 28672, !dbg !47
  %226 = xor i32 %125, %225, !dbg !47
  %227 = xor i32 %226, %124, !dbg !47
  %228 = or disjoint i32 %128, %225, !dbg !47
  %229 = or disjoint i32 %130, %228, !dbg !47
  %.neg43 = sub nsw i32 %.neg55, %229, !dbg !47
  %230 = add nsw i32 %.neg43, %227, !dbg !47
  %.lhs.trunc23 = trunc nsw i32 %230 to i16, !dbg !47
  %231 = sdiv i16 %.lhs.trunc23, 16, !dbg !47
  %.sext24 = sext i16 %231 to i32, !dbg !47
  %232 = trunc i32 %9 to i16, !dbg !47
  %233 = and i16 %232, 16383, !dbg !47
  %234 = or disjoint i16 %233, 16384, !dbg !47
  %235 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %1, i16 %234, i32 2147483646, i32 159744), !dbg !47
  %236 = add i32 %161, %74, !dbg !47
  %237 = select i1 %166, i32 %236, i32 -2147483648, !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %235, ptr addrspace(3) %192, i32 16, i32 %237, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %238 = add i32 %170, %75, !dbg !47
  %239 = select i1 %174, i32 %238, i32 -2147483648, !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %235, ptr addrspace(3) nonnull %193, i32 16, i32 %239, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %240 = add i32 %178, %76, !dbg !47
  %241 = select i1 %182, i32 %240, i32 -2147483648, !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %235, ptr addrspace(3) nonnull %194, i32 16, i32 %241, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %242 = add i32 %186, %77, !dbg !47
  %243 = select i1 %190, i32 %242, i32 -2147483648, !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %235, ptr addrspace(3) nonnull %195, i32 16, i32 %243, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %244 = add nsw i32 %24, %.sext18, !dbg !47
  %245 = and i32 %23, 7, !dbg !29
  %246 = add nsw i32 %245, %.sext18, !dbg !29
  %247 = shl nsw i32 %246, 4, !dbg !29
  %248 = add i32 %247, %78, !dbg !47
  %249 = zext nneg i32 %244 to i64, !dbg !47
  %250 = lshr i64 %163, %249, !dbg !47
  %251 = trunc i64 %250 to i1, !dbg !47
  %252 = select i1 %251, i32 %248, i32 -2147483648, !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %235, ptr addrspace(3) nonnull %197, i32 16, i32 %252, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %253 = add nsw i32 %24, %.sext20, !dbg !47
  %254 = add nsw i32 %245, %.sext20, !dbg !29
  %255 = shl nsw i32 %254, 4, !dbg !29
  %256 = add i32 %255, %79, !dbg !47
  %257 = zext nneg i32 %253 to i64, !dbg !47
  %258 = lshr i64 %163, %257, !dbg !47
  %259 = trunc i64 %258 to i1, !dbg !47
  %260 = select i1 %259, i32 %256, i32 -2147483648, !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %235, ptr addrspace(3) nonnull %199, i32 16, i32 %260, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %261 = add nsw i32 %24, %.sext22, !dbg !47
  %262 = add nsw i32 %245, %.sext22, !dbg !29
  %263 = shl nsw i32 %262, 4, !dbg !29
  %264 = add i32 %263, %80, !dbg !47
  %265 = zext nneg i32 %261 to i64, !dbg !47
  %266 = lshr i64 %163, %265, !dbg !47
  %267 = trunc i64 %266 to i1, !dbg !47
  %268 = select i1 %267, i32 %264, i32 -2147483648, !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %235, ptr addrspace(3) nonnull %201, i32 16, i32 %268, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %269 = add nsw i32 %24, %.sext24, !dbg !47
  %270 = add nsw i32 %245, %.sext24, !dbg !29
  %271 = shl nsw i32 %270, 4, !dbg !29
  %272 = add i32 %271, %81, !dbg !47
  %273 = zext nneg i32 %269 to i64, !dbg !47
  %274 = lshr i64 %163, %273, !dbg !47
  %275 = trunc i64 %274 to i1, !dbg !47
  %276 = select i1 %275, i32 %272, i32 -2147483648, !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %235, ptr addrspace(3) nonnull %203, i32 16, i32 %276, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %277 = getelementptr i8, ptr addrspace(1) %0, i64 128, !dbg !48
  %278 = getelementptr i8, ptr addrspace(1) %1, i64 128, !dbg !49
  %279 = getelementptr i8, ptr addrspace(1) %3, i64 256, !dbg !50
  %280 = getelementptr i8, ptr addrspace(1) %4, i64 256, !dbg !51
  fence syncscope("workgroup") release, !dbg !41
  tail call void @llvm.amdgcn.s.barrier(), !dbg !41
  fence syncscope("workgroup") acquire, !dbg !41
  %281 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 154624), i32 %99, !dbg !41
  %282 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %279, i16 %103, i32 2147483646, i32 159744), !dbg !41
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %282, ptr addrspace(3) %281, i32 4, i32 %96, i32 0, i32 0, i32 0), !dbg !41, !alias.scope !42
  %283 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 149504), i32 %99, !dbg !45
  %284 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 149504), i32 %106, !dbg !45
  %285 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %280, i16 %110, i32 2147483646, i32 159744), !dbg !45
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %285, ptr addrspace(3) %283, i32 4, i32 %90, i32 0, i32 0, i32 3), !dbg !45, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %285, ptr addrspace(3) nonnull %284, i32 4, i32 %91, i32 0, i32 0, i32 3), !dbg !45, !alias.scope !42
  %286 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %113, !dbg !46
  %287 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %115, !dbg !46
  %288 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %117, !dbg !46
  %289 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %119, !dbg !46
  %290 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %277, i16 %157, i32 2147483646, i32 159744), !dbg !46
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %290, ptr addrspace(3) %286, i32 16, i32 %167, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %290, ptr addrspace(3) nonnull %287, i32 16, i32 %175, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %290, ptr addrspace(3) nonnull %288, i32 16, i32 %183, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %290, ptr addrspace(3) nonnull %289, i32 16, i32 %191, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  %291 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %113, !dbg !47
  %292 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %115, !dbg !47
  %293 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %117, !dbg !47
  %294 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %119, !dbg !47
  %295 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %196, !dbg !47
  %296 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %198, !dbg !47
  %297 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %200, !dbg !47
  %298 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %202, !dbg !47
  %299 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %278, i16 %234, i32 2147483646, i32 159744), !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %299, ptr addrspace(3) %291, i32 16, i32 %237, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %299, ptr addrspace(3) nonnull %292, i32 16, i32 %239, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %299, ptr addrspace(3) nonnull %293, i32 16, i32 %241, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %299, ptr addrspace(3) nonnull %294, i32 16, i32 %243, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %299, ptr addrspace(3) nonnull %295, i32 16, i32 %252, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %299, ptr addrspace(3) nonnull %296, i32 16, i32 %260, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %299, ptr addrspace(3) nonnull %297, i32 16, i32 %268, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %299, ptr addrspace(3) nonnull %298, i32 16, i32 %276, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %300 = shl nuw nsw i32 %23, 1
  %301 = and i32 %300, 62
  %.lobit10 = lshr exact i32 %27, 5
  %302 = or disjoint i32 %301, %.lobit10
  %303 = or disjoint i32 %302, 64
  %304 = or disjoint i32 %302, 128
  %305 = or disjoint i32 %302, 192
  %306 = shl nuw nsw i32 %83, 8
  %307 = or disjoint i32 %306, 1024
  %308 = shl nuw nsw i32 %23, 3
  %309 = and i32 %308, 48
  %310 = shl nuw nsw i32 %23, 3
  %311 = and i32 %310, 64
  %312 = or disjoint i32 %309, %311
  %and.ra45 = and i32 %23, 48
  %313 = xor i32 %312, %and.ra45
  %314 = shl nuw nsw i32 %36, 7
  %315 = or disjoint i32 %309, 64
  %316 = or disjoint i32 %311, %and.ra45
  %317 = xor i32 %316, %315
  %318 = shl nuw nsw i32 %37, 7
  %319 = shl nuw nsw i32 %23, 7
  %320 = and i32 %319, 1920
  %321 = or disjoint i32 %320, 4096
  %322 = or disjoint i32 %320, 6144
  %323 = or disjoint i32 %320, 8192
  %324 = or disjoint i32 %320, 10240
  %325 = or disjoint i32 %320, 12288
  %326 = or disjoint i32 %320, 14336
  %327 = or disjoint i32 %52, %50
  %328 = or disjoint i32 %327, %36
  %329 = shl nuw nsw i32 %328, 7
  %330 = or disjoint i32 %327, %37
  %331 = shl nuw nsw i32 %330, 7
  %332 = or disjoint i32 %329, 16384
  %333 = or disjoint i32 %329, 18432
  br label %334, !dbg !52

334:                                              ; preds = %17, %334
  %335 = phi ptr addrspace(1) [ %280, %17 ], [ %480, %334 ]
  %336 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), %17 ], [ %607, %334 ]
  %337 = phi ptr addrspace(3) [ @global_smem, %17 ], [ %336, %334 ]
  %338 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), %17 ], [ %561, %334 ]
  %339 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), %17 ], [ %338, %334 ]
  %340 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 149504), %17 ], [ %532, %334 ]
  %341 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), %17 ], [ %340, %334 ]
  %342 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 154624), %17 ], [ %485, %334 ]
  %343 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 153600), %17 ], [ %342, %334 ]
  %344 = phi i32 [ 1, %17 ], [ %483, %334 ]
  %345 = phi ptr addrspace(1) [ %278, %17 ], [ %478, %334 ]
  %346 = phi ptr addrspace(1) [ %277, %17 ], [ %477, %334 ]
  %347 = phi ptr addrspace(1) [ %279, %17 ], [ %479, %334 ]
  %348 = phi float [ 0.000000e+00, %17 ], [ %665, %334 ]
  %349 = phi float [ 0.000000e+00, %17 ], [ %666, %334 ]
  %350 = phi float [ 0.000000e+00, %17 ], [ %667, %334 ]
  %351 = phi float [ 0.000000e+00, %17 ], [ %668, %334 ]
  %352 = phi float [ 0.000000e+00, %17 ], [ %675, %334 ]
  %353 = phi float [ 0.000000e+00, %17 ], [ %676, %334 ]
  %354 = phi float [ 0.000000e+00, %17 ], [ %677, %334 ]
  %355 = phi float [ 0.000000e+00, %17 ], [ %678, %334 ]
  %356 = phi float [ 0.000000e+00, %17 ], [ %685, %334 ]
  %357 = phi float [ 0.000000e+00, %17 ], [ %686, %334 ]
  %358 = phi float [ 0.000000e+00, %17 ], [ %687, %334 ]
  %359 = phi float [ 0.000000e+00, %17 ], [ %688, %334 ]
  %360 = phi float [ 0.000000e+00, %17 ], [ %695, %334 ]
  %361 = phi float [ 0.000000e+00, %17 ], [ %696, %334 ]
  %362 = phi float [ 0.000000e+00, %17 ], [ %697, %334 ]
  %363 = phi float [ 0.000000e+00, %17 ], [ %698, %334 ]
  %364 = phi float [ 0.000000e+00, %17 ], [ %705, %334 ]
  %365 = phi float [ 0.000000e+00, %17 ], [ %706, %334 ]
  %366 = phi float [ 0.000000e+00, %17 ], [ %707, %334 ]
  %367 = phi float [ 0.000000e+00, %17 ], [ %708, %334 ]
  %368 = phi float [ 0.000000e+00, %17 ], [ %715, %334 ]
  %369 = phi float [ 0.000000e+00, %17 ], [ %716, %334 ]
  %370 = phi float [ 0.000000e+00, %17 ], [ %717, %334 ]
  %371 = phi float [ 0.000000e+00, %17 ], [ %718, %334 ]
  %372 = phi float [ 0.000000e+00, %17 ], [ %725, %334 ]
  %373 = phi float [ 0.000000e+00, %17 ], [ %726, %334 ]
  %374 = phi float [ 0.000000e+00, %17 ], [ %727, %334 ]
  %375 = phi float [ 0.000000e+00, %17 ], [ %728, %334 ]
  %376 = phi float [ 0.000000e+00, %17 ], [ %735, %334 ]
  %377 = phi float [ 0.000000e+00, %17 ], [ %736, %334 ]
  %378 = phi float [ 0.000000e+00, %17 ], [ %737, %334 ]
  %379 = phi float [ 0.000000e+00, %17 ], [ %738, %334 ]
  %380 = phi float [ 0.000000e+00, %17 ], [ %745, %334 ]
  %381 = phi float [ 0.000000e+00, %17 ], [ %746, %334 ]
  %382 = phi float [ 0.000000e+00, %17 ], [ %747, %334 ]
  %383 = phi float [ 0.000000e+00, %17 ], [ %748, %334 ]
  %384 = phi float [ 0.000000e+00, %17 ], [ %755, %334 ]
  %385 = phi float [ 0.000000e+00, %17 ], [ %756, %334 ]
  %386 = phi float [ 0.000000e+00, %17 ], [ %757, %334 ]
  %387 = phi float [ 0.000000e+00, %17 ], [ %758, %334 ]
  %388 = phi float [ 0.000000e+00, %17 ], [ %765, %334 ]
  %389 = phi float [ 0.000000e+00, %17 ], [ %766, %334 ]
  %390 = phi float [ 0.000000e+00, %17 ], [ %767, %334 ]
  %391 = phi float [ 0.000000e+00, %17 ], [ %768, %334 ]
  %392 = phi float [ 0.000000e+00, %17 ], [ %775, %334 ]
  %393 = phi float [ 0.000000e+00, %17 ], [ %776, %334 ]
  %394 = phi float [ 0.000000e+00, %17 ], [ %777, %334 ]
  %395 = phi float [ 0.000000e+00, %17 ], [ %778, %334 ]
  %396 = phi float [ 0.000000e+00, %17 ], [ %785, %334 ]
  %397 = phi float [ 0.000000e+00, %17 ], [ %786, %334 ]
  %398 = phi float [ 0.000000e+00, %17 ], [ %787, %334 ]
  %399 = phi float [ 0.000000e+00, %17 ], [ %788, %334 ]
  %400 = phi float [ 0.000000e+00, %17 ], [ %795, %334 ]
  %401 = phi float [ 0.000000e+00, %17 ], [ %796, %334 ]
  %402 = phi float [ 0.000000e+00, %17 ], [ %797, %334 ]
  %403 = phi float [ 0.000000e+00, %17 ], [ %798, %334 ]
  %404 = phi float [ 0.000000e+00, %17 ], [ %805, %334 ]
  %405 = phi float [ 0.000000e+00, %17 ], [ %806, %334 ]
  %406 = phi float [ 0.000000e+00, %17 ], [ %807, %334 ]
  %407 = phi float [ 0.000000e+00, %17 ], [ %808, %334 ]
  %408 = phi float [ 0.000000e+00, %17 ], [ %815, %334 ]
  %409 = phi float [ 0.000000e+00, %17 ], [ %816, %334 ]
  %410 = phi float [ 0.000000e+00, %17 ], [ %817, %334 ]
  %411 = phi float [ 0.000000e+00, %17 ], [ %818, %334 ]
  %412 = phi float [ 0.000000e+00, %17 ], [ %825, %334 ]
  %413 = phi float [ 0.000000e+00, %17 ], [ %826, %334 ]
  %414 = phi float [ 0.000000e+00, %17 ], [ %827, %334 ]
  %415 = phi float [ 0.000000e+00, %17 ], [ %828, %334 ]
  %416 = phi float [ 0.000000e+00, %17 ], [ %835, %334 ]
  %417 = phi float [ 0.000000e+00, %17 ], [ %836, %334 ]
  %418 = phi float [ 0.000000e+00, %17 ], [ %837, %334 ]
  %419 = phi float [ 0.000000e+00, %17 ], [ %838, %334 ]
  %420 = phi float [ 0.000000e+00, %17 ], [ %845, %334 ]
  %421 = phi float [ 0.000000e+00, %17 ], [ %846, %334 ]
  %422 = phi float [ 0.000000e+00, %17 ], [ %847, %334 ]
  %423 = phi float [ 0.000000e+00, %17 ], [ %848, %334 ]
  %424 = phi float [ 0.000000e+00, %17 ], [ %855, %334 ]
  %425 = phi float [ 0.000000e+00, %17 ], [ %856, %334 ]
  %426 = phi float [ 0.000000e+00, %17 ], [ %857, %334 ]
  %427 = phi float [ 0.000000e+00, %17 ], [ %858, %334 ]
  %428 = phi float [ 0.000000e+00, %17 ], [ %865, %334 ]
  %429 = phi float [ 0.000000e+00, %17 ], [ %866, %334 ]
  %430 = phi float [ 0.000000e+00, %17 ], [ %867, %334 ]
  %431 = phi float [ 0.000000e+00, %17 ], [ %868, %334 ]
  %432 = phi float [ 0.000000e+00, %17 ], [ %875, %334 ]
  %433 = phi float [ 0.000000e+00, %17 ], [ %876, %334 ]
  %434 = phi float [ 0.000000e+00, %17 ], [ %877, %334 ]
  %435 = phi float [ 0.000000e+00, %17 ], [ %878, %334 ]
  %436 = phi float [ 0.000000e+00, %17 ], [ %885, %334 ]
  %437 = phi float [ 0.000000e+00, %17 ], [ %886, %334 ]
  %438 = phi float [ 0.000000e+00, %17 ], [ %887, %334 ]
  %439 = phi float [ 0.000000e+00, %17 ], [ %888, %334 ]
  %440 = phi float [ 0.000000e+00, %17 ], [ %895, %334 ]
  %441 = phi float [ 0.000000e+00, %17 ], [ %896, %334 ]
  %442 = phi float [ 0.000000e+00, %17 ], [ %897, %334 ]
  %443 = phi float [ 0.000000e+00, %17 ], [ %898, %334 ]
  %444 = phi float [ 0.000000e+00, %17 ], [ %905, %334 ]
  %445 = phi float [ 0.000000e+00, %17 ], [ %906, %334 ]
  %446 = phi float [ 0.000000e+00, %17 ], [ %907, %334 ]
  %447 = phi float [ 0.000000e+00, %17 ], [ %908, %334 ]
  %448 = phi float [ 0.000000e+00, %17 ], [ %915, %334 ]
  %449 = phi float [ 0.000000e+00, %17 ], [ %916, %334 ]
  %450 = phi float [ 0.000000e+00, %17 ], [ %917, %334 ]
  %451 = phi float [ 0.000000e+00, %17 ], [ %918, %334 ]
  %452 = phi float [ 0.000000e+00, %17 ], [ %925, %334 ]
  %453 = phi float [ 0.000000e+00, %17 ], [ %926, %334 ]
  %454 = phi float [ 0.000000e+00, %17 ], [ %927, %334 ]
  %455 = phi float [ 0.000000e+00, %17 ], [ %928, %334 ]
  %456 = phi float [ 0.000000e+00, %17 ], [ %935, %334 ]
  %457 = phi float [ 0.000000e+00, %17 ], [ %936, %334 ]
  %458 = phi float [ 0.000000e+00, %17 ], [ %937, %334 ]
  %459 = phi float [ 0.000000e+00, %17 ], [ %938, %334 ]
  %460 = phi float [ 0.000000e+00, %17 ], [ %945, %334 ]
  %461 = phi float [ 0.000000e+00, %17 ], [ %946, %334 ]
  %462 = phi float [ 0.000000e+00, %17 ], [ %947, %334 ]
  %463 = phi float [ 0.000000e+00, %17 ], [ %948, %334 ]
  %464 = phi float [ 0.000000e+00, %17 ], [ %955, %334 ]
  %465 = phi float [ 0.000000e+00, %17 ], [ %956, %334 ]
  %466 = phi float [ 0.000000e+00, %17 ], [ %957, %334 ]
  %467 = phi float [ 0.000000e+00, %17 ], [ %958, %334 ]
  %468 = phi float [ 0.000000e+00, %17 ], [ %965, %334 ]
  %469 = phi float [ 0.000000e+00, %17 ], [ %966, %334 ]
  %470 = phi float [ 0.000000e+00, %17 ], [ %967, %334 ]
  %471 = phi float [ 0.000000e+00, %17 ], [ %968, %334 ]
  %472 = phi float [ 0.000000e+00, %17 ], [ %975, %334 ]
  %473 = phi float [ 0.000000e+00, %17 ], [ %976, %334 ]
  %474 = phi float [ 0.000000e+00, %17 ], [ %977, %334 ]
  %475 = phi float [ 0.000000e+00, %17 ], [ %978, %334 ]
  %476 = phi i32 [ 0, %17 ], [ %979, %334 ]
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49153), !dbg !41
  fence syncscope("workgroup") release, !dbg !41
  tail call void @llvm.amdgcn.s.barrier(), !dbg !41
  fence syncscope("workgroup") acquire, !dbg !41
  %477 = getelementptr i8, ptr addrspace(1) %346, i64 128, !dbg !48
  %478 = getelementptr i8, ptr addrspace(1) %345, i64 128, !dbg !49
  %479 = getelementptr i8, ptr addrspace(1) %347, i64 256, !dbg !50
  %480 = getelementptr i8, ptr addrspace(1) %335, i64 256, !dbg !51
  %481 = add i32 %344, 1, !dbg !52
  %482 = icmp slt i32 %481, 3, !dbg !52
  %483 = select i1 %482, i32 %481, i32 0, !dbg !52
  %484 = shl i32 %483, 10, !dbg !41
  %485 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 153600), i32 %484, !dbg !41
  %486 = tail call i32 @llvm.amdgcn.readlane.i32(i32 %23, i32 0), !dbg !41
  %487 = shl i32 %486, 2, !dbg !41
  %488 = and i32 %487, 768, !dbg !41
  %489 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %488, !dbg !41
  %490 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %479, i16 %103, i32 2147483646, i32 159744), !dbg !41
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %490, ptr addrspace(3) %489, i32 4, i32 %96, i32 0, i32 0, i32 0), !dbg !41, !alias.scope !42
  %491 = getelementptr inbounds nuw i8, ptr addrspace(3) %343, i32 %302, !dbg !53
  %492 = load <1 x i8>, ptr addrspace(3) %491, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %493 = getelementptr inbounds nuw i8, ptr addrspace(3) %343, i32 %303, !dbg !53
  %494 = load <1 x i8>, ptr addrspace(3) %493, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %495 = getelementptr inbounds nuw i8, ptr addrspace(3) %343, i32 %304, !dbg !53
  %496 = load <1 x i8>, ptr addrspace(3) %495, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %497 = shufflevector <1 x i8> %496, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %498 = getelementptr inbounds nuw i8, ptr addrspace(3) %343, i32 %305, !dbg !53
  %499 = load <1 x i8>, ptr addrspace(3) %498, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %500 = shufflevector <1 x i8> %499, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %501 = getelementptr inbounds nuw i8, ptr addrspace(3) %491, i32 256, !dbg !53
  %502 = load <1 x i8>, ptr addrspace(3) %501, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %503 = getelementptr inbounds nuw i8, ptr addrspace(3) %493, i32 256, !dbg !53
  %504 = load <1 x i8>, ptr addrspace(3) %503, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %505 = getelementptr inbounds nuw i8, ptr addrspace(3) %495, i32 256, !dbg !53
  %506 = load <1 x i8>, ptr addrspace(3) %505, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %507 = shufflevector <1 x i8> %506, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %508 = getelementptr inbounds nuw i8, ptr addrspace(3) %498, i32 256, !dbg !53
  %509 = load <1 x i8>, ptr addrspace(3) %508, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %510 = shufflevector <1 x i8> %509, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %511 = getelementptr inbounds nuw i8, ptr addrspace(3) %491, i32 512, !dbg !53
  %512 = load <1 x i8>, ptr addrspace(3) %511, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %513 = getelementptr inbounds nuw i8, ptr addrspace(3) %493, i32 512, !dbg !53
  %514 = load <1 x i8>, ptr addrspace(3) %513, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %515 = getelementptr inbounds nuw i8, ptr addrspace(3) %495, i32 512, !dbg !53
  %516 = load <1 x i8>, ptr addrspace(3) %515, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %517 = shufflevector <1 x i8> %516, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %518 = getelementptr inbounds nuw i8, ptr addrspace(3) %498, i32 512, !dbg !53
  %519 = load <1 x i8>, ptr addrspace(3) %518, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %520 = shufflevector <1 x i8> %519, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %521 = getelementptr inbounds nuw i8, ptr addrspace(3) %491, i32 768, !dbg !53
  %522 = load <1 x i8>, ptr addrspace(3) %521, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %523 = getelementptr inbounds nuw i8, ptr addrspace(3) %493, i32 768, !dbg !53
  %524 = load <1 x i8>, ptr addrspace(3) %523, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %525 = getelementptr inbounds nuw i8, ptr addrspace(3) %495, i32 768, !dbg !53
  %526 = load <1 x i8>, ptr addrspace(3) %525, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %527 = shufflevector <1 x i8> %526, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %528 = getelementptr inbounds nuw i8, ptr addrspace(3) %498, i32 768, !dbg !53
  %529 = load <1 x i8>, ptr addrspace(3) %528, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %530 = shufflevector <1 x i8> %529, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %531 = shl i32 %483, 11, !dbg !45
  %532 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %531, !dbg !45
  %533 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %488, !dbg !45
  %534 = getelementptr inbounds nuw i8, ptr addrspace(3) %533, i32 1024, !dbg !45
  %535 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %480, i16 %110, i32 2147483646, i32 159744), !dbg !45
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %535, ptr addrspace(3) %533, i32 4, i32 %90, i32 0, i32 0, i32 3), !dbg !45, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %535, ptr addrspace(3) nonnull %534, i32 4, i32 %91, i32 0, i32 0, i32 3), !dbg !45, !alias.scope !42
  %536 = getelementptr inbounds nuw i8, ptr addrspace(3) %341, i32 %302, !dbg !56
  %537 = getelementptr inbounds nuw i8, ptr addrspace(3) %536, i32 %306, !dbg !56
  %538 = load <1 x i8>, ptr addrspace(3) %537, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %539 = getelementptr inbounds nuw i8, ptr addrspace(3) %341, i32 %303, !dbg !56
  %540 = getelementptr inbounds nuw i8, ptr addrspace(3) %539, i32 %306, !dbg !56
  %541 = load <1 x i8>, ptr addrspace(3) %540, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %542 = getelementptr inbounds nuw i8, ptr addrspace(3) %341, i32 %304, !dbg !56
  %543 = getelementptr inbounds nuw i8, ptr addrspace(3) %542, i32 %306, !dbg !56
  %544 = load <1 x i8>, ptr addrspace(3) %543, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %545 = shufflevector <1 x i8> %544, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %546 = getelementptr inbounds nuw i8, ptr addrspace(3) %341, i32 %305, !dbg !56
  %547 = getelementptr inbounds nuw i8, ptr addrspace(3) %546, i32 %306, !dbg !56
  %548 = load <1 x i8>, ptr addrspace(3) %547, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %549 = shufflevector <1 x i8> %548, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %550 = getelementptr inbounds nuw i8, ptr addrspace(3) %536, i32 %307, !dbg !56
  %551 = load <1 x i8>, ptr addrspace(3) %550, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %552 = getelementptr inbounds nuw i8, ptr addrspace(3) %539, i32 %307, !dbg !56
  %553 = load <1 x i8>, ptr addrspace(3) %552, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %554 = getelementptr inbounds nuw i8, ptr addrspace(3) %542, i32 %307, !dbg !56
  %555 = load <1 x i8>, ptr addrspace(3) %554, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %556 = shufflevector <1 x i8> %555, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %557 = getelementptr inbounds nuw i8, ptr addrspace(3) %546, i32 %307, !dbg !56
  %558 = load <1 x i8>, ptr addrspace(3) %557, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %559 = shufflevector <1 x i8> %558, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %560 = shl i32 %483, 14, !dbg !46
  %561 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %560, !dbg !46
  %562 = shl i32 %486, 4, !dbg !46
  %563 = and i32 %562, 3072, !dbg !46
  %564 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %563, !dbg !46
  %565 = or disjoint i32 %563, 4096, !dbg !46
  %566 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %565, !dbg !46
  %567 = or disjoint i32 %563, 8192, !dbg !46
  %568 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %567, !dbg !46
  %569 = or disjoint i32 %563, 12288, !dbg !46
  %570 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %569, !dbg !46
  %571 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %477, i16 %157, i32 2147483646, i32 159744), !dbg !46
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %571, ptr addrspace(3) %564, i32 16, i32 %162, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %571, ptr addrspace(3) nonnull %566, i32 16, i32 %171, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %571, ptr addrspace(3) nonnull %568, i32 16, i32 %179, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %571, ptr addrspace(3) nonnull %570, i32 16, i32 %187, i32 0, i32 0, i32 0), !dbg !46, !alias.scope !42
  %572 = getelementptr inbounds nuw i8, ptr addrspace(3) %339, i32 %313, !dbg !46
  %573 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 %314, !dbg !46
  %574 = load <4 x i32>, ptr addrspace(3) %573, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %575 = getelementptr inbounds nuw i8, ptr addrspace(3) %339, i32 %317, !dbg !46
  %576 = getelementptr inbounds nuw i8, ptr addrspace(3) %575, i32 %314, !dbg !46
  %577 = load <4 x i32>, ptr addrspace(3) %576, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %578 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 %318, !dbg !46
  %579 = load <4 x i32>, ptr addrspace(3) %578, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %580 = getelementptr inbounds nuw i8, ptr addrspace(3) %575, i32 %318, !dbg !46
  %581 = load <4 x i32>, ptr addrspace(3) %580, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %582 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 %321, !dbg !46
  %583 = load <4 x i32>, ptr addrspace(3) %582, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %584 = getelementptr inbounds nuw i8, ptr addrspace(3) %575, i32 %321, !dbg !46
  %585 = load <4 x i32>, ptr addrspace(3) %584, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %586 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 %322, !dbg !46
  %587 = load <4 x i32>, ptr addrspace(3) %586, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %588 = getelementptr inbounds nuw i8, ptr addrspace(3) %575, i32 %322, !dbg !46
  %589 = load <4 x i32>, ptr addrspace(3) %588, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %590 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 %323, !dbg !46
  %591 = load <4 x i32>, ptr addrspace(3) %590, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %592 = getelementptr inbounds nuw i8, ptr addrspace(3) %575, i32 %323, !dbg !46
  %593 = load <4 x i32>, ptr addrspace(3) %592, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %594 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 %324, !dbg !46
  %595 = load <4 x i32>, ptr addrspace(3) %594, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %596 = getelementptr inbounds nuw i8, ptr addrspace(3) %575, i32 %324, !dbg !46
  %597 = load <4 x i32>, ptr addrspace(3) %596, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %598 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 %325, !dbg !46
  %599 = load <4 x i32>, ptr addrspace(3) %598, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %600 = getelementptr inbounds nuw i8, ptr addrspace(3) %575, i32 %325, !dbg !46
  %601 = load <4 x i32>, ptr addrspace(3) %600, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %602 = getelementptr inbounds nuw i8, ptr addrspace(3) %572, i32 %326, !dbg !46
  %603 = load <4 x i32>, ptr addrspace(3) %602, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %604 = getelementptr inbounds nuw i8, ptr addrspace(3) %575, i32 %326, !dbg !46
  %605 = load <4 x i32>, ptr addrspace(3) %604, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %606 = shl i32 %483, 15, !dbg !47
  %607 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %606, !dbg !47
  %608 = getelementptr inbounds nuw i8, ptr addrspace(3) %607, i32 %563, !dbg !47
  %609 = getelementptr inbounds nuw i8, ptr addrspace(3) %607, i32 %565, !dbg !47
  %610 = getelementptr inbounds nuw i8, ptr addrspace(3) %607, i32 %567, !dbg !47
  %611 = getelementptr inbounds nuw i8, ptr addrspace(3) %607, i32 %569, !dbg !47
  %612 = getelementptr inbounds nuw i8, ptr addrspace(3) %608, i32 16384, !dbg !47
  %613 = getelementptr inbounds nuw i8, ptr addrspace(3) %608, i32 20480, !dbg !47
  %614 = getelementptr inbounds nuw i8, ptr addrspace(3) %608, i32 24576, !dbg !47
  %615 = getelementptr inbounds nuw i8, ptr addrspace(3) %608, i32 28672, !dbg !47
  %616 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %478, i16 %234, i32 2147483646, i32 159744), !dbg !47
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %616, ptr addrspace(3) %608, i32 16, i32 %236, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %616, ptr addrspace(3) nonnull %609, i32 16, i32 %238, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %616, ptr addrspace(3) nonnull %610, i32 16, i32 %240, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %616, ptr addrspace(3) nonnull %611, i32 16, i32 %242, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %616, ptr addrspace(3) nonnull %612, i32 16, i32 %248, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %616, ptr addrspace(3) nonnull %613, i32 16, i32 %256, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %616, ptr addrspace(3) nonnull %614, i32 16, i32 %264, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  tail call void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) %616, ptr addrspace(3) nonnull %615, i32 16, i32 %272, i32 0, i32 0, i32 3), !dbg !47, !alias.scope !42
  %617 = getelementptr inbounds nuw i8, ptr addrspace(3) %337, i32 %313, !dbg !47
  %618 = getelementptr inbounds nuw i8, ptr addrspace(3) %617, i32 %329, !dbg !47
  %619 = load <4 x i32>, ptr addrspace(3) %618, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %620 = getelementptr inbounds nuw i8, ptr addrspace(3) %337, i32 %317, !dbg !47
  %621 = getelementptr inbounds nuw i8, ptr addrspace(3) %620, i32 %329, !dbg !47
  %622 = load <4 x i32>, ptr addrspace(3) %621, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %623 = getelementptr inbounds nuw i8, ptr addrspace(3) %617, i32 %331, !dbg !47
  %624 = load <4 x i32>, ptr addrspace(3) %623, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %625 = getelementptr inbounds nuw i8, ptr addrspace(3) %620, i32 %331, !dbg !47
  %626 = load <4 x i32>, ptr addrspace(3) %625, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %627 = getelementptr inbounds nuw i8, ptr addrspace(3) %617, i32 %332, !dbg !47
  %628 = load <4 x i32>, ptr addrspace(3) %627, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %629 = getelementptr inbounds nuw i8, ptr addrspace(3) %620, i32 %332, !dbg !47
  %630 = load <4 x i32>, ptr addrspace(3) %629, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %631 = getelementptr inbounds nuw i8, ptr addrspace(3) %617, i32 %333, !dbg !47
  %632 = load <4 x i32>, ptr addrspace(3) %631, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %633 = getelementptr inbounds nuw i8, ptr addrspace(3) %620, i32 %333, !dbg !47
  %634 = load <4 x i32>, ptr addrspace(3) %633, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %635 = shufflevector <1 x i8> %492, <1 x i8> %494, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %636 = shufflevector <4 x i8> %635, <4 x i8> %497, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %637 = shufflevector <4 x i8> %636, <4 x i8> %500, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %638 = bitcast <4 x i8> %637 to i32, !dbg !57
  %639 = shufflevector <1 x i8> %502, <1 x i8> %504, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %640 = shufflevector <4 x i8> %639, <4 x i8> %507, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %641 = shufflevector <4 x i8> %640, <4 x i8> %510, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %642 = bitcast <4 x i8> %641 to i32, !dbg !57
  %643 = shufflevector <1 x i8> %512, <1 x i8> %514, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %644 = shufflevector <4 x i8> %643, <4 x i8> %517, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %645 = shufflevector <4 x i8> %644, <4 x i8> %520, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %646 = bitcast <4 x i8> %645 to i32, !dbg !57
  %647 = shufflevector <1 x i8> %522, <1 x i8> %524, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %648 = shufflevector <4 x i8> %647, <4 x i8> %527, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %649 = shufflevector <4 x i8> %648, <4 x i8> %530, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %650 = bitcast <4 x i8> %649 to i32, !dbg !57
  %651 = shufflevector <1 x i8> %538, <1 x i8> %541, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %652 = shufflevector <4 x i8> %651, <4 x i8> %545, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %653 = shufflevector <4 x i8> %652, <4 x i8> %549, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %654 = bitcast <4 x i8> %653 to i32, !dbg !57
  %655 = shufflevector <1 x i8> %551, <1 x i8> %553, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %656 = shufflevector <4 x i8> %655, <4 x i8> %556, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %657 = shufflevector <4 x i8> %656, <4 x i8> %559, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %658 = bitcast <4 x i8> %657 to i32, !dbg !57
  %659 = insertelement <4 x float> poison, float %348, i64 0, !dbg !57
  %660 = insertelement <4 x float> %659, float %349, i64 1, !dbg !57
  %661 = insertelement <4 x float> %660, float %350, i64 2, !dbg !57
  %662 = insertelement <4 x float> %661, float %351, i64 3, !dbg !57
  %663 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %619, <4 x i32> %574, <4 x float> %662, i32 4, i32 4, i32 0, i32 %654, i32 0, i32 %638), !dbg !57
  %664 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %622, <4 x i32> %577, <4 x float> %663, i32 4, i32 4, i32 2, i32 %654, i32 2, i32 %638), !dbg !57
  %665 = extractelement <4 x float> %664, i64 0, !dbg !57
  %666 = extractelement <4 x float> %664, i64 1, !dbg !57
  %667 = extractelement <4 x float> %664, i64 2, !dbg !57
  %668 = extractelement <4 x float> %664, i64 3, !dbg !57
  %669 = insertelement <4 x float> poison, float %352, i64 0, !dbg !57
  %670 = insertelement <4 x float> %669, float %353, i64 1, !dbg !57
  %671 = insertelement <4 x float> %670, float %354, i64 2, !dbg !57
  %672 = insertelement <4 x float> %671, float %355, i64 3, !dbg !57
  %673 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %624, <4 x i32> %574, <4 x float> %672, i32 4, i32 4, i32 1, i32 %654, i32 0, i32 %638), !dbg !57
  %674 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %626, <4 x i32> %577, <4 x float> %673, i32 4, i32 4, i32 3, i32 %654, i32 2, i32 %638), !dbg !57
  %675 = extractelement <4 x float> %674, i64 0, !dbg !57
  %676 = extractelement <4 x float> %674, i64 1, !dbg !57
  %677 = extractelement <4 x float> %674, i64 2, !dbg !57
  %678 = extractelement <4 x float> %674, i64 3, !dbg !57
  %679 = insertelement <4 x float> poison, float %356, i64 0, !dbg !57
  %680 = insertelement <4 x float> %679, float %357, i64 1, !dbg !57
  %681 = insertelement <4 x float> %680, float %358, i64 2, !dbg !57
  %682 = insertelement <4 x float> %681, float %359, i64 3, !dbg !57
  %683 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %619, <4 x i32> %579, <4 x float> %682, i32 4, i32 4, i32 0, i32 %654, i32 1, i32 %638), !dbg !57
  %684 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %622, <4 x i32> %581, <4 x float> %683, i32 4, i32 4, i32 2, i32 %654, i32 3, i32 %638), !dbg !57
  %685 = extractelement <4 x float> %684, i64 0, !dbg !57
  %686 = extractelement <4 x float> %684, i64 1, !dbg !57
  %687 = extractelement <4 x float> %684, i64 2, !dbg !57
  %688 = extractelement <4 x float> %684, i64 3, !dbg !57
  %689 = insertelement <4 x float> poison, float %360, i64 0, !dbg !57
  %690 = insertelement <4 x float> %689, float %361, i64 1, !dbg !57
  %691 = insertelement <4 x float> %690, float %362, i64 2, !dbg !57
  %692 = insertelement <4 x float> %691, float %363, i64 3, !dbg !57
  %693 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %624, <4 x i32> %579, <4 x float> %692, i32 4, i32 4, i32 1, i32 %654, i32 1, i32 %638), !dbg !57
  %694 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %626, <4 x i32> %581, <4 x float> %693, i32 4, i32 4, i32 3, i32 %654, i32 3, i32 %638), !dbg !57
  %695 = extractelement <4 x float> %694, i64 0, !dbg !57
  %696 = extractelement <4 x float> %694, i64 1, !dbg !57
  %697 = extractelement <4 x float> %694, i64 2, !dbg !57
  %698 = extractelement <4 x float> %694, i64 3, !dbg !57
  %699 = insertelement <4 x float> poison, float %364, i64 0, !dbg !57
  %700 = insertelement <4 x float> %699, float %365, i64 1, !dbg !57
  %701 = insertelement <4 x float> %700, float %366, i64 2, !dbg !57
  %702 = insertelement <4 x float> %701, float %367, i64 3, !dbg !57
  %703 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %628, <4 x i32> %574, <4 x float> %702, i32 4, i32 4, i32 0, i32 %658, i32 0, i32 %638), !dbg !57
  %704 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %630, <4 x i32> %577, <4 x float> %703, i32 4, i32 4, i32 2, i32 %658, i32 2, i32 %638), !dbg !57
  %705 = extractelement <4 x float> %704, i64 0, !dbg !57
  %706 = extractelement <4 x float> %704, i64 1, !dbg !57
  %707 = extractelement <4 x float> %704, i64 2, !dbg !57
  %708 = extractelement <4 x float> %704, i64 3, !dbg !57
  %709 = insertelement <4 x float> poison, float %368, i64 0, !dbg !57
  %710 = insertelement <4 x float> %709, float %369, i64 1, !dbg !57
  %711 = insertelement <4 x float> %710, float %370, i64 2, !dbg !57
  %712 = insertelement <4 x float> %711, float %371, i64 3, !dbg !57
  %713 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %632, <4 x i32> %574, <4 x float> %712, i32 4, i32 4, i32 1, i32 %658, i32 0, i32 %638), !dbg !57
  %714 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %634, <4 x i32> %577, <4 x float> %713, i32 4, i32 4, i32 3, i32 %658, i32 2, i32 %638), !dbg !57
  %715 = extractelement <4 x float> %714, i64 0, !dbg !57
  %716 = extractelement <4 x float> %714, i64 1, !dbg !57
  %717 = extractelement <4 x float> %714, i64 2, !dbg !57
  %718 = extractelement <4 x float> %714, i64 3, !dbg !57
  %719 = insertelement <4 x float> poison, float %372, i64 0, !dbg !57
  %720 = insertelement <4 x float> %719, float %373, i64 1, !dbg !57
  %721 = insertelement <4 x float> %720, float %374, i64 2, !dbg !57
  %722 = insertelement <4 x float> %721, float %375, i64 3, !dbg !57
  %723 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %628, <4 x i32> %579, <4 x float> %722, i32 4, i32 4, i32 0, i32 %658, i32 1, i32 %638), !dbg !57
  %724 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %630, <4 x i32> %581, <4 x float> %723, i32 4, i32 4, i32 2, i32 %658, i32 3, i32 %638), !dbg !57
  %725 = extractelement <4 x float> %724, i64 0, !dbg !57
  %726 = extractelement <4 x float> %724, i64 1, !dbg !57
  %727 = extractelement <4 x float> %724, i64 2, !dbg !57
  %728 = extractelement <4 x float> %724, i64 3, !dbg !57
  %729 = insertelement <4 x float> poison, float %376, i64 0, !dbg !57
  %730 = insertelement <4 x float> %729, float %377, i64 1, !dbg !57
  %731 = insertelement <4 x float> %730, float %378, i64 2, !dbg !57
  %732 = insertelement <4 x float> %731, float %379, i64 3, !dbg !57
  %733 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %632, <4 x i32> %579, <4 x float> %732, i32 4, i32 4, i32 1, i32 %658, i32 1, i32 %638), !dbg !57
  %734 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %634, <4 x i32> %581, <4 x float> %733, i32 4, i32 4, i32 3, i32 %658, i32 3, i32 %638), !dbg !57
  %735 = extractelement <4 x float> %734, i64 0, !dbg !57
  %736 = extractelement <4 x float> %734, i64 1, !dbg !57
  %737 = extractelement <4 x float> %734, i64 2, !dbg !57
  %738 = extractelement <4 x float> %734, i64 3, !dbg !57
  %739 = insertelement <4 x float> poison, float %380, i64 0, !dbg !57
  %740 = insertelement <4 x float> %739, float %381, i64 1, !dbg !57
  %741 = insertelement <4 x float> %740, float %382, i64 2, !dbg !57
  %742 = insertelement <4 x float> %741, float %383, i64 3, !dbg !57
  %743 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %619, <4 x i32> %583, <4 x float> %742, i32 4, i32 4, i32 0, i32 %654, i32 0, i32 %642), !dbg !57
  %744 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %622, <4 x i32> %585, <4 x float> %743, i32 4, i32 4, i32 2, i32 %654, i32 2, i32 %642), !dbg !57
  %745 = extractelement <4 x float> %744, i64 0, !dbg !57
  %746 = extractelement <4 x float> %744, i64 1, !dbg !57
  %747 = extractelement <4 x float> %744, i64 2, !dbg !57
  %748 = extractelement <4 x float> %744, i64 3, !dbg !57
  %749 = insertelement <4 x float> poison, float %384, i64 0, !dbg !57
  %750 = insertelement <4 x float> %749, float %385, i64 1, !dbg !57
  %751 = insertelement <4 x float> %750, float %386, i64 2, !dbg !57
  %752 = insertelement <4 x float> %751, float %387, i64 3, !dbg !57
  %753 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %624, <4 x i32> %583, <4 x float> %752, i32 4, i32 4, i32 1, i32 %654, i32 0, i32 %642), !dbg !57
  %754 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %626, <4 x i32> %585, <4 x float> %753, i32 4, i32 4, i32 3, i32 %654, i32 2, i32 %642), !dbg !57
  %755 = extractelement <4 x float> %754, i64 0, !dbg !57
  %756 = extractelement <4 x float> %754, i64 1, !dbg !57
  %757 = extractelement <4 x float> %754, i64 2, !dbg !57
  %758 = extractelement <4 x float> %754, i64 3, !dbg !57
  %759 = insertelement <4 x float> poison, float %388, i64 0, !dbg !57
  %760 = insertelement <4 x float> %759, float %389, i64 1, !dbg !57
  %761 = insertelement <4 x float> %760, float %390, i64 2, !dbg !57
  %762 = insertelement <4 x float> %761, float %391, i64 3, !dbg !57
  %763 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %619, <4 x i32> %587, <4 x float> %762, i32 4, i32 4, i32 0, i32 %654, i32 1, i32 %642), !dbg !57
  %764 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %622, <4 x i32> %589, <4 x float> %763, i32 4, i32 4, i32 2, i32 %654, i32 3, i32 %642), !dbg !57
  %765 = extractelement <4 x float> %764, i64 0, !dbg !57
  %766 = extractelement <4 x float> %764, i64 1, !dbg !57
  %767 = extractelement <4 x float> %764, i64 2, !dbg !57
  %768 = extractelement <4 x float> %764, i64 3, !dbg !57
  %769 = insertelement <4 x float> poison, float %392, i64 0, !dbg !57
  %770 = insertelement <4 x float> %769, float %393, i64 1, !dbg !57
  %771 = insertelement <4 x float> %770, float %394, i64 2, !dbg !57
  %772 = insertelement <4 x float> %771, float %395, i64 3, !dbg !57
  %773 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %624, <4 x i32> %587, <4 x float> %772, i32 4, i32 4, i32 1, i32 %654, i32 1, i32 %642), !dbg !57
  %774 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %626, <4 x i32> %589, <4 x float> %773, i32 4, i32 4, i32 3, i32 %654, i32 3, i32 %642), !dbg !57
  %775 = extractelement <4 x float> %774, i64 0, !dbg !57
  %776 = extractelement <4 x float> %774, i64 1, !dbg !57
  %777 = extractelement <4 x float> %774, i64 2, !dbg !57
  %778 = extractelement <4 x float> %774, i64 3, !dbg !57
  %779 = insertelement <4 x float> poison, float %396, i64 0, !dbg !57
  %780 = insertelement <4 x float> %779, float %397, i64 1, !dbg !57
  %781 = insertelement <4 x float> %780, float %398, i64 2, !dbg !57
  %782 = insertelement <4 x float> %781, float %399, i64 3, !dbg !57
  %783 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %628, <4 x i32> %583, <4 x float> %782, i32 4, i32 4, i32 0, i32 %658, i32 0, i32 %642), !dbg !57
  %784 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %630, <4 x i32> %585, <4 x float> %783, i32 4, i32 4, i32 2, i32 %658, i32 2, i32 %642), !dbg !57
  %785 = extractelement <4 x float> %784, i64 0, !dbg !57
  %786 = extractelement <4 x float> %784, i64 1, !dbg !57
  %787 = extractelement <4 x float> %784, i64 2, !dbg !57
  %788 = extractelement <4 x float> %784, i64 3, !dbg !57
  %789 = insertelement <4 x float> poison, float %400, i64 0, !dbg !57
  %790 = insertelement <4 x float> %789, float %401, i64 1, !dbg !57
  %791 = insertelement <4 x float> %790, float %402, i64 2, !dbg !57
  %792 = insertelement <4 x float> %791, float %403, i64 3, !dbg !57
  %793 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %632, <4 x i32> %583, <4 x float> %792, i32 4, i32 4, i32 1, i32 %658, i32 0, i32 %642), !dbg !57
  %794 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %634, <4 x i32> %585, <4 x float> %793, i32 4, i32 4, i32 3, i32 %658, i32 2, i32 %642), !dbg !57
  %795 = extractelement <4 x float> %794, i64 0, !dbg !57
  %796 = extractelement <4 x float> %794, i64 1, !dbg !57
  %797 = extractelement <4 x float> %794, i64 2, !dbg !57
  %798 = extractelement <4 x float> %794, i64 3, !dbg !57
  %799 = insertelement <4 x float> poison, float %404, i64 0, !dbg !57
  %800 = insertelement <4 x float> %799, float %405, i64 1, !dbg !57
  %801 = insertelement <4 x float> %800, float %406, i64 2, !dbg !57
  %802 = insertelement <4 x float> %801, float %407, i64 3, !dbg !57
  %803 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %628, <4 x i32> %587, <4 x float> %802, i32 4, i32 4, i32 0, i32 %658, i32 1, i32 %642), !dbg !57
  %804 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %630, <4 x i32> %589, <4 x float> %803, i32 4, i32 4, i32 2, i32 %658, i32 3, i32 %642), !dbg !57
  %805 = extractelement <4 x float> %804, i64 0, !dbg !57
  %806 = extractelement <4 x float> %804, i64 1, !dbg !57
  %807 = extractelement <4 x float> %804, i64 2, !dbg !57
  %808 = extractelement <4 x float> %804, i64 3, !dbg !57
  %809 = insertelement <4 x float> poison, float %408, i64 0, !dbg !57
  %810 = insertelement <4 x float> %809, float %409, i64 1, !dbg !57
  %811 = insertelement <4 x float> %810, float %410, i64 2, !dbg !57
  %812 = insertelement <4 x float> %811, float %411, i64 3, !dbg !57
  %813 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %632, <4 x i32> %587, <4 x float> %812, i32 4, i32 4, i32 1, i32 %658, i32 1, i32 %642), !dbg !57
  %814 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %634, <4 x i32> %589, <4 x float> %813, i32 4, i32 4, i32 3, i32 %658, i32 3, i32 %642), !dbg !57
  %815 = extractelement <4 x float> %814, i64 0, !dbg !57
  %816 = extractelement <4 x float> %814, i64 1, !dbg !57
  %817 = extractelement <4 x float> %814, i64 2, !dbg !57
  %818 = extractelement <4 x float> %814, i64 3, !dbg !57
  %819 = insertelement <4 x float> poison, float %412, i64 0, !dbg !57
  %820 = insertelement <4 x float> %819, float %413, i64 1, !dbg !57
  %821 = insertelement <4 x float> %820, float %414, i64 2, !dbg !57
  %822 = insertelement <4 x float> %821, float %415, i64 3, !dbg !57
  %823 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %619, <4 x i32> %591, <4 x float> %822, i32 4, i32 4, i32 0, i32 %654, i32 0, i32 %646), !dbg !57
  %824 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %622, <4 x i32> %593, <4 x float> %823, i32 4, i32 4, i32 2, i32 %654, i32 2, i32 %646), !dbg !57
  %825 = extractelement <4 x float> %824, i64 0, !dbg !57
  %826 = extractelement <4 x float> %824, i64 1, !dbg !57
  %827 = extractelement <4 x float> %824, i64 2, !dbg !57
  %828 = extractelement <4 x float> %824, i64 3, !dbg !57
  %829 = insertelement <4 x float> poison, float %416, i64 0, !dbg !57
  %830 = insertelement <4 x float> %829, float %417, i64 1, !dbg !57
  %831 = insertelement <4 x float> %830, float %418, i64 2, !dbg !57
  %832 = insertelement <4 x float> %831, float %419, i64 3, !dbg !57
  %833 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %624, <4 x i32> %591, <4 x float> %832, i32 4, i32 4, i32 1, i32 %654, i32 0, i32 %646), !dbg !57
  %834 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %626, <4 x i32> %593, <4 x float> %833, i32 4, i32 4, i32 3, i32 %654, i32 2, i32 %646), !dbg !57
  %835 = extractelement <4 x float> %834, i64 0, !dbg !57
  %836 = extractelement <4 x float> %834, i64 1, !dbg !57
  %837 = extractelement <4 x float> %834, i64 2, !dbg !57
  %838 = extractelement <4 x float> %834, i64 3, !dbg !57
  %839 = insertelement <4 x float> poison, float %420, i64 0, !dbg !57
  %840 = insertelement <4 x float> %839, float %421, i64 1, !dbg !57
  %841 = insertelement <4 x float> %840, float %422, i64 2, !dbg !57
  %842 = insertelement <4 x float> %841, float %423, i64 3, !dbg !57
  %843 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %619, <4 x i32> %595, <4 x float> %842, i32 4, i32 4, i32 0, i32 %654, i32 1, i32 %646), !dbg !57
  %844 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %622, <4 x i32> %597, <4 x float> %843, i32 4, i32 4, i32 2, i32 %654, i32 3, i32 %646), !dbg !57
  %845 = extractelement <4 x float> %844, i64 0, !dbg !57
  %846 = extractelement <4 x float> %844, i64 1, !dbg !57
  %847 = extractelement <4 x float> %844, i64 2, !dbg !57
  %848 = extractelement <4 x float> %844, i64 3, !dbg !57
  %849 = insertelement <4 x float> poison, float %424, i64 0, !dbg !57
  %850 = insertelement <4 x float> %849, float %425, i64 1, !dbg !57
  %851 = insertelement <4 x float> %850, float %426, i64 2, !dbg !57
  %852 = insertelement <4 x float> %851, float %427, i64 3, !dbg !57
  %853 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %624, <4 x i32> %595, <4 x float> %852, i32 4, i32 4, i32 1, i32 %654, i32 1, i32 %646), !dbg !57
  %854 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %626, <4 x i32> %597, <4 x float> %853, i32 4, i32 4, i32 3, i32 %654, i32 3, i32 %646), !dbg !57
  %855 = extractelement <4 x float> %854, i64 0, !dbg !57
  %856 = extractelement <4 x float> %854, i64 1, !dbg !57
  %857 = extractelement <4 x float> %854, i64 2, !dbg !57
  %858 = extractelement <4 x float> %854, i64 3, !dbg !57
  %859 = insertelement <4 x float> poison, float %428, i64 0, !dbg !57
  %860 = insertelement <4 x float> %859, float %429, i64 1, !dbg !57
  %861 = insertelement <4 x float> %860, float %430, i64 2, !dbg !57
  %862 = insertelement <4 x float> %861, float %431, i64 3, !dbg !57
  %863 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %628, <4 x i32> %591, <4 x float> %862, i32 4, i32 4, i32 0, i32 %658, i32 0, i32 %646), !dbg !57
  %864 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %630, <4 x i32> %593, <4 x float> %863, i32 4, i32 4, i32 2, i32 %658, i32 2, i32 %646), !dbg !57
  %865 = extractelement <4 x float> %864, i64 0, !dbg !57
  %866 = extractelement <4 x float> %864, i64 1, !dbg !57
  %867 = extractelement <4 x float> %864, i64 2, !dbg !57
  %868 = extractelement <4 x float> %864, i64 3, !dbg !57
  %869 = insertelement <4 x float> poison, float %432, i64 0, !dbg !57
  %870 = insertelement <4 x float> %869, float %433, i64 1, !dbg !57
  %871 = insertelement <4 x float> %870, float %434, i64 2, !dbg !57
  %872 = insertelement <4 x float> %871, float %435, i64 3, !dbg !57
  %873 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %632, <4 x i32> %591, <4 x float> %872, i32 4, i32 4, i32 1, i32 %658, i32 0, i32 %646), !dbg !57
  %874 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %634, <4 x i32> %593, <4 x float> %873, i32 4, i32 4, i32 3, i32 %658, i32 2, i32 %646), !dbg !57
  %875 = extractelement <4 x float> %874, i64 0, !dbg !57
  %876 = extractelement <4 x float> %874, i64 1, !dbg !57
  %877 = extractelement <4 x float> %874, i64 2, !dbg !57
  %878 = extractelement <4 x float> %874, i64 3, !dbg !57
  %879 = insertelement <4 x float> poison, float %436, i64 0, !dbg !57
  %880 = insertelement <4 x float> %879, float %437, i64 1, !dbg !57
  %881 = insertelement <4 x float> %880, float %438, i64 2, !dbg !57
  %882 = insertelement <4 x float> %881, float %439, i64 3, !dbg !57
  %883 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %628, <4 x i32> %595, <4 x float> %882, i32 4, i32 4, i32 0, i32 %658, i32 1, i32 %646), !dbg !57
  %884 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %630, <4 x i32> %597, <4 x float> %883, i32 4, i32 4, i32 2, i32 %658, i32 3, i32 %646), !dbg !57
  %885 = extractelement <4 x float> %884, i64 0, !dbg !57
  %886 = extractelement <4 x float> %884, i64 1, !dbg !57
  %887 = extractelement <4 x float> %884, i64 2, !dbg !57
  %888 = extractelement <4 x float> %884, i64 3, !dbg !57
  %889 = insertelement <4 x float> poison, float %440, i64 0, !dbg !57
  %890 = insertelement <4 x float> %889, float %441, i64 1, !dbg !57
  %891 = insertelement <4 x float> %890, float %442, i64 2, !dbg !57
  %892 = insertelement <4 x float> %891, float %443, i64 3, !dbg !57
  %893 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %632, <4 x i32> %595, <4 x float> %892, i32 4, i32 4, i32 1, i32 %658, i32 1, i32 %646), !dbg !57
  %894 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %634, <4 x i32> %597, <4 x float> %893, i32 4, i32 4, i32 3, i32 %658, i32 3, i32 %646), !dbg !57
  %895 = extractelement <4 x float> %894, i64 0, !dbg !57
  %896 = extractelement <4 x float> %894, i64 1, !dbg !57
  %897 = extractelement <4 x float> %894, i64 2, !dbg !57
  %898 = extractelement <4 x float> %894, i64 3, !dbg !57
  %899 = insertelement <4 x float> poison, float %444, i64 0, !dbg !57
  %900 = insertelement <4 x float> %899, float %445, i64 1, !dbg !57
  %901 = insertelement <4 x float> %900, float %446, i64 2, !dbg !57
  %902 = insertelement <4 x float> %901, float %447, i64 3, !dbg !57
  %903 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %619, <4 x i32> %599, <4 x float> %902, i32 4, i32 4, i32 0, i32 %654, i32 0, i32 %650), !dbg !57
  %904 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %622, <4 x i32> %601, <4 x float> %903, i32 4, i32 4, i32 2, i32 %654, i32 2, i32 %650), !dbg !57
  %905 = extractelement <4 x float> %904, i64 0, !dbg !57
  %906 = extractelement <4 x float> %904, i64 1, !dbg !57
  %907 = extractelement <4 x float> %904, i64 2, !dbg !57
  %908 = extractelement <4 x float> %904, i64 3, !dbg !57
  %909 = insertelement <4 x float> poison, float %448, i64 0, !dbg !57
  %910 = insertelement <4 x float> %909, float %449, i64 1, !dbg !57
  %911 = insertelement <4 x float> %910, float %450, i64 2, !dbg !57
  %912 = insertelement <4 x float> %911, float %451, i64 3, !dbg !57
  %913 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %624, <4 x i32> %599, <4 x float> %912, i32 4, i32 4, i32 1, i32 %654, i32 0, i32 %650), !dbg !57
  %914 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %626, <4 x i32> %601, <4 x float> %913, i32 4, i32 4, i32 3, i32 %654, i32 2, i32 %650), !dbg !57
  %915 = extractelement <4 x float> %914, i64 0, !dbg !57
  %916 = extractelement <4 x float> %914, i64 1, !dbg !57
  %917 = extractelement <4 x float> %914, i64 2, !dbg !57
  %918 = extractelement <4 x float> %914, i64 3, !dbg !57
  %919 = insertelement <4 x float> poison, float %452, i64 0, !dbg !57
  %920 = insertelement <4 x float> %919, float %453, i64 1, !dbg !57
  %921 = insertelement <4 x float> %920, float %454, i64 2, !dbg !57
  %922 = insertelement <4 x float> %921, float %455, i64 3, !dbg !57
  %923 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %619, <4 x i32> %603, <4 x float> %922, i32 4, i32 4, i32 0, i32 %654, i32 1, i32 %650), !dbg !57
  %924 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %622, <4 x i32> %605, <4 x float> %923, i32 4, i32 4, i32 2, i32 %654, i32 3, i32 %650), !dbg !57
  %925 = extractelement <4 x float> %924, i64 0, !dbg !57
  %926 = extractelement <4 x float> %924, i64 1, !dbg !57
  %927 = extractelement <4 x float> %924, i64 2, !dbg !57
  %928 = extractelement <4 x float> %924, i64 3, !dbg !57
  %929 = insertelement <4 x float> poison, float %456, i64 0, !dbg !57
  %930 = insertelement <4 x float> %929, float %457, i64 1, !dbg !57
  %931 = insertelement <4 x float> %930, float %458, i64 2, !dbg !57
  %932 = insertelement <4 x float> %931, float %459, i64 3, !dbg !57
  %933 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %624, <4 x i32> %603, <4 x float> %932, i32 4, i32 4, i32 1, i32 %654, i32 1, i32 %650), !dbg !57
  %934 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %626, <4 x i32> %605, <4 x float> %933, i32 4, i32 4, i32 3, i32 %654, i32 3, i32 %650), !dbg !57
  %935 = extractelement <4 x float> %934, i64 0, !dbg !57
  %936 = extractelement <4 x float> %934, i64 1, !dbg !57
  %937 = extractelement <4 x float> %934, i64 2, !dbg !57
  %938 = extractelement <4 x float> %934, i64 3, !dbg !57
  %939 = insertelement <4 x float> poison, float %460, i64 0, !dbg !57
  %940 = insertelement <4 x float> %939, float %461, i64 1, !dbg !57
  %941 = insertelement <4 x float> %940, float %462, i64 2, !dbg !57
  %942 = insertelement <4 x float> %941, float %463, i64 3, !dbg !57
  %943 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %628, <4 x i32> %599, <4 x float> %942, i32 4, i32 4, i32 0, i32 %658, i32 0, i32 %650), !dbg !57
  %944 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %630, <4 x i32> %601, <4 x float> %943, i32 4, i32 4, i32 2, i32 %658, i32 2, i32 %650), !dbg !57
  %945 = extractelement <4 x float> %944, i64 0, !dbg !57
  %946 = extractelement <4 x float> %944, i64 1, !dbg !57
  %947 = extractelement <4 x float> %944, i64 2, !dbg !57
  %948 = extractelement <4 x float> %944, i64 3, !dbg !57
  %949 = insertelement <4 x float> poison, float %464, i64 0, !dbg !57
  %950 = insertelement <4 x float> %949, float %465, i64 1, !dbg !57
  %951 = insertelement <4 x float> %950, float %466, i64 2, !dbg !57
  %952 = insertelement <4 x float> %951, float %467, i64 3, !dbg !57
  %953 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %632, <4 x i32> %599, <4 x float> %952, i32 4, i32 4, i32 1, i32 %658, i32 0, i32 %650), !dbg !57
  %954 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %634, <4 x i32> %601, <4 x float> %953, i32 4, i32 4, i32 3, i32 %658, i32 2, i32 %650), !dbg !57
  %955 = extractelement <4 x float> %954, i64 0, !dbg !57
  %956 = extractelement <4 x float> %954, i64 1, !dbg !57
  %957 = extractelement <4 x float> %954, i64 2, !dbg !57
  %958 = extractelement <4 x float> %954, i64 3, !dbg !57
  %959 = insertelement <4 x float> poison, float %468, i64 0, !dbg !57
  %960 = insertelement <4 x float> %959, float %469, i64 1, !dbg !57
  %961 = insertelement <4 x float> %960, float %470, i64 2, !dbg !57
  %962 = insertelement <4 x float> %961, float %471, i64 3, !dbg !57
  %963 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %628, <4 x i32> %603, <4 x float> %962, i32 4, i32 4, i32 0, i32 %658, i32 1, i32 %650), !dbg !57
  %964 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %630, <4 x i32> %605, <4 x float> %963, i32 4, i32 4, i32 2, i32 %658, i32 3, i32 %650), !dbg !57
  %965 = extractelement <4 x float> %964, i64 0, !dbg !57
  %966 = extractelement <4 x float> %964, i64 1, !dbg !57
  %967 = extractelement <4 x float> %964, i64 2, !dbg !57
  %968 = extractelement <4 x float> %964, i64 3, !dbg !57
  %969 = insertelement <4 x float> poison, float %472, i64 0, !dbg !57
  %970 = insertelement <4 x float> %969, float %473, i64 1, !dbg !57
  %971 = insertelement <4 x float> %970, float %474, i64 2, !dbg !57
  %972 = insertelement <4 x float> %971, float %475, i64 3, !dbg !57
  %973 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %632, <4 x i32> %603, <4 x float> %972, i32 4, i32 4, i32 1, i32 %658, i32 1, i32 %650), !dbg !57
  %974 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %634, <4 x i32> %605, <4 x float> %973, i32 4, i32 4, i32 3, i32 %658, i32 3, i32 %650), !dbg !57
  %975 = extractelement <4 x float> %974, i64 0, !dbg !57
  %976 = extractelement <4 x float> %974, i64 1, !dbg !57
  %977 = extractelement <4 x float> %974, i64 2, !dbg !57
  %978 = extractelement <4 x float> %974, i64 3, !dbg !57
  %979 = add nuw nsw i32 %476, 1, !dbg !52
  %exitcond.not = icmp eq i32 %979, 62, !dbg !52
  br i1 %exitcond.not, label %980, label %334, !dbg !52

980:                                              ; preds = %334
  %981 = or disjoint i32 %36, 32, !dbg !20
  %982 = or disjoint i32 %36, 48, !dbg !20
  %983 = or disjoint i32 %36, 64, !dbg !20
  %984 = or disjoint i32 %36, 80, !dbg !20
  %985 = or disjoint i32 %36, 96, !dbg !20
  %986 = or disjoint i32 %36, 112, !dbg !20
  %987 = lshr i32 %23, 2, !dbg !25
  %988 = and i32 %987, 12, !dbg !25
  %989 = or disjoint i32 %50, %988, !dbg !25
  %990 = or disjoint i32 %989, %52, !dbg !25
  %991 = or disjoint i32 %990, 16, !dbg !25
  %992 = or disjoint i32 %990, 128, !dbg !25
  %993 = or disjoint i32 %990, 144, !dbg !25
  tail call void @llvm.amdgcn.s.waitcnt(i32 -49168), !dbg !41
  fence syncscope("workgroup") release, !dbg !41
  tail call void @llvm.amdgcn.s.barrier(), !dbg !41
  fence syncscope("workgroup") acquire, !dbg !41
  %994 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %302, !dbg !53
  %995 = load <1 x i8>, ptr addrspace(3) %994, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %996 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %303, !dbg !53
  %997 = load <1 x i8>, ptr addrspace(3) %996, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %998 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %304, !dbg !53
  %999 = load <1 x i8>, ptr addrspace(3) %998, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1000 = shufflevector <1 x i8> %999, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1001 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %305, !dbg !53
  %1002 = load <1 x i8>, ptr addrspace(3) %1001, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1003 = shufflevector <1 x i8> %1002, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1004 = or disjoint i32 %302, 256, !dbg !53
  %1005 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1004, !dbg !53
  %1006 = load <1 x i8>, ptr addrspace(3) %1005, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1007 = or disjoint i32 %302, 320, !dbg !53
  %1008 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1007, !dbg !53
  %1009 = load <1 x i8>, ptr addrspace(3) %1008, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1010 = or disjoint i32 %302, 384, !dbg !53
  %1011 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1010, !dbg !53
  %1012 = load <1 x i8>, ptr addrspace(3) %1011, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1013 = shufflevector <1 x i8> %1012, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1014 = or disjoint i32 %302, 448, !dbg !53
  %1015 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1014, !dbg !53
  %1016 = load <1 x i8>, ptr addrspace(3) %1015, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1017 = shufflevector <1 x i8> %1016, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1018 = or disjoint i32 %302, 512, !dbg !53
  %1019 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1018, !dbg !53
  %1020 = load <1 x i8>, ptr addrspace(3) %1019, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1021 = or disjoint i32 %302, 576, !dbg !53
  %1022 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1021, !dbg !53
  %1023 = load <1 x i8>, ptr addrspace(3) %1022, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1024 = or disjoint i32 %302, 640, !dbg !53
  %1025 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1024, !dbg !53
  %1026 = load <1 x i8>, ptr addrspace(3) %1025, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1027 = shufflevector <1 x i8> %1026, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1028 = or disjoint i32 %302, 704, !dbg !53
  %1029 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1028, !dbg !53
  %1030 = load <1 x i8>, ptr addrspace(3) %1029, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1031 = shufflevector <1 x i8> %1030, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1032 = or disjoint i32 %302, 768, !dbg !53
  %1033 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1032, !dbg !53
  %1034 = load <1 x i8>, ptr addrspace(3) %1033, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1035 = or disjoint i32 %302, 832, !dbg !53
  %1036 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1035, !dbg !53
  %1037 = load <1 x i8>, ptr addrspace(3) %1036, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1038 = or disjoint i32 %302, 896, !dbg !53
  %1039 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1038, !dbg !53
  %1040 = load <1 x i8>, ptr addrspace(3) %1039, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1041 = shufflevector <1 x i8> %1040, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1042 = or disjoint i32 %302, 960, !dbg !53
  %1043 = getelementptr inbounds nuw i8, ptr addrspace(3) %342, i32 %1042, !dbg !53
  %1044 = load <1 x i8>, ptr addrspace(3) %1043, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1045 = shufflevector <1 x i8> %1044, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1046 = or disjoint i32 %302, %306, !dbg !56
  %1047 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %1046, !dbg !56
  %1048 = load <1 x i8>, ptr addrspace(3) %1047, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1049 = or disjoint i32 %303, %306, !dbg !56
  %1050 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %1049, !dbg !56
  %1051 = load <1 x i8>, ptr addrspace(3) %1050, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1052 = or disjoint i32 %304, %306, !dbg !56
  %1053 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %1052, !dbg !56
  %1054 = load <1 x i8>, ptr addrspace(3) %1053, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1055 = shufflevector <1 x i8> %1054, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1056 = or disjoint i32 %305, %306, !dbg !56
  %1057 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %1056, !dbg !56
  %1058 = load <1 x i8>, ptr addrspace(3) %1057, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1059 = shufflevector <1 x i8> %1058, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1060 = or disjoint i32 %302, %307, !dbg !56
  %1061 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %1060, !dbg !56
  %1062 = load <1 x i8>, ptr addrspace(3) %1061, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1063 = or disjoint i32 %303, %307, !dbg !56
  %1064 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %1063, !dbg !56
  %1065 = load <1 x i8>, ptr addrspace(3) %1064, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1066 = or disjoint i32 %304, %307, !dbg !56
  %1067 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %1066, !dbg !56
  %1068 = load <1 x i8>, ptr addrspace(3) %1067, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1069 = shufflevector <1 x i8> %1068, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1070 = or disjoint i32 %305, %307, !dbg !56
  %1071 = getelementptr inbounds nuw i8, ptr addrspace(3) %340, i32 %1070, !dbg !56
  %1072 = load <1 x i8>, ptr addrspace(3) %1071, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1073 = shufflevector <1 x i8> %1072, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1074 = and i32 %308, 48, !dbg !46
  %1075 = or disjoint i32 %1074, %311, !dbg !46
  %1076 = xor i32 %1075, %and.ra45, !dbg !46
  %1077 = or disjoint i32 %1076, %314, !dbg !46
  %1078 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1077, !dbg !46
  %1079 = load <4 x i32>, ptr addrspace(3) %1078, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1080 = or disjoint i32 %1074, 64, !dbg !46
  %1081 = xor i32 %316, %1080, !dbg !46
  %1082 = or disjoint i32 %1081, %314, !dbg !46
  %1083 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1082, !dbg !46
  %1084 = load <4 x i32>, ptr addrspace(3) %1083, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1085 = or disjoint i32 %1076, %318, !dbg !46
  %1086 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1085, !dbg !46
  %1087 = load <4 x i32>, ptr addrspace(3) %1086, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1088 = or disjoint i32 %1081, %318, !dbg !46
  %1089 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1088, !dbg !46
  %1090 = load <4 x i32>, ptr addrspace(3) %1089, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1091 = or disjoint i32 %1076, %321, !dbg !46
  %1092 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1091, !dbg !46
  %1093 = load <4 x i32>, ptr addrspace(3) %1092, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1094 = or disjoint i32 %1081, %321, !dbg !46
  %1095 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1094, !dbg !46
  %1096 = load <4 x i32>, ptr addrspace(3) %1095, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1097 = or disjoint i32 %1076, %322, !dbg !46
  %1098 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1097, !dbg !46
  %1099 = load <4 x i32>, ptr addrspace(3) %1098, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1100 = or disjoint i32 %1081, %322, !dbg !46
  %1101 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1100, !dbg !46
  %1102 = load <4 x i32>, ptr addrspace(3) %1101, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1103 = or disjoint i32 %1076, %323, !dbg !46
  %1104 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1103, !dbg !46
  %1105 = load <4 x i32>, ptr addrspace(3) %1104, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1106 = or disjoint i32 %1081, %323, !dbg !46
  %1107 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1106, !dbg !46
  %1108 = load <4 x i32>, ptr addrspace(3) %1107, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1109 = or disjoint i32 %1076, %324, !dbg !46
  %1110 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1109, !dbg !46
  %1111 = load <4 x i32>, ptr addrspace(3) %1110, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1112 = or disjoint i32 %1081, %324, !dbg !46
  %1113 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1112, !dbg !46
  %1114 = load <4 x i32>, ptr addrspace(3) %1113, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1115 = or disjoint i32 %1076, %325, !dbg !46
  %1116 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1115, !dbg !46
  %1117 = load <4 x i32>, ptr addrspace(3) %1116, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1118 = or disjoint i32 %1081, %325, !dbg !46
  %1119 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1118, !dbg !46
  %1120 = load <4 x i32>, ptr addrspace(3) %1119, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1121 = or disjoint i32 %1076, %326, !dbg !46
  %1122 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1121, !dbg !46
  %1123 = load <4 x i32>, ptr addrspace(3) %1122, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1124 = or disjoint i32 %1081, %326, !dbg !46
  %1125 = getelementptr inbounds nuw i8, ptr addrspace(3) %338, i32 %1124, !dbg !46
  %1126 = load <4 x i32>, ptr addrspace(3) %1125, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1127 = or disjoint i32 %329, %1076, !dbg !47
  %1128 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %1127, !dbg !47
  %1129 = load <4 x i32>, ptr addrspace(3) %1128, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1130 = or disjoint i32 %1081, %329, !dbg !47
  %1131 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %1130, !dbg !47
  %1132 = load <4 x i32>, ptr addrspace(3) %1131, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1133 = or disjoint i32 %331, %1076, !dbg !47
  %1134 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %1133, !dbg !47
  %1135 = load <4 x i32>, ptr addrspace(3) %1134, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1136 = or disjoint i32 %1081, %331, !dbg !47
  %1137 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %1136, !dbg !47
  %1138 = load <4 x i32>, ptr addrspace(3) %1137, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1139 = or disjoint i32 %332, %1076, !dbg !47
  %1140 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %1139, !dbg !47
  %1141 = load <4 x i32>, ptr addrspace(3) %1140, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1142 = or disjoint i32 %1081, %332, !dbg !47
  %1143 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %1142, !dbg !47
  %1144 = load <4 x i32>, ptr addrspace(3) %1143, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1145 = or disjoint i32 %333, %1076, !dbg !47
  %1146 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %1145, !dbg !47
  %1147 = load <4 x i32>, ptr addrspace(3) %1146, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1148 = or disjoint i32 %1081, %333, !dbg !47
  %1149 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 %1148, !dbg !47
  %1150 = load <4 x i32>, ptr addrspace(3) %1149, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1151 = shufflevector <1 x i8> %995, <1 x i8> %997, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1152 = shufflevector <4 x i8> %1151, <4 x i8> %1000, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1153 = shufflevector <4 x i8> %1152, <4 x i8> %1003, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1154 = bitcast <4 x i8> %1153 to i32, !dbg !57
  %1155 = shufflevector <1 x i8> %1006, <1 x i8> %1009, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1156 = shufflevector <4 x i8> %1155, <4 x i8> %1013, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1157 = shufflevector <4 x i8> %1156, <4 x i8> %1017, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1158 = bitcast <4 x i8> %1157 to i32, !dbg !57
  %1159 = shufflevector <1 x i8> %1020, <1 x i8> %1023, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1160 = shufflevector <4 x i8> %1159, <4 x i8> %1027, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1161 = shufflevector <4 x i8> %1160, <4 x i8> %1031, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1162 = bitcast <4 x i8> %1161 to i32, !dbg !57
  %1163 = shufflevector <1 x i8> %1034, <1 x i8> %1037, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1164 = shufflevector <4 x i8> %1163, <4 x i8> %1041, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1165 = shufflevector <4 x i8> %1164, <4 x i8> %1045, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1166 = bitcast <4 x i8> %1165 to i32, !dbg !57
  %1167 = shufflevector <1 x i8> %1048, <1 x i8> %1051, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1168 = shufflevector <4 x i8> %1167, <4 x i8> %1055, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1169 = shufflevector <4 x i8> %1168, <4 x i8> %1059, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1170 = bitcast <4 x i8> %1169 to i32, !dbg !57
  %1171 = shufflevector <1 x i8> %1062, <1 x i8> %1065, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1172 = shufflevector <4 x i8> %1171, <4 x i8> %1069, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1173 = shufflevector <4 x i8> %1172, <4 x i8> %1073, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1174 = bitcast <4 x i8> %1173 to i32, !dbg !57
  %1175 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1129, <4 x i32> %1079, <4 x float> %664, i32 4, i32 4, i32 0, i32 %1170, i32 0, i32 %1154), !dbg !57
  %1176 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1132, <4 x i32> %1084, <4 x float> %1175, i32 4, i32 4, i32 2, i32 %1170, i32 2, i32 %1154), !dbg !57
  %1177 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1135, <4 x i32> %1079, <4 x float> %674, i32 4, i32 4, i32 1, i32 %1170, i32 0, i32 %1154), !dbg !57
  %1178 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1138, <4 x i32> %1084, <4 x float> %1177, i32 4, i32 4, i32 3, i32 %1170, i32 2, i32 %1154), !dbg !57
  %1179 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1129, <4 x i32> %1087, <4 x float> %684, i32 4, i32 4, i32 0, i32 %1170, i32 1, i32 %1154), !dbg !57
  %1180 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1132, <4 x i32> %1090, <4 x float> %1179, i32 4, i32 4, i32 2, i32 %1170, i32 3, i32 %1154), !dbg !57
  %1181 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1135, <4 x i32> %1087, <4 x float> %694, i32 4, i32 4, i32 1, i32 %1170, i32 1, i32 %1154), !dbg !57
  %1182 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1138, <4 x i32> %1090, <4 x float> %1181, i32 4, i32 4, i32 3, i32 %1170, i32 3, i32 %1154), !dbg !57
  %1183 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1141, <4 x i32> %1079, <4 x float> %704, i32 4, i32 4, i32 0, i32 %1174, i32 0, i32 %1154), !dbg !57
  %1184 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1144, <4 x i32> %1084, <4 x float> %1183, i32 4, i32 4, i32 2, i32 %1174, i32 2, i32 %1154), !dbg !57
  %1185 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1147, <4 x i32> %1079, <4 x float> %714, i32 4, i32 4, i32 1, i32 %1174, i32 0, i32 %1154), !dbg !57
  %1186 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1150, <4 x i32> %1084, <4 x float> %1185, i32 4, i32 4, i32 3, i32 %1174, i32 2, i32 %1154), !dbg !57
  %1187 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1141, <4 x i32> %1087, <4 x float> %724, i32 4, i32 4, i32 0, i32 %1174, i32 1, i32 %1154), !dbg !57
  %1188 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1144, <4 x i32> %1090, <4 x float> %1187, i32 4, i32 4, i32 2, i32 %1174, i32 3, i32 %1154), !dbg !57
  %1189 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1147, <4 x i32> %1087, <4 x float> %734, i32 4, i32 4, i32 1, i32 %1174, i32 1, i32 %1154), !dbg !57
  %1190 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1150, <4 x i32> %1090, <4 x float> %1189, i32 4, i32 4, i32 3, i32 %1174, i32 3, i32 %1154), !dbg !57
  %1191 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1129, <4 x i32> %1093, <4 x float> %744, i32 4, i32 4, i32 0, i32 %1170, i32 0, i32 %1158), !dbg !57
  %1192 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1132, <4 x i32> %1096, <4 x float> %1191, i32 4, i32 4, i32 2, i32 %1170, i32 2, i32 %1158), !dbg !57
  %1193 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1135, <4 x i32> %1093, <4 x float> %754, i32 4, i32 4, i32 1, i32 %1170, i32 0, i32 %1158), !dbg !57
  %1194 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1138, <4 x i32> %1096, <4 x float> %1193, i32 4, i32 4, i32 3, i32 %1170, i32 2, i32 %1158), !dbg !57
  %1195 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1129, <4 x i32> %1099, <4 x float> %764, i32 4, i32 4, i32 0, i32 %1170, i32 1, i32 %1158), !dbg !57
  %1196 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1132, <4 x i32> %1102, <4 x float> %1195, i32 4, i32 4, i32 2, i32 %1170, i32 3, i32 %1158), !dbg !57
  %1197 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1135, <4 x i32> %1099, <4 x float> %774, i32 4, i32 4, i32 1, i32 %1170, i32 1, i32 %1158), !dbg !57
  %1198 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1138, <4 x i32> %1102, <4 x float> %1197, i32 4, i32 4, i32 3, i32 %1170, i32 3, i32 %1158), !dbg !57
  %1199 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1141, <4 x i32> %1093, <4 x float> %784, i32 4, i32 4, i32 0, i32 %1174, i32 0, i32 %1158), !dbg !57
  %1200 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1144, <4 x i32> %1096, <4 x float> %1199, i32 4, i32 4, i32 2, i32 %1174, i32 2, i32 %1158), !dbg !57
  %1201 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1147, <4 x i32> %1093, <4 x float> %794, i32 4, i32 4, i32 1, i32 %1174, i32 0, i32 %1158), !dbg !57
  %1202 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1150, <4 x i32> %1096, <4 x float> %1201, i32 4, i32 4, i32 3, i32 %1174, i32 2, i32 %1158), !dbg !57
  %1203 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1141, <4 x i32> %1099, <4 x float> %804, i32 4, i32 4, i32 0, i32 %1174, i32 1, i32 %1158), !dbg !57
  %1204 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1144, <4 x i32> %1102, <4 x float> %1203, i32 4, i32 4, i32 2, i32 %1174, i32 3, i32 %1158), !dbg !57
  %1205 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1147, <4 x i32> %1099, <4 x float> %814, i32 4, i32 4, i32 1, i32 %1174, i32 1, i32 %1158), !dbg !57
  %1206 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1150, <4 x i32> %1102, <4 x float> %1205, i32 4, i32 4, i32 3, i32 %1174, i32 3, i32 %1158), !dbg !57
  %1207 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1129, <4 x i32> %1105, <4 x float> %824, i32 4, i32 4, i32 0, i32 %1170, i32 0, i32 %1162), !dbg !57
  %1208 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1132, <4 x i32> %1108, <4 x float> %1207, i32 4, i32 4, i32 2, i32 %1170, i32 2, i32 %1162), !dbg !57
  %1209 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1135, <4 x i32> %1105, <4 x float> %834, i32 4, i32 4, i32 1, i32 %1170, i32 0, i32 %1162), !dbg !57
  %1210 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1138, <4 x i32> %1108, <4 x float> %1209, i32 4, i32 4, i32 3, i32 %1170, i32 2, i32 %1162), !dbg !57
  %1211 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1129, <4 x i32> %1111, <4 x float> %844, i32 4, i32 4, i32 0, i32 %1170, i32 1, i32 %1162), !dbg !57
  %1212 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1132, <4 x i32> %1114, <4 x float> %1211, i32 4, i32 4, i32 2, i32 %1170, i32 3, i32 %1162), !dbg !57
  %1213 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1135, <4 x i32> %1111, <4 x float> %854, i32 4, i32 4, i32 1, i32 %1170, i32 1, i32 %1162), !dbg !57
  %1214 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1138, <4 x i32> %1114, <4 x float> %1213, i32 4, i32 4, i32 3, i32 %1170, i32 3, i32 %1162), !dbg !57
  %1215 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1141, <4 x i32> %1105, <4 x float> %864, i32 4, i32 4, i32 0, i32 %1174, i32 0, i32 %1162), !dbg !57
  %1216 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1144, <4 x i32> %1108, <4 x float> %1215, i32 4, i32 4, i32 2, i32 %1174, i32 2, i32 %1162), !dbg !57
  %1217 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1147, <4 x i32> %1105, <4 x float> %874, i32 4, i32 4, i32 1, i32 %1174, i32 0, i32 %1162), !dbg !57
  %1218 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1150, <4 x i32> %1108, <4 x float> %1217, i32 4, i32 4, i32 3, i32 %1174, i32 2, i32 %1162), !dbg !57
  %1219 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1141, <4 x i32> %1111, <4 x float> %884, i32 4, i32 4, i32 0, i32 %1174, i32 1, i32 %1162), !dbg !57
  %1220 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1144, <4 x i32> %1114, <4 x float> %1219, i32 4, i32 4, i32 2, i32 %1174, i32 3, i32 %1162), !dbg !57
  %1221 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1147, <4 x i32> %1111, <4 x float> %894, i32 4, i32 4, i32 1, i32 %1174, i32 1, i32 %1162), !dbg !57
  %1222 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1150, <4 x i32> %1114, <4 x float> %1221, i32 4, i32 4, i32 3, i32 %1174, i32 3, i32 %1162), !dbg !57
  %1223 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1129, <4 x i32> %1117, <4 x float> %904, i32 4, i32 4, i32 0, i32 %1170, i32 0, i32 %1166), !dbg !57
  %1224 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1132, <4 x i32> %1120, <4 x float> %1223, i32 4, i32 4, i32 2, i32 %1170, i32 2, i32 %1166), !dbg !57
  %1225 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1135, <4 x i32> %1117, <4 x float> %914, i32 4, i32 4, i32 1, i32 %1170, i32 0, i32 %1166), !dbg !57
  %1226 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1138, <4 x i32> %1120, <4 x float> %1225, i32 4, i32 4, i32 3, i32 %1170, i32 2, i32 %1166), !dbg !57
  %1227 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1129, <4 x i32> %1123, <4 x float> %924, i32 4, i32 4, i32 0, i32 %1170, i32 1, i32 %1166), !dbg !57
  %1228 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1132, <4 x i32> %1126, <4 x float> %1227, i32 4, i32 4, i32 2, i32 %1170, i32 3, i32 %1166), !dbg !57
  %1229 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1135, <4 x i32> %1123, <4 x float> %934, i32 4, i32 4, i32 1, i32 %1170, i32 1, i32 %1166), !dbg !57
  %1230 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1138, <4 x i32> %1126, <4 x float> %1229, i32 4, i32 4, i32 3, i32 %1170, i32 3, i32 %1166), !dbg !57
  %1231 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1141, <4 x i32> %1117, <4 x float> %944, i32 4, i32 4, i32 0, i32 %1174, i32 0, i32 %1166), !dbg !57
  %1232 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1144, <4 x i32> %1120, <4 x float> %1231, i32 4, i32 4, i32 2, i32 %1174, i32 2, i32 %1166), !dbg !57
  %1233 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1147, <4 x i32> %1117, <4 x float> %954, i32 4, i32 4, i32 1, i32 %1174, i32 0, i32 %1166), !dbg !57
  %1234 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1150, <4 x i32> %1120, <4 x float> %1233, i32 4, i32 4, i32 3, i32 %1174, i32 2, i32 %1166), !dbg !57
  %1235 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1141, <4 x i32> %1123, <4 x float> %964, i32 4, i32 4, i32 0, i32 %1174, i32 1, i32 %1166), !dbg !57
  %1236 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1144, <4 x i32> %1126, <4 x float> %1235, i32 4, i32 4, i32 2, i32 %1174, i32 3, i32 %1166), !dbg !57
  %1237 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1147, <4 x i32> %1123, <4 x float> %974, i32 4, i32 4, i32 1, i32 %1174, i32 1, i32 %1166), !dbg !57
  %1238 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1150, <4 x i32> %1126, <4 x float> %1237, i32 4, i32 4, i32 3, i32 %1174, i32 3, i32 %1166), !dbg !57
  %1239 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %302, !dbg !53
  %1240 = load <1 x i8>, ptr addrspace(3) %1239, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1241 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %303, !dbg !53
  %1242 = load <1 x i8>, ptr addrspace(3) %1241, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1243 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %304, !dbg !53
  %1244 = load <1 x i8>, ptr addrspace(3) %1243, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1245 = shufflevector <1 x i8> %1244, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1246 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %305, !dbg !53
  %1247 = load <1 x i8>, ptr addrspace(3) %1246, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1248 = shufflevector <1 x i8> %1247, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1249 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1004, !dbg !53
  %1250 = load <1 x i8>, ptr addrspace(3) %1249, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1251 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1007, !dbg !53
  %1252 = load <1 x i8>, ptr addrspace(3) %1251, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1253 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1010, !dbg !53
  %1254 = load <1 x i8>, ptr addrspace(3) %1253, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1255 = shufflevector <1 x i8> %1254, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1256 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1014, !dbg !53
  %1257 = load <1 x i8>, ptr addrspace(3) %1256, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1258 = shufflevector <1 x i8> %1257, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1259 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1018, !dbg !53
  %1260 = load <1 x i8>, ptr addrspace(3) %1259, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1261 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1021, !dbg !53
  %1262 = load <1 x i8>, ptr addrspace(3) %1261, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1263 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1024, !dbg !53
  %1264 = load <1 x i8>, ptr addrspace(3) %1263, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1265 = shufflevector <1 x i8> %1264, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1266 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1028, !dbg !53
  %1267 = load <1 x i8>, ptr addrspace(3) %1266, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1268 = shufflevector <1 x i8> %1267, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1269 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1032, !dbg !53
  %1270 = load <1 x i8>, ptr addrspace(3) %1269, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1271 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1035, !dbg !53
  %1272 = load <1 x i8>, ptr addrspace(3) %1271, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1273 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1038, !dbg !53
  %1274 = load <1 x i8>, ptr addrspace(3) %1273, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1275 = shufflevector <1 x i8> %1274, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1276 = getelementptr inbounds nuw i8, ptr addrspace(3) %485, i32 %1042, !dbg !53
  %1277 = load <1 x i8>, ptr addrspace(3) %1276, align 1, !dbg !53, !alias.scope !54, !noalias !42
  %1278 = shufflevector <1 x i8> %1277, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1279 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %1046, !dbg !56
  %1280 = load <1 x i8>, ptr addrspace(3) %1279, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1281 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %1049, !dbg !56
  %1282 = load <1 x i8>, ptr addrspace(3) %1281, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1283 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %1052, !dbg !56
  %1284 = load <1 x i8>, ptr addrspace(3) %1283, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1285 = shufflevector <1 x i8> %1284, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1286 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %1056, !dbg !56
  %1287 = load <1 x i8>, ptr addrspace(3) %1286, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1288 = shufflevector <1 x i8> %1287, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1289 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %1060, !dbg !56
  %1290 = load <1 x i8>, ptr addrspace(3) %1289, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1291 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %1063, !dbg !56
  %1292 = load <1 x i8>, ptr addrspace(3) %1291, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1293 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %1066, !dbg !56
  %1294 = load <1 x i8>, ptr addrspace(3) %1293, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1295 = shufflevector <1 x i8> %1294, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1296 = getelementptr inbounds nuw i8, ptr addrspace(3) %532, i32 %1070, !dbg !56
  %1297 = load <1 x i8>, ptr addrspace(3) %1296, align 1, !dbg !56, !alias.scope !54, !noalias !42
  %1298 = shufflevector <1 x i8> %1297, <1 x i8> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1299 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1077, !dbg !46
  %1300 = load <4 x i32>, ptr addrspace(3) %1299, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1301 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1082, !dbg !46
  %1302 = load <4 x i32>, ptr addrspace(3) %1301, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1303 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1085, !dbg !46
  %1304 = load <4 x i32>, ptr addrspace(3) %1303, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1305 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1088, !dbg !46
  %1306 = load <4 x i32>, ptr addrspace(3) %1305, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1307 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1091, !dbg !46
  %1308 = load <4 x i32>, ptr addrspace(3) %1307, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1309 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1094, !dbg !46
  %1310 = load <4 x i32>, ptr addrspace(3) %1309, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1311 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1097, !dbg !46
  %1312 = load <4 x i32>, ptr addrspace(3) %1311, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1313 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1100, !dbg !46
  %1314 = load <4 x i32>, ptr addrspace(3) %1313, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1315 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1103, !dbg !46
  %1316 = load <4 x i32>, ptr addrspace(3) %1315, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1317 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1106, !dbg !46
  %1318 = load <4 x i32>, ptr addrspace(3) %1317, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1319 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1109, !dbg !46
  %1320 = load <4 x i32>, ptr addrspace(3) %1319, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1321 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1112, !dbg !46
  %1322 = load <4 x i32>, ptr addrspace(3) %1321, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1323 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1115, !dbg !46
  %1324 = load <4 x i32>, ptr addrspace(3) %1323, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1325 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1118, !dbg !46
  %1326 = load <4 x i32>, ptr addrspace(3) %1325, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1327 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1121, !dbg !46
  %1328 = load <4 x i32>, ptr addrspace(3) %1327, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1329 = getelementptr inbounds nuw i8, ptr addrspace(3) %561, i32 %1124, !dbg !46
  %1330 = load <4 x i32>, ptr addrspace(3) %1329, align 16, !dbg !46, !alias.scope !54, !noalias !42
  %1331 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %1127, !dbg !47
  %1332 = load <4 x i32>, ptr addrspace(3) %1331, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1333 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %1130, !dbg !47
  %1334 = load <4 x i32>, ptr addrspace(3) %1333, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1335 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %1133, !dbg !47
  %1336 = load <4 x i32>, ptr addrspace(3) %1335, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1337 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %1136, !dbg !47
  %1338 = load <4 x i32>, ptr addrspace(3) %1337, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1339 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %1139, !dbg !47
  %1340 = load <4 x i32>, ptr addrspace(3) %1339, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1341 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %1142, !dbg !47
  %1342 = load <4 x i32>, ptr addrspace(3) %1341, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1343 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %1145, !dbg !47
  %1344 = load <4 x i32>, ptr addrspace(3) %1343, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1345 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %1148, !dbg !47
  %1346 = load <4 x i32>, ptr addrspace(3) %1345, align 16, !dbg !47, !alias.scope !54, !noalias !42
  %1347 = shufflevector <1 x i8> %1240, <1 x i8> %1242, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1348 = shufflevector <4 x i8> %1347, <4 x i8> %1245, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1349 = shufflevector <4 x i8> %1348, <4 x i8> %1248, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1350 = bitcast <4 x i8> %1349 to i32, !dbg !57
  %1351 = shufflevector <1 x i8> %1250, <1 x i8> %1252, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1352 = shufflevector <4 x i8> %1351, <4 x i8> %1255, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1353 = shufflevector <4 x i8> %1352, <4 x i8> %1258, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1354 = bitcast <4 x i8> %1353 to i32, !dbg !57
  %1355 = shufflevector <1 x i8> %1260, <1 x i8> %1262, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1356 = shufflevector <4 x i8> %1355, <4 x i8> %1265, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1357 = shufflevector <4 x i8> %1356, <4 x i8> %1268, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1358 = bitcast <4 x i8> %1357 to i32, !dbg !57
  %1359 = shufflevector <1 x i8> %1270, <1 x i8> %1272, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1360 = shufflevector <4 x i8> %1359, <4 x i8> %1275, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1361 = shufflevector <4 x i8> %1360, <4 x i8> %1278, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1362 = bitcast <4 x i8> %1361 to i32, !dbg !57
  %1363 = shufflevector <1 x i8> %1280, <1 x i8> %1282, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1364 = shufflevector <4 x i8> %1363, <4 x i8> %1285, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1365 = shufflevector <4 x i8> %1364, <4 x i8> %1288, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1366 = bitcast <4 x i8> %1365 to i32, !dbg !57
  %1367 = shufflevector <1 x i8> %1290, <1 x i8> %1292, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !57
  %1368 = shufflevector <4 x i8> %1367, <4 x i8> %1295, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !57
  %1369 = shufflevector <4 x i8> %1368, <4 x i8> %1298, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !57
  %1370 = bitcast <4 x i8> %1369 to i32, !dbg !57
  %1371 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1332, <4 x i32> %1300, <4 x float> %1176, i32 4, i32 4, i32 0, i32 %1366, i32 0, i32 %1350), !dbg !57
  %1372 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1334, <4 x i32> %1302, <4 x float> %1371, i32 4, i32 4, i32 2, i32 %1366, i32 2, i32 %1350), !dbg !57
  %1373 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1336, <4 x i32> %1300, <4 x float> %1178, i32 4, i32 4, i32 1, i32 %1366, i32 0, i32 %1350), !dbg !57
  %1374 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1338, <4 x i32> %1302, <4 x float> %1373, i32 4, i32 4, i32 3, i32 %1366, i32 2, i32 %1350), !dbg !57
  %1375 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1332, <4 x i32> %1304, <4 x float> %1180, i32 4, i32 4, i32 0, i32 %1366, i32 1, i32 %1350), !dbg !57
  %1376 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1334, <4 x i32> %1306, <4 x float> %1375, i32 4, i32 4, i32 2, i32 %1366, i32 3, i32 %1350), !dbg !57
  %1377 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1336, <4 x i32> %1304, <4 x float> %1182, i32 4, i32 4, i32 1, i32 %1366, i32 1, i32 %1350), !dbg !57
  %1378 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1338, <4 x i32> %1306, <4 x float> %1377, i32 4, i32 4, i32 3, i32 %1366, i32 3, i32 %1350), !dbg !57
  %1379 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1340, <4 x i32> %1300, <4 x float> %1184, i32 4, i32 4, i32 0, i32 %1370, i32 0, i32 %1350), !dbg !57
  %1380 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1342, <4 x i32> %1302, <4 x float> %1379, i32 4, i32 4, i32 2, i32 %1370, i32 2, i32 %1350), !dbg !57
  %1381 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1344, <4 x i32> %1300, <4 x float> %1186, i32 4, i32 4, i32 1, i32 %1370, i32 0, i32 %1350), !dbg !57
  %1382 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1346, <4 x i32> %1302, <4 x float> %1381, i32 4, i32 4, i32 3, i32 %1370, i32 2, i32 %1350), !dbg !57
  %1383 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1340, <4 x i32> %1304, <4 x float> %1188, i32 4, i32 4, i32 0, i32 %1370, i32 1, i32 %1350), !dbg !57
  %1384 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1342, <4 x i32> %1306, <4 x float> %1383, i32 4, i32 4, i32 2, i32 %1370, i32 3, i32 %1350), !dbg !57
  %1385 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1344, <4 x i32> %1304, <4 x float> %1190, i32 4, i32 4, i32 1, i32 %1370, i32 1, i32 %1350), !dbg !57
  %1386 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1346, <4 x i32> %1306, <4 x float> %1385, i32 4, i32 4, i32 3, i32 %1370, i32 3, i32 %1350), !dbg !57
  %1387 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1332, <4 x i32> %1308, <4 x float> %1192, i32 4, i32 4, i32 0, i32 %1366, i32 0, i32 %1354), !dbg !57
  %1388 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1334, <4 x i32> %1310, <4 x float> %1387, i32 4, i32 4, i32 2, i32 %1366, i32 2, i32 %1354), !dbg !57
  %1389 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1336, <4 x i32> %1308, <4 x float> %1194, i32 4, i32 4, i32 1, i32 %1366, i32 0, i32 %1354), !dbg !57
  %1390 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1338, <4 x i32> %1310, <4 x float> %1389, i32 4, i32 4, i32 3, i32 %1366, i32 2, i32 %1354), !dbg !57
  %1391 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1332, <4 x i32> %1312, <4 x float> %1196, i32 4, i32 4, i32 0, i32 %1366, i32 1, i32 %1354), !dbg !57
  %1392 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1334, <4 x i32> %1314, <4 x float> %1391, i32 4, i32 4, i32 2, i32 %1366, i32 3, i32 %1354), !dbg !57
  %1393 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1336, <4 x i32> %1312, <4 x float> %1198, i32 4, i32 4, i32 1, i32 %1366, i32 1, i32 %1354), !dbg !57
  %1394 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1338, <4 x i32> %1314, <4 x float> %1393, i32 4, i32 4, i32 3, i32 %1366, i32 3, i32 %1354), !dbg !57
  %1395 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1340, <4 x i32> %1308, <4 x float> %1200, i32 4, i32 4, i32 0, i32 %1370, i32 0, i32 %1354), !dbg !57
  %1396 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1342, <4 x i32> %1310, <4 x float> %1395, i32 4, i32 4, i32 2, i32 %1370, i32 2, i32 %1354), !dbg !57
  %1397 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1344, <4 x i32> %1308, <4 x float> %1202, i32 4, i32 4, i32 1, i32 %1370, i32 0, i32 %1354), !dbg !57
  %1398 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1346, <4 x i32> %1310, <4 x float> %1397, i32 4, i32 4, i32 3, i32 %1370, i32 2, i32 %1354), !dbg !57
  %1399 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1340, <4 x i32> %1312, <4 x float> %1204, i32 4, i32 4, i32 0, i32 %1370, i32 1, i32 %1354), !dbg !57
  %1400 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1342, <4 x i32> %1314, <4 x float> %1399, i32 4, i32 4, i32 2, i32 %1370, i32 3, i32 %1354), !dbg !57
  %1401 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1344, <4 x i32> %1312, <4 x float> %1206, i32 4, i32 4, i32 1, i32 %1370, i32 1, i32 %1354), !dbg !57
  %1402 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1346, <4 x i32> %1314, <4 x float> %1401, i32 4, i32 4, i32 3, i32 %1370, i32 3, i32 %1354), !dbg !57
  %1403 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1332, <4 x i32> %1316, <4 x float> %1208, i32 4, i32 4, i32 0, i32 %1366, i32 0, i32 %1358), !dbg !57
  %1404 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1334, <4 x i32> %1318, <4 x float> %1403, i32 4, i32 4, i32 2, i32 %1366, i32 2, i32 %1358), !dbg !57
  %1405 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1336, <4 x i32> %1316, <4 x float> %1210, i32 4, i32 4, i32 1, i32 %1366, i32 0, i32 %1358), !dbg !57
  %1406 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1338, <4 x i32> %1318, <4 x float> %1405, i32 4, i32 4, i32 3, i32 %1366, i32 2, i32 %1358), !dbg !57
  %1407 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1332, <4 x i32> %1320, <4 x float> %1212, i32 4, i32 4, i32 0, i32 %1366, i32 1, i32 %1358), !dbg !57
  %1408 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1334, <4 x i32> %1322, <4 x float> %1407, i32 4, i32 4, i32 2, i32 %1366, i32 3, i32 %1358), !dbg !57
  %1409 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1336, <4 x i32> %1320, <4 x float> %1214, i32 4, i32 4, i32 1, i32 %1366, i32 1, i32 %1358), !dbg !57
  %1410 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1338, <4 x i32> %1322, <4 x float> %1409, i32 4, i32 4, i32 3, i32 %1366, i32 3, i32 %1358), !dbg !57
  %1411 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1340, <4 x i32> %1316, <4 x float> %1216, i32 4, i32 4, i32 0, i32 %1370, i32 0, i32 %1358), !dbg !57
  %1412 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1342, <4 x i32> %1318, <4 x float> %1411, i32 4, i32 4, i32 2, i32 %1370, i32 2, i32 %1358), !dbg !57
  %1413 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1344, <4 x i32> %1316, <4 x float> %1218, i32 4, i32 4, i32 1, i32 %1370, i32 0, i32 %1358), !dbg !57
  %1414 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1346, <4 x i32> %1318, <4 x float> %1413, i32 4, i32 4, i32 3, i32 %1370, i32 2, i32 %1358), !dbg !57
  %1415 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1340, <4 x i32> %1320, <4 x float> %1220, i32 4, i32 4, i32 0, i32 %1370, i32 1, i32 %1358), !dbg !57
  %1416 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1342, <4 x i32> %1322, <4 x float> %1415, i32 4, i32 4, i32 2, i32 %1370, i32 3, i32 %1358), !dbg !57
  %1417 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1344, <4 x i32> %1320, <4 x float> %1222, i32 4, i32 4, i32 1, i32 %1370, i32 1, i32 %1358), !dbg !57
  %1418 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1346, <4 x i32> %1322, <4 x float> %1417, i32 4, i32 4, i32 3, i32 %1370, i32 3, i32 %1358), !dbg !57
  %1419 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1332, <4 x i32> %1324, <4 x float> %1224, i32 4, i32 4, i32 0, i32 %1366, i32 0, i32 %1362), !dbg !57
  %1420 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1334, <4 x i32> %1326, <4 x float> %1419, i32 4, i32 4, i32 2, i32 %1366, i32 2, i32 %1362), !dbg !57
  %1421 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1336, <4 x i32> %1324, <4 x float> %1226, i32 4, i32 4, i32 1, i32 %1366, i32 0, i32 %1362), !dbg !57
  %1422 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1338, <4 x i32> %1326, <4 x float> %1421, i32 4, i32 4, i32 3, i32 %1366, i32 2, i32 %1362), !dbg !57
  %1423 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1332, <4 x i32> %1328, <4 x float> %1228, i32 4, i32 4, i32 0, i32 %1366, i32 1, i32 %1362), !dbg !57
  %1424 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1334, <4 x i32> %1330, <4 x float> %1423, i32 4, i32 4, i32 2, i32 %1366, i32 3, i32 %1362), !dbg !57
  %1425 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1336, <4 x i32> %1328, <4 x float> %1230, i32 4, i32 4, i32 1, i32 %1366, i32 1, i32 %1362), !dbg !57
  %1426 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1338, <4 x i32> %1330, <4 x float> %1425, i32 4, i32 4, i32 3, i32 %1366, i32 3, i32 %1362), !dbg !57
  %1427 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1340, <4 x i32> %1324, <4 x float> %1232, i32 4, i32 4, i32 0, i32 %1370, i32 0, i32 %1362), !dbg !57
  %1428 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1342, <4 x i32> %1326, <4 x float> %1427, i32 4, i32 4, i32 2, i32 %1370, i32 2, i32 %1362), !dbg !57
  %1429 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1344, <4 x i32> %1324, <4 x float> %1234, i32 4, i32 4, i32 1, i32 %1370, i32 0, i32 %1362), !dbg !57
  %1430 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1346, <4 x i32> %1326, <4 x float> %1429, i32 4, i32 4, i32 3, i32 %1370, i32 2, i32 %1362), !dbg !57
  %1431 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1340, <4 x i32> %1328, <4 x float> %1236, i32 4, i32 4, i32 0, i32 %1370, i32 1, i32 %1362), !dbg !57
  %1432 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1342, <4 x i32> %1330, <4 x float> %1431, i32 4, i32 4, i32 2, i32 %1370, i32 3, i32 %1362), !dbg !57
  %1433 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1344, <4 x i32> %1328, <4 x float> %1238, i32 4, i32 4, i32 1, i32 %1370, i32 1, i32 %1362), !dbg !57
  %1434 = tail call <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32> %1346, <4 x i32> %1330, <4 x float> %1433, i32 4, i32 4, i32 3, i32 %1370, i32 3, i32 %1362), !dbg !57
  %1435 = zext nneg i32 %36 to i64, !dbg !58
  %1436 = zext nneg i32 %37 to i64, !dbg !58
  %1437 = zext nneg i32 %981 to i64, !dbg !58
  %1438 = zext nneg i32 %982 to i64, !dbg !58
  %1439 = zext nneg i32 %983 to i64, !dbg !58
  %1440 = zext nneg i32 %984 to i64, !dbg !58
  %1441 = zext nneg i32 %985 to i64, !dbg !58
  %1442 = zext nneg i32 %986 to i64, !dbg !58
  %1443 = sext i32 %38 to i64, !dbg !59
  %1444 = or disjoint i64 %1443, %1435, !dbg !59
  %1445 = or disjoint i64 %1443, %1436, !dbg !59
  %1446 = or disjoint i64 %1443, %1437, !dbg !59
  %1447 = or disjoint i64 %1443, %1438, !dbg !59
  %1448 = or disjoint i64 %1443, %1439, !dbg !59
  %1449 = or disjoint i64 %1443, %1440, !dbg !59
  %1450 = or disjoint i64 %1443, %1441, !dbg !59
  %1451 = or disjoint i64 %1443, %1442, !dbg !59
  %1452 = zext nneg i32 %990 to i64, !dbg !60
  %1453 = zext nneg i32 %991 to i64, !dbg !60
  %1454 = zext nneg i32 %992 to i64, !dbg !60
  %1455 = zext nneg i32 %993 to i64, !dbg !60
  %1456 = sext i32 %47 to i64, !dbg !61
  %1457 = or disjoint i64 %1456, %1452, !dbg !61
  %1458 = or disjoint i64 %1456, %1453, !dbg !61
  %1459 = or disjoint i64 %1456, %1454, !dbg !61
  %1460 = or disjoint i64 %1456, %1455, !dbg !61
  %1461 = sext i32 %11 to i64, !dbg !62
  %1462 = mul nsw i64 %1443, %1461, !dbg !63
  %1463 = mul i32 %11, %36, !dbg !63
  %1464 = mul i32 %11, %37, !dbg !63
  %1465 = mul i32 %11, %981, !dbg !63
  %1466 = mul i32 %11, %982, !dbg !63
  %1467 = mul i32 %11, %983, !dbg !63
  %1468 = mul i32 %11, %984, !dbg !63
  %1469 = mul i32 %11, %985, !dbg !63
  %1470 = mul i32 %11, %986, !dbg !63
  %1471 = getelementptr bfloat, ptr addrspace(1) %2, i64 %1462, !dbg !63
  %1472 = getelementptr bfloat, ptr addrspace(1) %1471, i64 %1456, !dbg !64
  %1473 = add i32 %1463, %990, !dbg !64
  %1474 = add i32 %1463, %991, !dbg !64
  %1475 = add i32 %1464, %990, !dbg !64
  %1476 = add i32 %1464, %991, !dbg !64
  %1477 = add i32 %1463, %992, !dbg !64
  %1478 = add i32 %1463, %993, !dbg !64
  %1479 = add i32 %1464, %992, !dbg !64
  %1480 = add i32 %1464, %993, !dbg !64
  %1481 = add i32 %1465, %990, !dbg !64
  %1482 = add i32 %1465, %991, !dbg !64
  %1483 = add i32 %1466, %990, !dbg !64
  %1484 = add i32 %1466, %991, !dbg !64
  %1485 = add i32 %1465, %992, !dbg !64
  %1486 = add i32 %1465, %993, !dbg !64
  %1487 = add i32 %1466, %992, !dbg !64
  %1488 = add i32 %1466, %993, !dbg !64
  %1489 = add i32 %1467, %990, !dbg !64
  %1490 = add i32 %1467, %991, !dbg !64
  %1491 = add i32 %1468, %990, !dbg !64
  %1492 = add i32 %1468, %991, !dbg !64
  %1493 = add i32 %1467, %992, !dbg !64
  %1494 = add i32 %1467, %993, !dbg !64
  %1495 = add i32 %1468, %992, !dbg !64
  %1496 = add i32 %1468, %993, !dbg !64
  %1497 = add i32 %1469, %990, !dbg !64
  %1498 = add i32 %1469, %991, !dbg !64
  %1499 = add i32 %1470, %990, !dbg !64
  %1500 = add i32 %1470, %991, !dbg !64
  %1501 = add i32 %1469, %992, !dbg !64
  %1502 = add i32 %1469, %993, !dbg !64
  %1503 = add i32 %1470, %992, !dbg !64
  %1504 = add i32 %1470, %993, !dbg !64
  %1505 = sext i32 %5 to i64, !dbg !65
  %1506 = icmp slt i64 %1444, %1505, !dbg !65
  %1507 = icmp slt i64 %1445, %1505, !dbg !65
  %1508 = icmp slt i64 %1446, %1505, !dbg !65
  %1509 = icmp slt i64 %1447, %1505, !dbg !65
  %1510 = icmp slt i64 %1448, %1505, !dbg !65
  %1511 = icmp slt i64 %1449, %1505, !dbg !65
  %1512 = icmp slt i64 %1450, %1505, !dbg !65
  %1513 = icmp slt i64 %1451, %1505, !dbg !65
  %1514 = sext i32 %6 to i64, !dbg !66
  %1515 = icmp slt i64 %1457, %1514, !dbg !66
  %1516 = icmp slt i64 %1458, %1514, !dbg !66
  %1517 = icmp slt i64 %1459, %1514, !dbg !66
  %1518 = icmp slt i64 %1460, %1514, !dbg !66
  %1519 = and i1 %1515, %1506, !dbg !67
  %1520 = and i1 %1516, %1506, !dbg !67
  %1521 = and i1 %1515, %1507, !dbg !67
  %1522 = and i1 %1516, %1507, !dbg !67
  %1523 = and i1 %1517, %1506, !dbg !67
  %1524 = and i1 %1518, %1506, !dbg !67
  %1525 = and i1 %1517, %1507, !dbg !67
  %1526 = and i1 %1518, %1507, !dbg !67
  %1527 = and i1 %1515, %1508, !dbg !67
  %1528 = and i1 %1516, %1508, !dbg !67
  %1529 = and i1 %1515, %1509, !dbg !67
  %1530 = and i1 %1516, %1509, !dbg !67
  %1531 = and i1 %1517, %1508, !dbg !67
  %1532 = and i1 %1518, %1508, !dbg !67
  %1533 = and i1 %1517, %1509, !dbg !67
  %1534 = and i1 %1518, %1509, !dbg !67
  %1535 = and i1 %1515, %1510, !dbg !67
  %1536 = and i1 %1516, %1510, !dbg !67
  %1537 = and i1 %1515, %1511, !dbg !67
  %1538 = and i1 %1516, %1511, !dbg !67
  %1539 = and i1 %1517, %1510, !dbg !67
  %1540 = and i1 %1518, %1510, !dbg !67
  %1541 = and i1 %1517, %1511, !dbg !67
  %1542 = and i1 %1518, %1511, !dbg !67
  %1543 = and i1 %1515, %1512, !dbg !67
  %1544 = and i1 %1516, %1512, !dbg !67
  %1545 = and i1 %1515, %1513, !dbg !67
  %1546 = and i1 %1516, %1513, !dbg !67
  %1547 = and i1 %1517, %1512, !dbg !67
  %1548 = and i1 %1518, %1512, !dbg !67
  %1549 = and i1 %1517, %1513, !dbg !67
  %1550 = and i1 %1518, %1513, !dbg !67
  %1551 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %1472, i16 0, i32 2147483646, i32 159744), !dbg !68
  %1552 = fptrunc <4 x float> %1372 to <4 x bfloat>, !dbg !68
  %1553 = bitcast <4 x bfloat> %1552 to <2 x i32>, !dbg !68
  %1554 = shl i32 %1473, 1, !dbg !68
  %1555 = select i1 %1519, i32 %1554, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1553, ptr addrspace(8) %1551, i32 %1555, i32 0, i32 17), !dbg !68
  %1556 = fptrunc <4 x float> %1374 to <4 x bfloat>, !dbg !68
  %1557 = bitcast <4 x bfloat> %1556 to <2 x i32>, !dbg !68
  %1558 = shl i32 %1474, 1, !dbg !68
  %1559 = select i1 %1520, i32 %1558, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1557, ptr addrspace(8) %1551, i32 %1559, i32 0, i32 17), !dbg !68
  %1560 = fptrunc <4 x float> %1376 to <4 x bfloat>, !dbg !68
  %1561 = bitcast <4 x bfloat> %1560 to <2 x i32>, !dbg !68
  %1562 = shl i32 %1475, 1, !dbg !68
  %1563 = select i1 %1521, i32 %1562, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1561, ptr addrspace(8) %1551, i32 %1563, i32 0, i32 17), !dbg !68
  %1564 = fptrunc <4 x float> %1378 to <4 x bfloat>, !dbg !68
  %1565 = bitcast <4 x bfloat> %1564 to <2 x i32>, !dbg !68
  %1566 = shl i32 %1476, 1, !dbg !68
  %1567 = select i1 %1522, i32 %1566, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1565, ptr addrspace(8) %1551, i32 %1567, i32 0, i32 17), !dbg !68
  %1568 = fptrunc <4 x float> %1380 to <4 x bfloat>, !dbg !68
  %1569 = bitcast <4 x bfloat> %1568 to <2 x i32>, !dbg !68
  %1570 = shl i32 %1477, 1, !dbg !68
  %1571 = select i1 %1523, i32 %1570, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1569, ptr addrspace(8) %1551, i32 %1571, i32 0, i32 17), !dbg !68
  %1572 = fptrunc <4 x float> %1382 to <4 x bfloat>, !dbg !68
  %1573 = bitcast <4 x bfloat> %1572 to <2 x i32>, !dbg !68
  %1574 = shl i32 %1478, 1, !dbg !68
  %1575 = select i1 %1524, i32 %1574, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1573, ptr addrspace(8) %1551, i32 %1575, i32 0, i32 17), !dbg !68
  %1576 = fptrunc <4 x float> %1384 to <4 x bfloat>, !dbg !68
  %1577 = bitcast <4 x bfloat> %1576 to <2 x i32>, !dbg !68
  %1578 = shl i32 %1479, 1, !dbg !68
  %1579 = select i1 %1525, i32 %1578, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1577, ptr addrspace(8) %1551, i32 %1579, i32 0, i32 17), !dbg !68
  %1580 = fptrunc <4 x float> %1386 to <4 x bfloat>, !dbg !68
  %1581 = bitcast <4 x bfloat> %1580 to <2 x i32>, !dbg !68
  %1582 = shl i32 %1480, 1, !dbg !68
  %1583 = select i1 %1526, i32 %1582, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1581, ptr addrspace(8) %1551, i32 %1583, i32 0, i32 17), !dbg !68
  %1584 = fptrunc <4 x float> %1388 to <4 x bfloat>, !dbg !68
  %1585 = bitcast <4 x bfloat> %1584 to <2 x i32>, !dbg !68
  %1586 = shl i32 %1481, 1, !dbg !68
  %1587 = select i1 %1527, i32 %1586, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1585, ptr addrspace(8) %1551, i32 %1587, i32 0, i32 17), !dbg !68
  %1588 = fptrunc <4 x float> %1390 to <4 x bfloat>, !dbg !68
  %1589 = bitcast <4 x bfloat> %1588 to <2 x i32>, !dbg !68
  %1590 = shl i32 %1482, 1, !dbg !68
  %1591 = select i1 %1528, i32 %1590, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1589, ptr addrspace(8) %1551, i32 %1591, i32 0, i32 17), !dbg !68
  %1592 = fptrunc <4 x float> %1392 to <4 x bfloat>, !dbg !68
  %1593 = bitcast <4 x bfloat> %1592 to <2 x i32>, !dbg !68
  %1594 = shl i32 %1483, 1, !dbg !68
  %1595 = select i1 %1529, i32 %1594, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1593, ptr addrspace(8) %1551, i32 %1595, i32 0, i32 17), !dbg !68
  %1596 = fptrunc <4 x float> %1394 to <4 x bfloat>, !dbg !68
  %1597 = bitcast <4 x bfloat> %1596 to <2 x i32>, !dbg !68
  %1598 = shl i32 %1484, 1, !dbg !68
  %1599 = select i1 %1530, i32 %1598, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1597, ptr addrspace(8) %1551, i32 %1599, i32 0, i32 17), !dbg !68
  %1600 = fptrunc <4 x float> %1396 to <4 x bfloat>, !dbg !68
  %1601 = bitcast <4 x bfloat> %1600 to <2 x i32>, !dbg !68
  %1602 = shl i32 %1485, 1, !dbg !68
  %1603 = select i1 %1531, i32 %1602, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1601, ptr addrspace(8) %1551, i32 %1603, i32 0, i32 17), !dbg !68
  %1604 = fptrunc <4 x float> %1398 to <4 x bfloat>, !dbg !68
  %1605 = bitcast <4 x bfloat> %1604 to <2 x i32>, !dbg !68
  %1606 = shl i32 %1486, 1, !dbg !68
  %1607 = select i1 %1532, i32 %1606, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1605, ptr addrspace(8) %1551, i32 %1607, i32 0, i32 17), !dbg !68
  %1608 = fptrunc <4 x float> %1400 to <4 x bfloat>, !dbg !68
  %1609 = bitcast <4 x bfloat> %1608 to <2 x i32>, !dbg !68
  %1610 = shl i32 %1487, 1, !dbg !68
  %1611 = select i1 %1533, i32 %1610, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1609, ptr addrspace(8) %1551, i32 %1611, i32 0, i32 17), !dbg !68
  %1612 = fptrunc <4 x float> %1402 to <4 x bfloat>, !dbg !68
  %1613 = bitcast <4 x bfloat> %1612 to <2 x i32>, !dbg !68
  %1614 = shl i32 %1488, 1, !dbg !68
  %1615 = select i1 %1534, i32 %1614, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1613, ptr addrspace(8) %1551, i32 %1615, i32 0, i32 17), !dbg !68
  %1616 = fptrunc <4 x float> %1404 to <4 x bfloat>, !dbg !68
  %1617 = bitcast <4 x bfloat> %1616 to <2 x i32>, !dbg !68
  %1618 = shl i32 %1489, 1, !dbg !68
  %1619 = select i1 %1535, i32 %1618, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1617, ptr addrspace(8) %1551, i32 %1619, i32 0, i32 17), !dbg !68
  %1620 = fptrunc <4 x float> %1406 to <4 x bfloat>, !dbg !68
  %1621 = bitcast <4 x bfloat> %1620 to <2 x i32>, !dbg !68
  %1622 = shl i32 %1490, 1, !dbg !68
  %1623 = select i1 %1536, i32 %1622, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1621, ptr addrspace(8) %1551, i32 %1623, i32 0, i32 17), !dbg !68
  %1624 = fptrunc <4 x float> %1408 to <4 x bfloat>, !dbg !68
  %1625 = bitcast <4 x bfloat> %1624 to <2 x i32>, !dbg !68
  %1626 = shl i32 %1491, 1, !dbg !68
  %1627 = select i1 %1537, i32 %1626, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1625, ptr addrspace(8) %1551, i32 %1627, i32 0, i32 17), !dbg !68
  %1628 = fptrunc <4 x float> %1410 to <4 x bfloat>, !dbg !68
  %1629 = bitcast <4 x bfloat> %1628 to <2 x i32>, !dbg !68
  %1630 = shl i32 %1492, 1, !dbg !68
  %1631 = select i1 %1538, i32 %1630, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1629, ptr addrspace(8) %1551, i32 %1631, i32 0, i32 17), !dbg !68
  %1632 = fptrunc <4 x float> %1412 to <4 x bfloat>, !dbg !68
  %1633 = bitcast <4 x bfloat> %1632 to <2 x i32>, !dbg !68
  %1634 = shl i32 %1493, 1, !dbg !68
  %1635 = select i1 %1539, i32 %1634, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1633, ptr addrspace(8) %1551, i32 %1635, i32 0, i32 17), !dbg !68
  %1636 = fptrunc <4 x float> %1414 to <4 x bfloat>, !dbg !68
  %1637 = bitcast <4 x bfloat> %1636 to <2 x i32>, !dbg !68
  %1638 = shl i32 %1494, 1, !dbg !68
  %1639 = select i1 %1540, i32 %1638, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1637, ptr addrspace(8) %1551, i32 %1639, i32 0, i32 17), !dbg !68
  %1640 = fptrunc <4 x float> %1416 to <4 x bfloat>, !dbg !68
  %1641 = bitcast <4 x bfloat> %1640 to <2 x i32>, !dbg !68
  %1642 = shl i32 %1495, 1, !dbg !68
  %1643 = select i1 %1541, i32 %1642, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1641, ptr addrspace(8) %1551, i32 %1643, i32 0, i32 17), !dbg !68
  %1644 = fptrunc <4 x float> %1418 to <4 x bfloat>, !dbg !68
  %1645 = bitcast <4 x bfloat> %1644 to <2 x i32>, !dbg !68
  %1646 = shl i32 %1496, 1, !dbg !68
  %1647 = select i1 %1542, i32 %1646, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1645, ptr addrspace(8) %1551, i32 %1647, i32 0, i32 17), !dbg !68
  %1648 = fptrunc <4 x float> %1420 to <4 x bfloat>, !dbg !68
  %1649 = bitcast <4 x bfloat> %1648 to <2 x i32>, !dbg !68
  %1650 = shl i32 %1497, 1, !dbg !68
  %1651 = select i1 %1543, i32 %1650, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1649, ptr addrspace(8) %1551, i32 %1651, i32 0, i32 17), !dbg !68
  %1652 = fptrunc <4 x float> %1422 to <4 x bfloat>, !dbg !68
  %1653 = bitcast <4 x bfloat> %1652 to <2 x i32>, !dbg !68
  %1654 = shl i32 %1498, 1, !dbg !68
  %1655 = select i1 %1544, i32 %1654, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1653, ptr addrspace(8) %1551, i32 %1655, i32 0, i32 17), !dbg !68
  %1656 = fptrunc <4 x float> %1424 to <4 x bfloat>, !dbg !68
  %1657 = bitcast <4 x bfloat> %1656 to <2 x i32>, !dbg !68
  %1658 = shl i32 %1499, 1, !dbg !68
  %1659 = select i1 %1545, i32 %1658, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1657, ptr addrspace(8) %1551, i32 %1659, i32 0, i32 17), !dbg !68
  %1660 = fptrunc <4 x float> %1426 to <4 x bfloat>, !dbg !68
  %1661 = bitcast <4 x bfloat> %1660 to <2 x i32>, !dbg !68
  %1662 = shl i32 %1500, 1, !dbg !68
  %1663 = select i1 %1546, i32 %1662, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1661, ptr addrspace(8) %1551, i32 %1663, i32 0, i32 17), !dbg !68
  %1664 = fptrunc <4 x float> %1428 to <4 x bfloat>, !dbg !68
  %1665 = bitcast <4 x bfloat> %1664 to <2 x i32>, !dbg !68
  %1666 = shl i32 %1501, 1, !dbg !68
  %1667 = select i1 %1547, i32 %1666, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1665, ptr addrspace(8) %1551, i32 %1667, i32 0, i32 17), !dbg !68
  %1668 = fptrunc <4 x float> %1430 to <4 x bfloat>, !dbg !68
  %1669 = bitcast <4 x bfloat> %1668 to <2 x i32>, !dbg !68
  %1670 = shl i32 %1502, 1, !dbg !68
  %1671 = select i1 %1548, i32 %1670, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1669, ptr addrspace(8) %1551, i32 %1671, i32 0, i32 17), !dbg !68
  %1672 = fptrunc <4 x float> %1432 to <4 x bfloat>, !dbg !68
  %1673 = bitcast <4 x bfloat> %1672 to <2 x i32>, !dbg !68
  %1674 = shl i32 %1503, 1, !dbg !68
  %1675 = select i1 %1549, i32 %1674, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1673, ptr addrspace(8) %1551, i32 %1675, i32 0, i32 17), !dbg !68
  %1676 = fptrunc <4 x float> %1434 to <4 x bfloat>, !dbg !68
  %1677 = bitcast <4 x bfloat> %1676 to <2 x i32>, !dbg !68
  %1678 = shl i32 %1504, 1, !dbg !68
  %1679 = select i1 %1550, i32 %1678, i32 -2147483648, !dbg !68
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32> %1677, ptr addrspace(8) %1551, i32 %1679, i32 0, i32 17), !dbg !68
  br label %1680, !dbg !8

1680:                                             ; preds = %980, %15
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) readnone, i16, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.amdgcn.raw.ptr.buffer.load.lds(ptr addrspace(8) readonly captures(none), ptr addrspace(3) writeonly captures(none), i32 immarg, i32, i32, i32 immarg, i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i64 @llvm.amdgcn.ballot.i64(i1) #3

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #4

; Function Attrs: mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.waitcnt(i32 immarg) #5

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.scale.f32.16x16x128.f8f6f4.v4i32.v4i32(<4 x i32>, <4 x i32>, <4 x float>, i32 immarg, i32 immarg, i32 immarg, i32, i32 immarg, i32) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.amdgcn.raw.ptr.buffer.store.v2i32(<2 x i32>, ptr addrspace(8) writeonly captures(none), i32, i32, i32 immarg) #7

; Function Attrs: convergent nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.readlane.i32(i32, i32) #8

attributes #0 = { nofree norecurse nounwind "amdgpu-agpr-alloc"="0" "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-flat-scratch-init" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #4 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn }
attributes #6 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #7 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }
attributes #8 = { convergent nocallback nofree nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "gemm_afp4wfp4.py", directory: "/app/aiter/aiter/ops/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"amdhsa_code_object_version", i32 500}
!4 = distinct !DISubprogram(name: "_gemm_afp4_wfp4_kernel_preshuffled_scales", linkageName: "_gemm_afp4_wfp4_kernel_preshuffled_scales", scope: !1, file: !1, line: 177, type: !5, scopeLine: 177, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 247, column: 42, scope: !4)
!8 = !DILocation(line: 247, column: 7, scope: !4)
!9 = !DILocation(line: 228, column: 32, scope: !4)
!10 = !DILocation(line: 40, column: 22, scope: !11, inlinedAt: !13)
!11 = distinct !DILexicalBlockFile(scope: !4, file: !12, discriminator: 0)
!12 = !DIFile(filename: "standard.py", directory: "/app/OAI-triton/python/triton/language")
!13 = !DILocation(line: 232, column: 27, scope: !4)
!14 = !DILocation(line: 40, column: 28, scope: !11, inlinedAt: !13)
!15 = !DILocation(line: 51, column: 23, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !4, file: !17, discriminator: 0)
!17 = !DIFile(filename: "pid_preprocessing.py", directory: "/app/aiter/aiter/ops/triton/utils")
!18 = !DILocation(line: 237, column: 48, scope: !4)
!19 = !DILocation(line: 52, column: 22, scope: !16, inlinedAt: !18)
!20 = !DILocation(line: 253, column: 30, scope: !4)
!21 = !DILocation(line: 255, column: 27, scope: !4)
!22 = !DILocation(line: 255, column: 42, scope: !4)
!23 = !DILocation(line: 255, column: 72, scope: !4)
!24 = !DILocation(line: 256, column: 27, scope: !4)
!25 = !DILocation(line: 256, column: 55, scope: !4)
!26 = !DILocation(line: 256, column: 42, scope: !4)
!27 = !DILocation(line: 256, column: 72, scope: !4)
!28 = !DILocation(line: 258, column: 12, scope: !4)
!29 = !DILocation(line: 261, column: 12, scope: !4)
!30 = !DILocation(line: 266, column: 21, scope: !4)
!31 = !DILocation(line: 266, column: 57, scope: !4)
!32 = !DILocation(line: 266, column: 43, scope: !4)
!33 = !DILocation(line: 267, column: 12, scope: !4)
!34 = !DILocation(line: 274, column: 14, scope: !4)
!35 = !DILocation(line: 275, column: 14, scope: !4)
!36 = !DILocation(line: 289, column: 25, scope: !4)
!37 = !DILocation(line: 289, column: 47, scope: !4)
!38 = !DILocation(line: 290, column: 16, scope: !4)
!39 = !DILocation(line: 293, column: 18, scope: !4)
!40 = !DILocation(line: 294, column: 18, scope: !4)
!41 = !DILocation(line: 304, column: 31, scope: !4)
!42 = !{!43}
!43 = !{!"amdgpu.AsyncCopies", !44, !"Scope containing all AsyncCopyGlobalToLocal and BufferLoadToLocal ops"}
!44 = !{!"amdgpu.AsyncOps", !"Domain to hold alias scopes to specify aliasing information between AsyncCopyGlobalToLocal, BufferLoadToLocal and LocalLoad ops"}
!45 = !DILocation(line: 305, column: 31, scope: !4)
!46 = !DILocation(line: 321, column: 28, scope: !4)
!47 = !DILocation(line: 322, column: 28, scope: !4)
!48 = !DILocation(line: 334, column: 22, scope: !4)
!49 = !DILocation(line: 335, column: 22, scope: !4)
!50 = !DILocation(line: 339, column: 32, scope: !4)
!51 = !DILocation(line: 340, column: 28, scope: !4)
!52 = !DILocation(line: 303, column: 43, scope: !4)
!53 = !DILocation(line: 310, column: 117, scope: !4)
!54 = !{!55}
!55 = !{!"amdgpu.LocalLoads", !44, !"Scope containing all LocalLoad ops"}
!56 = !DILocation(line: 314, column: 113, scope: !4)
!57 = !DILocation(line: 331, column: 75, scope: !4)
!58 = !DILocation(line: 345, column: 71, scope: !4)
!59 = !DILocation(line: 345, column: 41, scope: !4)
!60 = !DILocation(line: 346, column: 71, scope: !4)
!61 = !DILocation(line: 346, column: 41, scope: !4)
!62 = !DILocation(line: 349, column: 26, scope: !4)
!63 = !DILocation(line: 349, column: 14, scope: !4)
!64 = !DILocation(line: 350, column: 14, scope: !4)
!65 = !DILocation(line: 353, column: 37, scope: !4)
!66 = !DILocation(line: 353, column: 62, scope: !4)
!67 = !DILocation(line: 353, column: 43, scope: !4)
!68 = !DILocation(line: 354, column: 25, scope: !4)
!69 = !DILocation(line: 247, column: 4, scope: !4)
